<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
  <depends_on path='/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation' />
  <depends_on path='/System/Library/Frameworks/ApplicationServices.framework/ApplicationServices' />
  <struct name='NSAffineTransformStruct' type='{_NSAffineTransformStruct="m11"f"m12"f"m21"f"m22"f"tX"f"tY"f}' type64='{_NSAffineTransformStruct="m11"d"m12"d"m21"d"m22"d"tX"d"tY"d}' />
  <struct name='NSDecimal' type='{_NSDecimal="_exponent"b8"_length"b4"_isNegative"b1"_isCompact"b1"_reserved"b18"_mantissa"[8S]}' type64='{_NSDecimal="_exponent"b8"_length"b4"_isNegative"b1"_isCompact"b1"_reserved"b18"_mantissa"[8S]}' />
  <struct name='NSPoint' type='{_NSPoint="x"f"y"f}' type64='{CGPoint="x"d"y"d}' />
  <struct name='NSRange' type='{_NSRange="location"I"length"I}' type64='{_NSRange="location"Q"length"Q}' />
  <struct name='NSRect' type='{_NSRect="origin"{_NSPoint="x"f"y"f}"size"{_NSSize="width"f"height"f}}' type64='{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}' />
  <struct name='NSSize' type='{_NSSize="width"f"height"f}' type64='{CGSize="width"d"height"d}' />
  <struct name='NSSwappedDouble' type='{_NSSwappedDouble="v"Q}' type64='{_NSSwappedDouble="v"Q}' />
  <struct name='NSSwappedFloat' type='{_NSSwappedFloat="v"I}' type64='{_NSSwappedFloat="v"I}' />
  <opaque name='NSAppleEventManagerSuspensionID' type='^{__NSAppleEventManagerSuspension=}' type64='^{__NSAppleEventManagerSuspension=}' />
  <opaque name='NSZone*' type='^{_NSZone=}' type64='^{_NSZone=}' />
  <constant name='NSAMPMDesignation' type='@' />
  <constant name='NSAppleEventManagerWillProcessFirstEventNotification' type='@' />
  <constant name='NSAppleEventTimeOutDefault' type='d' />
  <constant name='NSAppleEventTimeOutNone' type='d' />
  <constant name='NSAppleScriptErrorAppName' type='@' />
  <constant name='NSAppleScriptErrorBriefMessage' type='@' />
  <constant name='NSAppleScriptErrorMessage' type='@' />
  <constant name='NSAppleScriptErrorNumber' type='@' />
  <constant name='NSAppleScriptErrorRange' type='@' />
  <constant name='NSArgumentDomain' type='@' />
  <constant name='NSAverageKeyValueOperator' type='@' />
  <constant name='NSBuddhistCalendar' type='@' />
  <constant name='NSBundleDidLoadNotification' type='@' />
  <constant name='NSCharacterConversionException' type='@' />
  <constant name='NSChineseCalendar' type='@' />
  <constant name='NSClassDescriptionNeededForClassNotification' type='@' />
  <constant name='NSCocoaErrorDomain' type='@' />
  <constant name='NSConnectionDidDieNotification' type='@' />
  <constant name='NSConnectionDidInitializeNotification' type='@' />
  <constant name='NSConnectionReplyMode' type='@' />
  <constant name='NSCountKeyValueOperator' type='@' />
  <constant name='NSCurrencySymbol' type='@' />
  <constant name='NSCurrentLocaleDidChangeNotification' type='@' />
  <constant name='NSDateFormatString' type='@' />
  <constant name='NSDateTimeOrdering' type='@' />
  <constant name='NSDecimalDigits' type='@' />
  <constant name='NSDecimalNumberDivideByZeroException' type='@' />
  <constant name='NSDecimalNumberExactnessException' type='@' />
  <constant name='NSDecimalNumberOverflowException' type='@' />
  <constant name='NSDecimalNumberUnderflowException' type='@' />
  <constant name='NSDecimalSeparator' type='@' />
  <constant name='NSDefaultRunLoopMode' type='@' />
  <constant name='NSDestinationInvalidException' type='@' />
  <constant name='NSDidBecomeSingleThreadedNotification' type='@' />
  <constant name='NSDistinctUnionOfArraysKeyValueOperator' type='@' />
  <constant name='NSDistinctUnionOfObjectsKeyValueOperator' type='@' />
  <constant name='NSDistinctUnionOfSetsKeyValueOperator' type='@' />
  <constant name='NSEarlierTimeDesignations' type='@' />
  <constant name='NSErrorFailingURLStringKey' type='@' />
  <constant name='NSFTPPropertyActiveTransferModeKey' type='@' />
  <constant name='NSFTPPropertyFTPProxy' type='@' />
  <constant name='NSFTPPropertyFileOffsetKey' type='@' />
  <constant name='NSFTPPropertyUserLoginKey' type='@' />
  <constant name='NSFTPPropertyUserPasswordKey' type='@' />
  <constant name='NSFailedAuthenticationException' type='@' />
  <constant name='NSFileAppendOnly' type='@' />
  <constant name='NSFileBusy' type='@' />
  <constant name='NSFileCreationDate' type='@' />
  <constant name='NSFileDeviceIdentifier' type='@' />
  <constant name='NSFileExtensionHidden' type='@' />
  <constant name='NSFileGroupOwnerAccountID' type='@' />
  <constant name='NSFileGroupOwnerAccountName' type='@' />
  <constant name='NSFileHFSCreatorCode' type='@' />
  <constant name='NSFileHFSTypeCode' type='@' />
  <constant name='NSFileHandleConnectionAcceptedNotification' type='@' />
  <constant name='NSFileHandleDataAvailableNotification' type='@' />
  <constant name='NSFileHandleNotificationDataItem' type='@' />
  <constant name='NSFileHandleNotificationFileHandleItem' type='@' />
  <constant name='NSFileHandleNotificationMonitorModes' type='@' />
  <constant name='NSFileHandleOperationException' type='@' />
  <constant name='NSFileHandleReadCompletionNotification' type='@' />
  <constant name='NSFileHandleReadToEndOfFileCompletionNotification' type='@' />
  <constant name='NSFileImmutable' type='@' />
  <constant name='NSFileModificationDate' type='@' />
  <constant name='NSFileOwnerAccountID' type='@' />
  <constant name='NSFileOwnerAccountName' type='@' />
  <constant name='NSFilePathErrorKey' type='@' />
  <constant name='NSFilePosixPermissions' type='@' />
  <constant name='NSFileReferenceCount' type='@' />
  <constant name='NSFileSize' type='@' />
  <constant name='NSFileSystemFileNumber' type='@' />
  <constant name='NSFileSystemFreeNodes' type='@' />
  <constant name='NSFileSystemFreeSize' type='@' />
  <constant name='NSFileSystemNodes' type='@' />
  <constant name='NSFileSystemNumber' type='@' />
  <constant name='NSFileSystemSize' type='@' />
  <constant name='NSFileType' type='@' />
  <constant name='NSFileTypeBlockSpecial' type='@' />
  <constant name='NSFileTypeCharacterSpecial' type='@' />
  <constant name='NSFileTypeDirectory' type='@' />
  <constant name='NSFileTypeRegular' type='@' />
  <constant name='NSFileTypeSocket' type='@' />
  <constant name='NSFileTypeSymbolicLink' type='@' />
  <constant name='NSFileTypeUnknown' type='@' />
  <constant name='NSFoundationVersionNumber' type='d' />
  <constant name='NSGenericException' type='@' />
  <constant name='NSGlobalDomain' type='@' />
  <constant name='NSGrammarCorrections' type='@' />
  <constant name='NSGrammarRange' type='@' />
  <constant name='NSGrammarUserDescription' type='@' />
  <constant name='NSGregorianCalendar' type='@' />
  <constant name='NSHTTPCookieComment' type='@' />
  <constant name='NSHTTPCookieCommentURL' type='@' />
  <constant name='NSHTTPCookieDiscard' type='@' />
  <constant name='NSHTTPCookieDomain' type='@' />
  <constant name='NSHTTPCookieExpires' type='@' />
  <constant name='NSHTTPCookieManagerAcceptPolicyChangedNotification' type='@' />
  <constant name='NSHTTPCookieManagerCookiesChangedNotification' type='@' />
  <constant name='NSHTTPCookieMaximumAge' type='@' />
  <constant name='NSHTTPCookieName' type='@' />
  <constant name='NSHTTPCookieOriginURL' type='@' />
  <constant name='NSHTTPCookiePath' type='@' />
  <constant name='NSHTTPCookiePort' type='@' />
  <constant name='NSHTTPCookieSecure' type='@' />
  <constant name='NSHTTPCookieValue' type='@' />
  <constant name='NSHTTPCookieVersion' type='@' />
  <constant name='NSHTTPPropertyErrorPageDataKey' type='@' />
  <constant name='NSHTTPPropertyHTTPProxy' type='@' />
  <constant name='NSHTTPPropertyRedirectionHeadersKey' type='@' />
  <constant name='NSHTTPPropertyServerHTTPVersionKey' type='@' />
  <constant name='NSHTTPPropertyStatusCodeKey' type='@' />
  <constant name='NSHTTPPropertyStatusReasonKey' type='@' />
  <constant name='NSHebrewCalendar' type='@' />
  <constant name='NSHourNameDesignations' type='@' />
  <constant name='NSInconsistentArchiveException' type='@' />
  <constant name='NSIntHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' />
  <constant name='NSIntMapKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' />
  <constant name='NSIntMapValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' />
  <constant name='NSIntegerHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' />
  <constant name='NSIntegerMapKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' />
  <constant name='NSIntegerMapValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' />
  <constant name='NSInternalInconsistencyException' type='@' />
  <constant name='NSInternationalCurrencyString' type='@' />
  <constant name='NSInvalidArchiveOperationException' type='@' />
  <constant name='NSInvalidArgumentException' type='@' />
  <constant name='NSInvalidReceivePortException' type='@' />
  <constant name='NSInvalidSendPortException' type='@' />
  <constant name='NSInvalidUnarchiveOperationException' type='@' />
  <constant name='NSInvocationOperationCancelledException' type='@' />
  <constant name='NSInvocationOperationVoidResultException' type='@' />
  <constant name='NSIsNilTransformerName' type='@' />
  <constant name='NSIsNotNilTransformerName' type='@' />
  <constant name='NSIslamicCalendar' type='@' />
  <constant name='NSIslamicCivilCalendar' type='@' />
  <constant name='NSJapaneseCalendar' type='@' />
  <constant name='NSJavaClasses' type='@' />
  <constant name='NSJavaDidCreateVirtualMachineNotification' type='@' />
  <constant name='NSJavaDidSetupVirtualMachineNotification' type='@' />
  <constant name='NSJavaLibraryPath' type='@' />
  <constant name='NSJavaOwnVirtualMachine' type='@' />
  <constant name='NSJavaPath' type='@' />
  <constant name='NSJavaPathSeparator' type='@' />
  <constant name='NSJavaRoot' type='@' />
  <constant name='NSJavaUserPath' type='@' />
  <constant name='NSJavaWillCreateVirtualMachineNotification' type='@' />
  <constant name='NSJavaWillSetupVirtualMachineNotification' type='@' />
  <constant name='NSKeyValueChangeIndexesKey' type='@' />
  <constant name='NSKeyValueChangeKindKey' type='@' />
  <constant name='NSKeyValueChangeNewKey' type='@' />
  <constant name='NSKeyValueChangeNotificationIsPriorKey' type='@' />
  <constant name='NSKeyValueChangeOldKey' type='@' />
  <constant name='NSKeyedUnarchiveFromDataTransformerName' type='@' />
  <constant name='NSLaterTimeDesignations' type='@' />
  <constant name='NSLoadedClasses' type='@' />
  <constant name='NSLocalNotificationCenterType' type='@' />
  <constant name='NSLocaleCalendar' type='@' />
  <constant name='NSLocaleCollationIdentifier' type='@' />
  <constant name='NSLocaleCountryCode' type='@' />
  <constant name='NSLocaleCurrencyCode' type='@' />
  <constant name='NSLocaleCurrencySymbol' type='@' />
  <constant name='NSLocaleDecimalSeparator' type='@' />
  <constant name='NSLocaleExemplarCharacterSet' type='@' />
  <constant name='NSLocaleGroupingSeparator' type='@' />
  <constant name='NSLocaleIdentifier' type='@' />
  <constant name='NSLocaleLanguageCode' type='@' />
  <constant name='NSLocaleMeasurementSystem' type='@' />
  <constant name='NSLocaleScriptCode' type='@' />
  <constant name='NSLocaleUsesMetricSystem' type='@' />
  <constant name='NSLocaleVariantCode' type='@' />
  <constant name='NSLocalizedDescriptionKey' type='@' />
  <constant name='NSLocalizedFailureReasonErrorKey' type='@' />
  <constant name='NSLocalizedRecoveryOptionsErrorKey' type='@' />
  <constant name='NSLocalizedRecoverySuggestionErrorKey' type='@' />
  <constant name='NSMachErrorDomain' type='@' />
  <constant name='NSMallocException' type='@' />
  <constant name='NSMaximumKeyValueOperator' type='@' />
  <constant name='NSMetadataQueryDidFinishGatheringNotification' type='@' />
  <constant name='NSMetadataQueryDidStartGatheringNotification' type='@' />
  <constant name='NSMetadataQueryDidUpdateNotification' type='@' />
  <constant name='NSMetadataQueryGatheringProgressNotification' type='@' />
  <constant name='NSMetadataQueryLocalComputerScope' type='@' />
  <constant name='NSMetadataQueryNetworkScope' type='@' />
  <constant name='NSMetadataQueryResultContentRelevanceAttribute' type='@' />
  <constant name='NSMetadataQueryUserHomeScope' type='@' />
  <constant name='NSMinimumKeyValueOperator' type='@' />
  <constant name='NSMonthNameArray' type='@' />
  <constant name='NSNegateBooleanTransformerName' type='@' />
  <constant name='NSNegativeCurrencyFormatString' type='@' />
  <constant name='NSNetServicesErrorCode' type='@' />
  <constant name='NSNetServicesErrorDomain' type='@' />
  <constant name='NSNextDayDesignations' type='@' />
  <constant name='NSNextNextDayDesignations' type='@' />
  <constant name='NSNonOwnedPointerHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' />
  <constant name='NSNonOwnedPointerMapKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' />
  <constant name='NSNonOwnedPointerMapValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' />
  <constant name='NSNonOwnedPointerOrNullMapKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' />
  <constant name='NSNonRetainedObjectHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' />
  <constant name='NSNonRetainedObjectMapKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' />
  <constant name='NSNonRetainedObjectMapValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' />
  <constant name='NSOSStatusErrorDomain' type='@' />
  <constant name='NSObjectHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' />
  <constant name='NSObjectInaccessibleException' type='@' />
  <constant name='NSObjectMapKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' />
  <constant name='NSObjectMapValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' />
  <constant name='NSObjectNotAvailableException' type='@' />
  <constant name='NSOldStyleException' type='@' />
  <constant name='NSOperationNotSupportedForKeyException' type='@' />
  <constant name='NSOwnedObjectIdentityHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' />
  <constant name='NSOwnedPointerHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' />
  <constant name='NSOwnedPointerMapKeyCallBacks' type='{_NSMapTableKeyCallBacks=^?^?^?^?^?^v}' />
  <constant name='NSOwnedPointerMapValueCallBacks' type='{_NSMapTableValueCallBacks=^?^?^?}' />
  <constant name='NSPOSIXErrorDomain' type='@' />
  <constant name='NSParseErrorException' type='@' />
  <constant name='NSPointerToStructHashCallBacks' type='{_NSHashTableCallBacks=^?^?^?^?^?}' />
  <constant name='NSPortDidBecomeInvalidNotification' type='@' />
  <constant name='NSPortReceiveException' type='@' />
  <constant name='NSPortSendException' type='@' />
  <constant name='NSPortTimeoutException' type='@' />
  <constant name='NSPositiveCurrencyFormatString' type='@' />
  <constant name='NSPriorDayDesignations' type='@' />
  <constant name='NSRangeException' type='@' />
  <constant name='NSRecoveryAttempterErrorKey' type='@' />
  <constant name='NSRegistrationDomain' type='@' />
  <constant name='NSRunLoopCommonModes' type='@' />
  <constant name='NSShortDateFormatString' type='@' />
  <constant name='NSShortMonthNameArray' type='@' />
  <constant name='NSShortTimeDateFormatString' type='@' />
  <constant name='NSShortWeekDayNameArray' type='@' />
  <constant name='NSStreamDataWrittenToMemoryStreamKey' type='@' />
  <constant name='NSStreamFileCurrentOffsetKey' type='@' />
  <constant name='NSStreamSOCKSErrorDomain' type='@' />
  <constant name='NSStreamSOCKSProxyConfigurationKey' type='@' />
  <constant name='NSStreamSOCKSProxyHostKey' type='@' />
  <constant name='NSStreamSOCKSProxyPasswordKey' type='@' />
  <constant name='NSStreamSOCKSProxyPortKey' type='@' />
  <constant name='NSStreamSOCKSProxyUserKey' type='@' />
  <constant name='NSStreamSOCKSProxyVersion4' type='@' />
  <constant name='NSStreamSOCKSProxyVersion5' type='@' />
  <constant name='NSStreamSOCKSProxyVersionKey' type='@' />
  <constant name='NSStreamSocketSSLErrorDomain' type='@' />
  <constant name='NSStreamSocketSecurityLevelKey' type='@' />
  <constant name='NSStreamSocketSecurityLevelNegotiatedSSL' type='@' />
  <constant name='NSStreamSocketSecurityLevelNone' type='@' />
  <constant name='NSStreamSocketSecurityLevelSSLv2' type='@' />
  <constant name='NSStreamSocketSecurityLevelSSLv3' type='@' />
  <constant name='NSStreamSocketSecurityLevelTLSv1' type='@' />
  <constant name='NSStringEncodingErrorKey' type='@' />
  <constant name='NSSumKeyValueOperator' type='@' />
  <constant name='NSSystemTimeZoneDidChangeNotification' type='@' />
  <constant name='NSTaskDidTerminateNotification' type='@' />
  <constant name='NSThisDayDesignations' type='@' />
  <constant name='NSThousandsSeparator' type='@' />
  <constant name='NSThreadWillExitNotification' type='@' />
  <constant name='NSTimeDateFormatString' type='@' />
  <constant name='NSTimeFormatString' type='@' />
  <constant name='NSURLAuthenticationMethodDefault' type='@' />
  <constant name='NSURLAuthenticationMethodHTMLForm' type='@' />
  <constant name='NSURLAuthenticationMethodHTTPBasic' type='@' />
  <constant name='NSURLAuthenticationMethodHTTPDigest' type='@' />
  <constant name='NSURLCredentialStorageChangedNotification' type='@' />
  <constant name='NSURLErrorDomain' type='@' />
  <constant name='NSURLErrorKey' type='@' />
  <constant name='NSURLFileScheme' type='@' />
  <constant name='NSURLProtectionSpaceFTPProxy' type='@' />
  <constant name='NSURLProtectionSpaceHTTPProxy' type='@' />
  <constant name='NSURLProtectionSpaceHTTPSProxy' type='@' />
  <constant name='NSURLProtectionSpaceSOCKSProxy' type='@' />
  <constant name='NSUnarchiveFromDataTransformerName' type='@' />
  <constant name='NSUndefinedKeyException' type='@' />
  <constant name='NSUnderlyingErrorKey' type='@' />
  <constant name='NSUndoManagerCheckpointNotification' type='@' />
  <constant name='NSUndoManagerDidOpenUndoGroupNotification' type='@' />
  <constant name='NSUndoManagerDidRedoChangeNotification' type='@' />
  <constant name='NSUndoManagerDidUndoChangeNotification' type='@' />
  <constant name='NSUndoManagerWillCloseUndoGroupNotification' type='@' />
  <constant name='NSUndoManagerWillRedoChangeNotification' type='@' />
  <constant name='NSUndoManagerWillUndoChangeNotification' type='@' />
  <constant name='NSUnionOfArraysKeyValueOperator' type='@' />
  <constant name='NSUnionOfObjectsKeyValueOperator' type='@' />
  <constant name='NSUnionOfSetsKeyValueOperator' type='@' />
  <constant name='NSUserDefaultsDidChangeNotification' type='@' />
  <constant name='NSWeekDayNameArray' type='@' />
  <constant name='NSWillBecomeMultiThreadedNotification' type='@' />
  <constant name='NSXMLParserErrorDomain' type='@' />
  <constant name='NSYearMonthWeekDesignations' type='@' />
  <constant name='NSZeroPoint' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
  <constant name='NSZeroRect' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  <constant name='NSZeroSize' type='{_NSSize=ff}' type64='{CGSize=dd}' />
  <enum name='NSProprietaryStringEncoding' value='65536' />
  <enum name='NSASCIIStringEncoding' value='1' />
  <enum name='NSAdminApplicationDirectory' value='4' />
  <enum name='NSAggregateExpressionType' value='14' />
  <enum name='NSAllApplicationsDirectory' value='100' />
  <enum name='NSAllDomainsMask' value='65535' />
  <enum name='NSAllLibrariesDirectory' value='101' />
  <enum name='NSAllPredicateModifier' value='1' />
  <enum name='NSAnchoredSearch' value='8' />
  <enum name='NSAndPredicateType' value='1' />
  <enum name='NSAnyPredicateModifier' value='2' />
  <enum name='NSApplicationDirectory' value='1' />
  <enum name='NSApplicationSupportDirectory' value='14' />
  <enum name='NSArgumentEvaluationScriptError' value='3' />
  <enum name='NSArgumentsWrongScriptError' value='6' />
  <enum name='NSAtomicWrite' value='1' />
  <enum name='NSBackwardsSearch' value='4' />
  <enum name='NSBeginsWithComparison' value='5' />
  <enum name='NSBeginsWithPredicateOperatorType' value='8' />
  <enum name='NSBetweenPredicateOperatorType' value='100' />
  <enum name='NSBundleExecutableArchitectureI386' value='7' />
  <enum name='NSBundleExecutableArchitecturePPC' value='18' />
  <enum name='NSBundleExecutableArchitecturePPC64' value='16777234' />
  <enum name='NSBundleExecutableArchitectureX86_64' value='16777223' />
  <enum name='NSCachesDirectory' value='13' />
  <enum name='NSCalculationDivideByZero' value='4' />
  <enum name='NSCalculationLossOfPrecision' value='1' />
  <enum name='NSCalculationNoError' value='0' />
  <enum name='NSCalculationOverflow' value='3' />
  <enum name='NSCalculationUnderflow' value='2' />
  <enum name='NSCannotCreateScriptCommandError' value='10' />
  <enum name='NSCaseInsensitivePredicateOption' value='1' />
  <enum name='NSCaseInsensitiveSearch' value='1' />
  <enum name='NSCollectorDisabledOption' value='2' />
  <enum name='NSConstantValueExpressionType' value='0' />
  <enum name='NSContainerSpecifierError' value='2' />
  <enum name='NSContainsComparison' value='7' />
  <enum name='NSContainsPredicateOperatorType' value='99' />
  <enum name='NSCoreServiceDirectory' value='10' />
  <enum name='NSCustomSelectorPredicateOperatorType' value='11' />
  <enum name='NSDateFormatterBehavior10_0' value='1000' />
  <enum name='NSDateFormatterBehavior10_4' value='1040' />
  <enum name='NSDateFormatterBehaviorDefault' value='0' />
  <enum name='NSDateFormatterFullStyle' value='4' />
  <enum name='NSDateFormatterLongStyle' value='3' />
  <enum name='NSDateFormatterMediumStyle' value='2' />
  <enum name='NSDateFormatterNoStyle' value='0' />
  <enum name='NSDateFormatterShortStyle' value='1' />
  <enum name='NSDayCalendarUnit' value='16' />
  <enum name='NSDecimalMaxSize' value='8' />
  <enum name='NSDemoApplicationDirectory' value='2' />
  <enum name='NSDesktopDirectory' value='12' />
  <enum name='NSDeveloperApplicationDirectory' value='3' />
  <enum name='NSDeveloperDirectory' value='6' />
  <enum name='NSDiacriticInsensitivePredicateOption' value='2' />
  <enum name='NSDiacriticInsensitiveSearch' value='128' />
  <enum name='NSDirectPredicateModifier' value='0' />
  <enum name='NSDocumentDirectory' value='9' />
  <enum name='NSDocumentationDirectory' value='8' />
  <enum name='NSDownloadsDirectory' value='15' />
  <enum name='NSEndsWithComparison' value='6' />
  <enum name='NSEndsWithPredicateOperatorType' value='9' />
  <enum name='NSEqualToComparison' value='0' />
  <enum name='NSEqualToPredicateOperatorType' value='4' />
  <enum name='NSEraCalendarUnit' value='2' />
  <enum name='NSEvaluatedObjectExpressionType' value='1' />
  <enum name='NSEverySubelement' value='1' />
  <enum name='NSExecutableArchitectureMismatchError' value='3585' />
  <enum name='NSExecutableErrorMaximum' value='3839' />
  <enum name='NSExecutableErrorMinimum' value='3584' />
  <enum name='NSExecutableLinkError' value='3588' />
  <enum name='NSExecutableLoadError' value='3587' />
  <enum name='NSExecutableNotLoadableError' value='3584' />
  <enum name='NSExecutableRuntimeMismatchError' value='3586' />
  <enum name='NSFileErrorMaximum' value='1023' />
  <enum name='NSFileErrorMinimum' value='0' />
  <enum name='NSFileLockingError' value='255' />
  <enum name='NSFileNoSuchFileError' value='4' />
  <enum name='NSFileReadCorruptFileError' value='259' />
  <enum name='NSFileReadInapplicableStringEncodingError' value='261' />
  <enum name='NSFileReadInvalidFileNameError' value='258' />
  <enum name='NSFileReadNoPermissionError' value='257' />
  <enum name='NSFileReadNoSuchFileError' value='260' />
  <enum name='NSFileReadTooLargeError' value='263' />
  <enum name='NSFileReadUnknownError' value='256' />
  <enum name='NSFileReadUnknownStringEncodingError' value='264' />
  <enum name='NSFileReadUnsupportedSchemeError' value='262' />
  <enum name='NSFileWriteInapplicableStringEncodingError' value='517' />
  <enum name='NSFileWriteInvalidFileNameError' value='514' />
  <enum name='NSFileWriteNoPermissionError' value='513' />
  <enum name='NSFileWriteOutOfSpaceError' value='640' />
  <enum name='NSFileWriteUnknownError' value='512' />
  <enum name='NSFileWriteUnsupportedSchemeError' value='518' />
  <enum name='NSForcedOrderingSearch' value='512' />
  <enum name='NSFormattingError' value='2048' />
  <enum name='NSFormattingErrorMaximum' value='2559' />
  <enum name='NSFormattingErrorMinimum' value='2048' />
  <enum name='NSFoundationVersionNumber10_0' value='397.39999999999998' />
  <enum name='NSFoundationVersionNumber10_1' value='425.0' />
  <enum name='NSFoundationVersionNumber10_1_1' value='425.0' />
  <enum name='NSFoundationVersionNumber10_1_2' value='425.0' />
  <enum name='NSFoundationVersionNumber10_1_3' value='425.0' />
  <enum name='NSFoundationVersionNumber10_1_4' value='425.0' />
  <enum name='NSFoundationVersionNumber10_2' value='462.0' />
  <enum name='NSFoundationVersionNumber10_2_1' value='462.0' />
  <enum name='NSFoundationVersionNumber10_2_2' value='462.0' />
  <enum name='NSFoundationVersionNumber10_2_3' value='462.0' />
  <enum name='NSFoundationVersionNumber10_2_4' value='462.0' />
  <enum name='NSFoundationVersionNumber10_2_5' value='462.0' />
  <enum name='NSFoundationVersionNumber10_2_6' value='462.0' />
  <enum name='NSFoundationVersionNumber10_2_7' value='462.69999999999999' />
  <enum name='NSFoundationVersionNumber10_2_8' value='462.69999999999999' />
  <enum name='NSFoundationVersionNumber10_3' value='500.0' />
  <enum name='NSFoundationVersionNumber10_3_1' value='500.0' />
  <enum name='NSFoundationVersionNumber10_3_2' value='500.30000000000001' />
  <enum name='NSFoundationVersionNumber10_3_3' value='500.54000000000002' />
  <enum name='NSFoundationVersionNumber10_3_4' value='500.56' />
  <enum name='NSFoundationVersionNumber10_3_5' value='500.56' />
  <enum name='NSFoundationVersionNumber10_3_6' value='500.56' />
  <enum name='NSFoundationVersionNumber10_3_7' value='500.56' />
  <enum name='NSFoundationVersionNumber10_3_8' value='500.56' />
  <enum name='NSFoundationVersionNumber10_3_9' value='500.57999999999998' />
  <enum name='NSFoundationVersionNumber10_4' value='567.0' />
  <enum name='NSFoundationVersionNumber10_4_1' value='567.0' />
  <enum name='NSFoundationVersionNumber10_4_10' value='567.28999999999996' />
  <enum name='NSFoundationVersionNumber10_4_11' value='567.36000000000001' />
  <enum name='NSFoundationVersionNumber10_4_2' value='567.12' />
  <enum name='NSFoundationVersionNumber10_4_3' value='567.21000000000004' />
  <enum name='NSFoundationVersionNumber10_4_4_Intel' value='567.23000000000002' />
  <enum name='NSFoundationVersionNumber10_4_4_PowerPC' value='567.21000000000004' />
  <enum name='NSFoundationVersionNumber10_4_5' value='567.25' />
  <enum name='NSFoundationVersionNumber10_4_6' value='567.25999999999999' />
  <enum name='NSFoundationVersionNumber10_4_7' value='567.26999999999998' />
  <enum name='NSFoundationVersionNumber10_4_8' value='567.27999999999997' />
  <enum name='NSFoundationVersionNumber10_4_9' value='567.28999999999996' />
  <enum name='NSFoundationVersionWithFileManagerResourceForkSupport' value='412' />
  <enum name='NSFunctionExpressionType' value='4' />
  <enum name='NSGEOMETRY_TYPES_SAME_AS_CGGEOMETRY_TYPES' value64='1' />
  <enum name='NSGreaterThanComparison' value='4' />
  <enum name='NSGreaterThanOrEqualToComparison' value='3' />
  <enum name='NSGreaterThanOrEqualToPredicateOperatorType' value='3' />
  <enum name='NSGreaterThanPredicateOperatorType' value='2' />
  <enum name='NSHPUXOperatingSystem' value='4' />
  <enum name='NSHTTPCookieAcceptPolicyAlways' value='0' />
  <enum name='NSHTTPCookieAcceptPolicyNever' value='1' />
  <enum name='NSHTTPCookieAcceptPolicyOnlyFromMainDocumentDomain' value='2' />
  <enum name='NSHashTableCopyIn' value='65536' />
  <enum name='NSHashTableObjectPointerPersonality' value='512' />
  <enum name='NSHashTableStrongMemory' value='0' />
  <enum name='NSHashTableZeroingWeakMemory' value='1' />
  <enum name='NSHourCalendarUnit' value='32' />
  <enum name='NSINTEGER_DEFINED' value='1' />
  <enum name='NSISO2022JPStringEncoding' value='21' />
  <enum name='NSISOLatin1StringEncoding' value='5' />
  <enum name='NSISOLatin2StringEncoding' value='9' />
  <enum name='NSInPredicateOperatorType' value='10' />
  <enum name='NSIndexSubelement' value='0' />
  <enum name='NSIntegerMax' value='2147483647' value64='9223372036854775807' />
  <enum name='NSIntegerMin' value='-2147483648' value64='-9223372036854775808' />
  <enum name='NSInternalScriptError' value='8' />
  <enum name='NSInternalSpecifierError' value='5' />
  <enum name='NSIntersectSetExpressionType' value='6' />
  <enum name='NSInvalidIndexSpecifierError' value='4' />
  <enum name='NSJapaneseEUCStringEncoding' value='3' />
  <enum name='NSKeyPathExpressionType' value='3' />
  <enum name='NSKeySpecifierEvaluationScriptError' value='2' />
  <enum name='NSKeyValueChangeInsertion' value='2' />
  <enum name='NSKeyValueChangeRemoval' value='3' />
  <enum name='NSKeyValueChangeReplacement' value='4' />
  <enum name='NSKeyValueChangeSetting' value='1' />
  <enum name='NSKeyValueIntersectSetMutation' value='3' />
  <enum name='NSKeyValueMinusSetMutation' value='2' />
  <enum name='NSKeyValueObservingOptionInitial' value='4' />
  <enum name='NSKeyValueObservingOptionNew' value='1' />
  <enum name='NSKeyValueObservingOptionOld' value='2' />
  <enum name='NSKeyValueObservingOptionPrior' value='8' />
  <enum name='NSKeyValueSetSetMutation' value='4' />
  <enum name='NSKeyValueUnionSetMutation' value='1' />
  <enum name='NSKeyValueValidationError' value='1024' />
  <enum name='NSLessThanComparison' value='2' />
  <enum name='NSLessThanOrEqualToComparison' value='1' />
  <enum name='NSLessThanOrEqualToPredicateOperatorType' value='1' />
  <enum name='NSLessThanPredicateOperatorType' value='0' />
  <enum name='NSLibraryDirectory' value='5' />
  <enum name='NSLikePredicateOperatorType' value='7' />
  <enum name='NSLiteralSearch' value='2' />
  <enum name='NSLocalDomainMask' value='2' />
  <enum name='NSMACHOperatingSystem' value='5' />
  <enum name='NSMacOSRomanStringEncoding' value='30' />
  <enum name='NSMachPortDeallocateNone' value='0' />
  <enum name='NSMachPortDeallocateReceiveRight' value='2' />
  <enum name='NSMachPortDeallocateSendRight' value='1' />
  <enum name='NSMapTableCopyIn' value='65536' />
  <enum name='NSMapTableObjectPointerPersonality' value='512' />
  <enum name='NSMapTableStrongMemory' value='0' />
  <enum name='NSMapTableZeroingWeakMemory' value='1' />
  <enum name='NSMappedRead' value='1' />
  <enum name='NSMatchesPredicateOperatorType' value='6' />
  <enum name='NSMaxXEdge' value='2' />
  <enum name='NSMaxXEdge' value='2' />
  <enum name='NSMaxYEdge' value='3' />
  <enum name='NSMaxYEdge' value='3' />
  <enum name='NSMiddleSubelement' value='2' />
  <enum name='NSMinXEdge' value='0' />
  <enum name='NSMinXEdge' value='0' />
  <enum name='NSMinYEdge' value='1' />
  <enum name='NSMinYEdge' value='1' />
  <enum name='NSMinusSetExpressionType' value='7' />
  <enum name='NSMinuteCalendarUnit' value='64' />
  <enum name='NSMonthCalendarUnit' value='8' />
  <enum name='NSNEXTSTEPStringEncoding' value='2' />
  <enum name='NSNetServiceNoAutoRename' value='1' />
  <enum name='NSNetServicesActivityInProgress' value='-72003' />
  <enum name='NSNetServicesBadArgumentError' value='-72004' />
  <enum name='NSNetServicesCancelledError' value='-72005' />
  <enum name='NSNetServicesCollisionError' value='-72001' />
  <enum name='NSNetServicesInvalidError' value='-72006' />
  <enum name='NSNetServicesNotFoundError' value='-72002' />
  <enum name='NSNetServicesTimeoutError' value='-72007' />
  <enum name='NSNetServicesUnknownError' value='-72000' />
  <enum name='NSNetworkDomainMask' value='4' />
  <enum name='NSNoScriptError' value='0' />
  <enum name='NSNoSpecifierError' value='0' />
  <enum name='NSNoSubelement' value='4' />
  <enum name='NSNoTopLevelContainersSpecifierError' value='1' />
  <enum name='NSNonLossyASCIIStringEncoding' value='7' />
  <enum name='NSNotEqualToPredicateOperatorType' value='5' />
  <enum name='NSNotFound' value='2147483647' value64='-1' />
  <enum name='NSNotPredicateType' value='0' />
  <enum name='NSNotificationCoalescingOnName' value='1' />
  <enum name='NSNotificationCoalescingOnSender' value='2' />
  <enum name='NSNotificationDeliverImmediately' value='1' />
  <enum name='NSNotificationNoCoalescing' value='0' />
  <enum name='NSNotificationPostToAllSessions' value='2' />
  <enum name='NSNotificationSuspensionBehaviorCoalesce' value='2' />
  <enum name='NSNotificationSuspensionBehaviorDeliverImmediately' value='4' />
  <enum name='NSNotificationSuspensionBehaviorDrop' value='1' />
  <enum name='NSNotificationSuspensionBehaviorHold' value='3' />
  <enum name='NSNumberFormatterBehavior10_0' value='1000' />
  <enum name='NSNumberFormatterBehavior10_4' value='1040' />
  <enum name='NSNumberFormatterBehaviorDefault' value='0' />
  <enum name='NSNumberFormatterCurrencyStyle' value='2' />
  <enum name='NSNumberFormatterDecimalStyle' value='1' />
  <enum name='NSNumberFormatterNoStyle' value='0' />
  <enum name='NSNumberFormatterPadAfterPrefix' value='1' />
  <enum name='NSNumberFormatterPadAfterSuffix' value='3' />
  <enum name='NSNumberFormatterPadBeforePrefix' value='0' />
  <enum name='NSNumberFormatterPadBeforeSuffix' value='2' />
  <enum name='NSNumberFormatterPercentStyle' value='3' />
  <enum name='NSNumberFormatterRoundCeiling' value='0' />
  <enum name='NSNumberFormatterRoundDown' value='2' />
  <enum name='NSNumberFormatterRoundFloor' value='1' />
  <enum name='NSNumberFormatterRoundHalfDown' value='5' />
  <enum name='NSNumberFormatterRoundHalfEven' value='4' />
  <enum name='NSNumberFormatterRoundHalfUp' value='6' />
  <enum name='NSNumberFormatterRoundUp' value='3' />
  <enum name='NSNumberFormatterScientificStyle' value='4' />
  <enum name='NSNumberFormatterSpellOutStyle' value='5' />
  <enum name='NSNumericSearch' value='64' />
  <enum name='NSOSF1OperatingSystem' value='7' />
  <enum name='NSDecimalNoScale' value='32767' />
  <enum name='NSObjectAutoreleasedEvent' value='3' />
  <enum name='NSObjectExtraRefDecrementedEvent' value='5' />
  <enum name='NSObjectExtraRefIncrementedEvent' value='4' />
  <enum name='NSObjectInternalRefDecrementedEvent' value='7' />
  <enum name='NSObjectInternalRefIncrementedEvent' value='6' />
  <enum name='NSOpenStepUnicodeReservedBase' value='62464' />
  <enum name='NSOperationNotSupportedForKeyScriptError' value='9' />
  <enum name='NSOperationNotSupportedForKeySpecifierError' value='6' />
  <enum name='NSOperationQueueDefaultMaxConcurrentOperationCount' value='-1' />
  <enum name='NSOperationQueuePriorityHigh' value='4' />
  <enum name='NSOperationQueuePriorityLow' value='-4' />
  <enum name='NSOperationQueuePriorityNormal' value='0' />
  <enum name='NSOperationQueuePriorityVeryHigh' value='8' />
  <enum name='NSOperationQueuePriorityVeryLow' value='-8' />
  <enum name='NSOrPredicateType' value='2' />
  <enum name='NSOrderedAscending' value='-1' />
  <enum name='NSOrderedDescending' value='1' />
  <enum name='NSOrderedSame' value='0' />
  <enum name='NSPointerFunctionsCStringPersonality' value='768' />
  <enum name='NSPointerFunctionsCopyIn' value='65536' />
  <enum name='NSPointerFunctionsIntegerPersonality' value='1280' />
  <enum name='NSPointerFunctionsMachVirtualMemory' value='4' />
  <enum name='NSPointerFunctionsMallocMemory' value='3' />
  <enum name='NSPointerFunctionsObjectPersonality' value='0' />
  <enum name='NSPointerFunctionsObjectPointerPersonality' value='512' />
  <enum name='NSPointerFunctionsOpaqueMemory' value='2' />
  <enum name='NSPointerFunctionsOpaquePersonality' value='256' />
  <enum name='NSPointerFunctionsStrongMemory' value='0' />
  <enum name='NSPointerFunctionsStructPersonality' value='1024' />
  <enum name='NSPointerFunctionsZeroingWeakMemory' value='1' />
  <enum name='NSPositionAfter' value='0' />
  <enum name='NSPositionBefore' value='1' />
  <enum name='NSPositionBeginning' value='2' />
  <enum name='NSPositionEnd' value='3' />
  <enum name='NSPositionReplace' value='4' />
  <enum name='NSPostASAP' value='2' />
  <enum name='NSPostNow' value='3' />
  <enum name='NSPostWhenIdle' value='1' />
  <enum name='NSPropertyListBinaryFormat_v1_0' value='200' />
  <enum name='NSPropertyListImmutable' value='0' />
  <enum name='NSPropertyListMutableContainers' value='1' />
  <enum name='NSPropertyListMutableContainersAndLeaves' value='2' />
  <enum name='NSPropertyListOpenStepFormat' value='1' />
  <enum name='NSPropertyListXMLFormat_v1_0' value='100' />
  <enum name='NSRandomSubelement' value='3' />
  <enum name='NSReceiverEvaluationScriptError' value='1' />
  <enum name='NSReceiversCantHandleCommandScriptError' value='4' />
  <enum name='NSRelativeAfter' value='0' />
  <enum name='NSRelativeBefore' value='1' />
  <enum name='NSRequiredArgumentsMissingScriptError' value='5' />
  <enum name='NSRoundBankers' value='3' />
  <enum name='NSRoundDown' value='1' />
  <enum name='NSRoundPlain' value='0' />
  <enum name='NSRoundUp' value='2' />
  <enum name='NSSaveOptionsAsk' value='2' />
  <enum name='NSSaveOptionsNo' value='1' />
  <enum name='NSSaveOptionsYes' value='0' />
  <enum name='NSScannedOption' value='1' />
  <enum name='NSSecondCalendarUnit' value='128' />
  <enum name='NSShiftJISStringEncoding' value='8' />
  <enum name='NSSolarisOperatingSystem' value='3' />
  <enum name='NSStreamEventEndEncountered' value='16' />
  <enum name='NSStreamEventErrorOccurred' value='8' />
  <enum name='NSStreamEventHasBytesAvailable' value='2' />
  <enum name='NSStreamEventHasSpaceAvailable' value='4' />
  <enum name='NSStreamEventNone' value='0' />
  <enum name='NSStreamEventOpenCompleted' value='1' />
  <enum name='NSStreamStatusAtEnd' value='5' />
  <enum name='NSStreamStatusClosed' value='6' />
  <enum name='NSStreamStatusError' value='7' />
  <enum name='NSStreamStatusNotOpen' value='0' />
  <enum name='NSStreamStatusOpen' value='2' />
  <enum name='NSStreamStatusOpening' value='1' />
  <enum name='NSStreamStatusReading' value='3' />
  <enum name='NSStreamStatusWriting' value='4' />
  <enum name='NSStringEncodingConversionAllowLossy' value='1' />
  <enum name='NSStringEncodingConversionExternalRepresentation' value='2' />
  <enum name='NSSubqueryExpressionType' value='13' />
  <enum name='NSSunOSOperatingSystem' value='6' />
  <enum name='NSSymbolStringEncoding' value='6' />
  <enum name='NSSystemDomainMask' value='8' />
  <enum name='NSTimeIntervalSince1970' value='978307200.0' />
  <enum name='NSTimeZoneNameStyleDaylightSaving' value='2' />
  <enum name='NSTimeZoneNameStyleShortDaylightSaving' value='3' />
  <enum name='NSTimeZoneNameStyleShortStandard' value='1' />
  <enum name='NSTimeZoneNameStyleStandard' value='0' />
  <enum name='NSUIntegerMax' value='4294967295' value64='18446744073709551615' />
  <enum name='NSURLCacheStorageAllowed' value='0' />
  <enum name='NSURLCacheStorageAllowedInMemoryOnly' value='1' />
  <enum name='NSURLCacheStorageNotAllowed' value='2' />
  <enum name='NSURLCredentialPersistenceForSession' value='1' />
  <enum name='NSURLCredentialPersistenceNone' value='0' />
  <enum name='NSURLCredentialPersistencePermanent' value='2' />
  <enum name='NSURLErrorBadServerResponse' value='-1011' />
  <enum name='NSURLErrorBadURL' value='-1000' />
  <enum name='NSURLErrorCancelled' value='-999' />
  <enum name='NSURLErrorCannotCloseFile' value='-3002' />
  <enum name='NSURLErrorCannotConnectToHost' value='-1004' />
  <enum name='NSURLErrorCannotCreateFile' value='-3000' />
  <enum name='NSURLErrorCannotDecodeContentData' value='-1016' />
  <enum name='NSURLErrorCannotDecodeRawData' value='-1015' />
  <enum name='NSURLErrorCannotFindHost' value='-1003' />
  <enum name='NSURLErrorCannotLoadFromNetwork' value='-2000' />
  <enum name='NSURLErrorCannotMoveFile' value='-3005' />
  <enum name='NSURLErrorCannotOpenFile' value='-3001' />
  <enum name='NSURLErrorCannotParseResponse' value='-1017' />
  <enum name='NSURLErrorCannotRemoveFile' value='-3004' />
  <enum name='NSURLErrorCannotWriteToFile' value='-3003' />
  <enum name='NSURLErrorClientCertificateRejected' value='-1205' />
  <enum name='NSURLErrorDNSLookupFailed' value='-1006' />
  <enum name='NSURLErrorDataLengthExceedsMaximum' value='-1103' />
  <enum name='NSURLErrorDownloadDecodingFailedMidStream' value='-3006' />
  <enum name='NSURLErrorDownloadDecodingFailedToComplete' value='-3007' />
  <enum name='NSURLErrorFileDoesNotExist' value='-1100' />
  <enum name='NSURLErrorFileIsDirectory' value='-1101' />
  <enum name='NSURLErrorHTTPTooManyRedirects' value='-1007' />
  <enum name='NSURLErrorNetworkConnectionLost' value='-1005' />
  <enum name='NSURLErrorNoPermissionsToReadFile' value='-1102' />
  <enum name='NSURLErrorNotConnectedToInternet' value='-1009' />
  <enum name='NSURLErrorRedirectToNonExistentLocation' value='-1010' />
  <enum name='NSURLErrorResourceUnavailable' value='-1008' />
  <enum name='NSURLErrorSecureConnectionFailed' value='-1200' />
  <enum name='NSURLErrorServerCertificateHasBadDate' value='-1201' />
  <enum name='NSURLErrorServerCertificateHasUnknownRoot' value='-1203' />
  <enum name='NSURLErrorServerCertificateNotYetValid' value='-1204' />
  <enum name='NSURLErrorServerCertificateUntrusted' value='-1202' />
  <enum name='NSURLErrorTimedOut' value='-1001' />
  <enum name='NSURLErrorUnknown' value='-1' />
  <enum name='NSURLErrorUnsupportedURL' value='-1002' />
  <enum name='NSURLErrorUserAuthenticationRequired' value='-1013' />
  <enum name='NSURLErrorUserCancelledAuthentication' value='-1012' />
  <enum name='NSURLErrorZeroByteResource' value='-1014' />
  <enum name='NSURLHandleLoadFailed' value='3' />
  <enum name='NSURLHandleLoadInProgress' value='2' />
  <enum name='NSURLHandleLoadSucceeded' value='1' />
  <enum name='NSURLHandleNotLoaded' value='0' />
  <enum name='NSURLRequestReloadIgnoringCacheData' value='1' />
  <enum name='NSURLRequestReloadIgnoringLocalAndRemoteCacheData' value='4' />
  <enum name='NSURLRequestReloadIgnoringLocalCacheData' value='1' />
  <enum name='NSURLRequestReloadRevalidatingCacheData' value='5' />
  <enum name='NSURLRequestReturnCacheDataDontLoad' value='3' />
  <enum name='NSURLRequestReturnCacheDataElseLoad' value='2' />
  <enum name='NSURLRequestUseProtocolCachePolicy' value='0' />
  <enum name='NSURLResponseUnknownLength' value='-1' />
  <enum name='NSUTF16BigEndianStringEncoding' value='-1879047936' />
  <enum name='NSUTF16LittleEndianStringEncoding' value='-1811939072' />
  <enum name='NSUTF16StringEncoding' value='10' />
  <enum name='NSUTF32BigEndianStringEncoding' value='-1744830208' />
  <enum name='NSUTF32LittleEndianStringEncoding' value='-1677721344' />
  <enum name='NSUTF32StringEncoding' value='-1946156800' />
  <enum name='NSUTF8StringEncoding' value='4' />
  <enum name='NSUncachedRead' value='2' />
  <enum name='NSUndefinedDateComponent' value='2147483647' value64='-1' />
  <enum name='NSUndoCloseGroupingRunLoopOrdering' value='350000' />
  <enum name='NSUnicodeStringEncoding' value='10' />
  <enum name='NSUnionSetExpressionType' value='5' />
  <enum name='NSUnknownKeyScriptError' value='7' />
  <enum name='NSUnknownKeySpecifierError' value='3' />
  <enum name='NSUserCancelledError' value='3072' />
  <enum name='NSUserDirectory' value='7' />
  <enum name='NSUserDomainMask' value='1' />
  <enum name='NSValidationErrorMaximum' value='2047' />
  <enum name='NSValidationErrorMinimum' value='1024' />
  <enum name='NSVariableExpressionType' value='2' />
  <enum name='NSWeekCalendarUnit' value='256' />
  <enum name='NSWeekdayCalendarUnit' value='512' />
  <enum name='NSWeekdayOrdinalCalendarUnit' value='1024' />
  <enum name='NSWidthInsensitiveSearch' value='256' />
  <enum name='NSWindows95OperatingSystem' value='2' />
  <enum name='NSWindowsCP1250StringEncoding' value='15' />
  <enum name='NSWindowsCP1251StringEncoding' value='11' />
  <enum name='NSWindowsCP1252StringEncoding' value='12' />
  <enum name='NSWindowsCP1253StringEncoding' value='13' />
  <enum name='NSWindowsCP1254StringEncoding' value='14' />
  <enum name='NSWindowsNTOperatingSystem' value='1' />
  <enum name='NSWrapCalendarComponents' value='1' />
  <enum name='NSXMLAttributeCDATAKind' value='6' />
  <enum name='NSXMLAttributeDeclarationKind' value='10' />
  <enum name='NSXMLAttributeEntitiesKind' value='11' />
  <enum name='NSXMLAttributeEntityKind' value='10' />
  <enum name='NSXMLAttributeEnumerationKind' value='14' />
  <enum name='NSXMLAttributeIDKind' value='7' />
  <enum name='NSXMLAttributeIDRefKind' value='8' />
  <enum name='NSXMLAttributeIDRefsKind' value='9' />
  <enum name='NSXMLAttributeKind' value='3' />
  <enum name='NSXMLAttributeNMTokenKind' value='12' />
  <enum name='NSXMLAttributeNMTokensKind' value='13' />
  <enum name='NSXMLAttributeNotationKind' value='15' />
  <enum name='NSXMLCommentKind' value='6' />
  <enum name='NSXMLDTDKind' value='8' />
  <enum name='NSXMLDocumentHTMLKind' value='2' />
  <enum name='NSXMLDocumentIncludeContentTypeDeclaration' value='262144' />
  <enum name='NSXMLDocumentKind' value='1' />
  <enum name='NSXMLDocumentTextKind' value='3' />
  <enum name='NSXMLDocumentTidyHTML' value='512' />
  <enum name='NSXMLDocumentTidyXML' value='1024' />
  <enum name='NSXMLDocumentValidate' value='8192' />
  <enum name='NSXMLDocumentXHTMLKind' value='1' />
  <enum name='NSXMLDocumentXInclude' value='65536' />
  <enum name='NSXMLDocumentXMLKind' value='0' />
  <enum name='NSXMLElementDeclarationAnyKind' value='18' />
  <enum name='NSXMLElementDeclarationElementKind' value='20' />
  <enum name='NSXMLElementDeclarationEmptyKind' value='17' />
  <enum name='NSXMLElementDeclarationKind' value='11' />
  <enum name='NSXMLElementDeclarationMixedKind' value='19' />
  <enum name='NSXMLElementDeclarationUndefinedKind' value='16' />
  <enum name='NSXMLElementKind' value='2' />
  <enum name='NSXMLEntityDeclarationKind' value='9' />
  <enum name='NSXMLEntityGeneralKind' value='1' />
  <enum name='NSXMLEntityParameterKind' value='4' />
  <enum name='NSXMLEntityParsedKind' value='2' />
  <enum name='NSXMLEntityPredefined' value='5' />
  <enum name='NSXMLEntityUnparsedKind' value='3' />
  <enum name='NSXMLInvalidKind' value='0' />
  <enum name='NSXMLNamespaceKind' value='4' />
  <enum name='NSXMLNodeCompactEmptyElement' value='4' />
  <enum name='NSXMLNodeExpandEmptyElement' value='2' />
  <enum name='NSXMLNodeIsCDATA' value='1' />
  <enum name='NSXMLNodeOptionsNone' value='0' />
  <enum name='NSXMLNodePreserveAll' value='-1048546' />
  <enum name='NSXMLNodePreserveAttributeOrder' value='2097152' />
  <enum name='NSXMLNodePreserveCDATA' value='16777216' />
  <enum name='NSXMLNodePreserveCharacterReferences' value='134217728' />
  <enum name='NSXMLNodePreserveDTD' value='67108864' />
  <enum name='NSXMLNodePreserveEmptyElements' value='6' />
  <enum name='NSXMLNodePreserveEntities' value='4194304' />
  <enum name='NSXMLNodePreserveNamespaceOrder' value='1048576' />
  <enum name='NSXMLNodePreservePrefixes' value='8388608' />
  <enum name='NSXMLNodePreserveQuotes' value='24' />
  <enum name='NSXMLNodePreserveWhitespace' value='33554432' />
  <enum name='NSXMLNodePrettyPrint' value='131072' />
  <enum name='NSXMLNodeUseDoubleQuotes' value='16' />
  <enum name='NSXMLNodeUseSingleQuotes' value='8' />
  <enum name='NSXMLNotationDeclarationKind' value='12' />
  <enum name='NSXMLParserAttributeHasNoValueError' value='41' />
  <enum name='NSXMLParserAttributeListNotFinishedError' value='51' />
  <enum name='NSXMLParserAttributeListNotStartedError' value='50' />
  <enum name='NSXMLParserAttributeNotFinishedError' value='40' />
  <enum name='NSXMLParserAttributeNotStartedError' value='39' />
  <enum name='NSXMLParserAttributeRedefinedError' value='42' />
  <enum name='NSXMLParserCDATANotFinishedError' value='63' />
  <enum name='NSXMLParserCharacterRefAtEOFError' value='10' />
  <enum name='NSXMLParserCharacterRefInDTDError' value='13' />
  <enum name='NSXMLParserCharacterRefInEpilogError' value='12' />
  <enum name='NSXMLParserCharacterRefInPrologError' value='11' />
  <enum name='NSXMLParserCommentContainsDoubleHyphenError' value='80' />
  <enum name='NSXMLParserCommentNotFinishedError' value='45' />
  <enum name='NSXMLParserConditionalSectionNotFinishedError' value='59' />
  <enum name='NSXMLParserConditionalSectionNotStartedError' value='58' />
  <enum name='NSXMLParserDOCTYPEDeclNotFinishedError' value='61' />
  <enum name='NSXMLParserDelegateAbortedParseError' value='512' />
  <enum name='NSXMLParserDocumentStartError' value='3' />
  <enum name='NSXMLParserElementContentDeclNotFinishedError' value='55' />
  <enum name='NSXMLParserElementContentDeclNotStartedError' value='54' />
  <enum name='NSXMLParserEmptyDocumentError' value='4' />
  <enum name='NSXMLParserEncodingNotSupportedError' value='32' />
  <enum name='NSXMLParserEntityBoundaryError' value='90' />
  <enum name='NSXMLParserEntityIsExternalError' value='29' />
  <enum name='NSXMLParserEntityIsParameterError' value='30' />
  <enum name='NSXMLParserEntityNotFinishedError' value='37' />
  <enum name='NSXMLParserEntityNotStartedError' value='36' />
  <enum name='NSXMLParserEntityRefAtEOFError' value='14' />
  <enum name='NSXMLParserEntityRefInDTDError' value='17' />
  <enum name='NSXMLParserEntityRefInEpilogError' value='16' />
  <enum name='NSXMLParserEntityRefInPrologError' value='15' />
  <enum name='NSXMLParserEntityRefLoopError' value='89' />
  <enum name='NSXMLParserEntityReferenceMissingSemiError' value='23' />
  <enum name='NSXMLParserEntityReferenceWithoutNameError' value='22' />
  <enum name='NSXMLParserEntityValueRequiredError' value='84' />
  <enum name='NSXMLParserEqualExpectedError' value='75' />
  <enum name='NSXMLParserExternalStandaloneEntityError' value='82' />
  <enum name='NSXMLParserExternalSubsetNotFinishedError' value='60' />
  <enum name='NSXMLParserExtraContentError' value='86' />
  <enum name='NSXMLParserGTRequiredError' value='73' />
  <enum name='NSXMLParserInternalError' value='1' />
  <enum name='NSXMLParserInvalidCharacterError' value='9' />
  <enum name='NSXMLParserInvalidCharacterInEntityError' value='87' />
  <enum name='NSXMLParserInvalidCharacterRefError' value='8' />
  <enum name='NSXMLParserInvalidConditionalSectionError' value='83' />
  <enum name='NSXMLParserInvalidDecimalCharacterRefError' value='7' />
  <enum name='NSXMLParserInvalidEncodingError' value='81' />
  <enum name='NSXMLParserInvalidEncodingNameError' value='79' />
  <enum name='NSXMLParserInvalidHexCharacterRefError' value='6' />
  <enum name='NSXMLParserInvalidURIError' value='91' />
  <enum name='NSXMLParserLTRequiredError' value='72' />
  <enum name='NSXMLParserLTSlashRequiredError' value='74' />
  <enum name='NSXMLParserLessThanSymbolInAttributeError' value='38' />
  <enum name='NSXMLParserLiteralNotFinishedError' value='44' />
  <enum name='NSXMLParserLiteralNotStartedError' value='43' />
  <enum name='NSXMLParserMisplacedCDATAEndStringError' value='62' />
  <enum name='NSXMLParserMisplacedXMLDeclarationError' value='64' />
  <enum name='NSXMLParserMixedContentDeclNotFinishedError' value='53' />
  <enum name='NSXMLParserMixedContentDeclNotStartedError' value='52' />
  <enum name='NSXMLParserNAMERequiredError' value='68' />
  <enum name='NSXMLParserNMTOKENRequiredError' value='67' />
  <enum name='NSXMLParserNamespaceDeclarationError' value='35' />
  <enum name='NSXMLParserNoDTDError' value='94' />
  <enum name='NSXMLParserNotWellBalancedError' value='85' />
  <enum name='NSXMLParserNotationNotFinishedError' value='49' />
  <enum name='NSXMLParserNotationNotStartedError' value='48' />
  <enum name='NSXMLParserOutOfMemoryError' value='2' />
  <enum name='NSXMLParserPCDATARequiredError' value='69' />
  <enum name='NSXMLParserParsedEntityRefAtEOFError' value='18' />
  <enum name='NSXMLParserParsedEntityRefInEpilogError' value='20' />
  <enum name='NSXMLParserParsedEntityRefInInternalError' value='88' />
  <enum name='NSXMLParserParsedEntityRefInInternalSubsetError' value='21' />
  <enum name='NSXMLParserParsedEntityRefInPrologError' value='19' />
  <enum name='NSXMLParserParsedEntityRefMissingSemiError' value='25' />
  <enum name='NSXMLParserParsedEntityRefNoNameError' value='24' />
  <enum name='NSXMLParserPrematureDocumentEndError' value='5' />
  <enum name='NSXMLParserProcessingInstructionNotFinishedError' value='47' />
  <enum name='NSXMLParserProcessingInstructionNotStartedError' value='46' />
  <enum name='NSXMLParserPublicIdentifierRequiredError' value='71' />
  <enum name='NSXMLParserSeparatorRequiredError' value='66' />
  <enum name='NSXMLParserSpaceRequiredError' value='65' />
  <enum name='NSXMLParserStandaloneValueError' value='78' />
  <enum name='NSXMLParserStringNotClosedError' value='34' />
  <enum name='NSXMLParserStringNotStartedError' value='33' />
  <enum name='NSXMLParserTagNameMismatchError' value='76' />
  <enum name='NSXMLParserURIFragmentError' value='92' />
  <enum name='NSXMLParserURIRequiredError' value='70' />
  <enum name='NSXMLParserUndeclaredEntityError' value='26' />
  <enum name='NSXMLParserUnfinishedTagError' value='77' />
  <enum name='NSXMLParserUnknownEncodingError' value='31' />
  <enum name='NSXMLParserUnparsedEntityError' value='28' />
  <enum name='NSXMLParserXMLDeclNotFinishedError' value='57' />
  <enum name='NSXMLParserXMLDeclNotStartedError' value='56' />
  <enum name='NSXMLProcessingInstructionKind' value='5' />
  <enum name='NSXMLTextKind' value='7' />
  <enum name='NSYearCalendarUnit' value='4' />
  <enum name='NS_BigEndian' value='2' />
  <enum name='NS_LittleEndian' value='1' />
  <enum name='NS_UNICHAR_IS_EIGHT_BIT' value='0' />
  <enum name='NS_UnknownByteOrder' value='0' />
  <function name='NSDecimalAdd' >
    <retval type='I' type64='Q' />
    <arg type='^{_NSDecimal=}' />
    <arg type='^{_NSDecimal=}' />
    <arg type='^{_NSDecimal=}' />
    <arg type='I' type64='Q' />
  </function>
  <function name='NSDecimalDivide' >
    <retval type='I' type64='Q' />
    <arg type='^{_NSDecimal=}' />
    <arg type='^{_NSDecimal=}' />
    <arg type='^{_NSDecimal=}' />
    <arg type='I' type64='Q' />
  </function>
  <function name='NSDecimalMultiply' >
    <retval type='I' type64='Q' />
    <arg type='^{_NSDecimal=}' />
    <arg type='^{_NSDecimal=}' />
    <arg type='^{_NSDecimal=}' />
    <arg type='I' type64='Q' />
  </function>
  <function name='NSDecimalSubtract' >
    <retval type='I' type64='Q' />
    <arg type='^{_NSDecimal=}' />
    <arg type='^{_NSDecimal=}' />
    <arg type='^{_NSDecimal=}' />
    <arg type='I' type64='Q' />
  </function>
  <function name='NSDecimalCopy' >
    <retval type='v' type64='v' />
    <arg type='^{_NSDecimal=}' />
    <arg type='^{_NSDecimal=}' />
  </function>
  <function name='NSDecimalCompare' >
    <retval type='i' />
    <arg type='^{_NSDecimal=}' />
    <arg type='^{_NSDecimal=}' />
  </function>
  <function name='NSDecimalRound' >
    <retval type='v' />
    <arg type='^{_NSDecimal=}' />
    <arg type='^{_NSDecimal=}' />
    <arg type='I' type64='Q' />
    <arg type='I' type64='Q' />
  </function>
  <function name='NSDecimalNormalize' >
    <retval type='I' type64='Q' />
    <arg type='^{_NSDecimal=}' />
    <arg type='^{_NSDecimal=}' />
    <arg type='I' type64='Q' />
  </function>
  <function name='NSDecimalPower' >
    <retval type='I' type64='Q' />
    <arg type='^{_NSDecimal=}' />
    <arg type='^{_NSDecimal=}' />
    <arg type='I' type64='Q' />
    <arg type='I' type64='Q' />
  </function>
  <function name='NSDecimalString' >
    <retval type='@' />
    <arg type='^{_NSDecimal=}' />
    <arg type='@' />
  </function>
  <function name='NSDecimalCompact' >
    <retval type='v' type64='v' />
    <arg type='^{_NSDecimal=}' />
  </function>
  <function name='NSDecimalIsNotANumber' >
    <retval type='B' type64='B' />
    <arg type='^{_NSDecimal=}' />
  </function>
  <function name='NSAllHashTableObjects'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSAllMapTableKeys'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSAllMapTableValues'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSAllocateObject'>
    <retval type='@' type64='@' />
    <arg type='#' type64='#' />
    <arg type='I' type64='Q' />
    <arg type='^{_NSZone=}' />
  </function>
  <function name='NSClassFromString'>
    <retval type='#' type64='#' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSCompareHashTables'>
    <retval type='B' type64='B' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSCompareMapTables'>
    <retval type='B' type64='B' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSContainsRect'>
    <retval type='B' type64='B' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSCopyHashTableWithZone'>
    <retval already_cfretained='true' type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='^{_NSZone=}' />
  </function>
  <function name='NSCopyMapTableWithZone'>
    <retval already_cfretained='true' type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='^{_NSZone=}' />
  </function>
  <function name='NSCopyObject'>
    <retval already_cfretained='true' type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='I' type64='Q' />
    <arg type='^{_NSZone=}' />
  </function>
  <function name='NSCountHashTable'>
    <retval type='I' type64='Q' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSCountMapTable'>
    <retval type='I' type64='Q' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSCreateHashTable'>
    <retval already_cfretained='true' type='@' type64='@' />
    <arg type='{NSHashTableCallBacks=^?^?^?^?^?}' type64='{NSHashTableCallBacks=^?^?^?^?^?}' />
    <arg type='I' type64='Q' />
  </function>
  <function name='NSCreateHashTableWithZone'>
    <retval already_cfretained='true' type='@' type64='@' />
    <arg type='{NSHashTableCallBacks=^?^?^?^?^?}' type64='{NSHashTableCallBacks=^?^?^?^?^?}' />
    <arg type='I' type64='Q' />
    <arg type='^{_NSZone=}' />
  </function>
  <function name='NSCreateMapTable'>
    <retval already_cfretained='true' type='@' type64='@' />
    <arg type='{NSMapTableKeyCallBacks=^?^?^?^?^?^v}' type64='{NSMapTableKeyCallBacks=^?^?^?^?^?^v}' />
    <arg type='{NSMapTableValueCallBacks=^?^?^?}' type64='{NSMapTableValueCallBacks=^?^?^?}' />
    <arg type='I' type64='Q' />
  </function>
  <function name='NSCreateMapTableWithZone'>
    <retval already_cfretained='true' type='@' type64='@' />
    <arg type='{NSMapTableKeyCallBacks=^?^?^?^?^?^v}' type64='{NSMapTableKeyCallBacks=^?^?^?^?^?^v}' />
    <arg type='{NSMapTableValueCallBacks=^?^?^?}' type64='{NSMapTableValueCallBacks=^?^?^?}' />
    <arg type='I' type64='Q' />
    <arg type='^{_NSZone=}' />
  </function>
  <function name='NSCreateZone'>
    <retval type='^{_NSZone=}' />
    <arg type='I' type64='Q' />
    <arg type='I' type64='Q' />
    <arg type='B' type64='B' />
  </function>
  <function name='NSDeallocateObject'>
    <retval type='v' type64='v' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSDecrementExtraRefCountWasZero'>
    <retval type='B' type64='B' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSDefaultMallocZone'>
    <retval type='^{_NSZone=}' />
  </function>
  <function name='NSDivideRect'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg null_accepted='false' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type_modifier='o' />
    <arg null_accepted='false' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type_modifier='o' />
    <arg type='f' type64='d' />
    <arg type='I' />
  </function>
  <function name='NSEnumerateHashTable'>
    <retval type='{NSHashEnumerator=II^v}' type64='{NSHashEnumerator=QQ^v}' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSEnumerateMapTable'>
    <retval type='{NSMapEnumerator=II^v}' type64='{NSMapEnumerator=QQ^v}' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSEqualPoints'>
    <retval type='B' type64='B' />
    <arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    <arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
  </function>
  <function name='NSEqualRects'>
    <retval type='B' type64='B' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSEqualSizes'>
    <retval type='B' type64='B' />
    <arg type='{_NSSize=ff}' type64='{CGSize=dd}' />
    <arg type='{_NSSize=ff}' type64='{CGSize=dd}' />
  </function>
  <function name='NSExtraRefCount'>
    <retval type='I' type64='Q' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSFileTypeForHFSTypeCode'>
    <retval type='@' type64='@' />
    <arg type='L' type64='I' />
  </function>
  <function name='NSFreeHashTable'>
    <retval type='v' type64='v' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSFreeMapTable'>
    <retval type='v' type64='v' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSFullUserName'>
    <retval type='@' type64='@' />
  </function>
  <function name='NSGetSizeAndAlignment'>
    <retval c_array_delimited_by_null='true' type='^t' type64='^t' />
    <arg c_array_delimited_by_null='true' type='^t' type64='^t' type_modifier='n' />
    <arg type='^I' type64='^I' type_modifier='o' />
    <arg type='^I' type64='^I' type_modifier='o' />
  </function>
  <function name='NSHFSTypeCodeFromFileType'>
    <retval type='L' type64='I' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSHFSTypeOfFile'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSHomeDirectory'>
    <retval type='@' type64='@' />
  </function>
  <function name='NSHomeDirectoryForUser'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSIncrementExtraRefCount'>
    <retval type='v' type64='v' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSInsetRect'>
    <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function name='NSIntegralRect'>
    <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSIntersectionRange'>
    <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    <arg type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    <arg type='{_NSRange=II}' type64='{_NSRange=QQ}' />
  </function>
  <function name='NSIntersectionRect'>
    <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSIntersectsRect'>
    <retval type='B' type64='B' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSIsEmptyRect'>
    <retval type='B' type64='B' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSIsFreedObject'>
    <retval type='B' type64='B' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSJavaBundleCleanup'>
    <retval type='v' type64='v' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSJavaBundleSetup'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSJavaClassesForBundle'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='B' type64='B' />
    <arg type='^@' type_modifier='o' />
  </function>
  <function name='NSJavaClassesFromPath'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='B' type64='B' />
    <arg type='^@' type_modifier='o' />
  </function>
  <function name='NSJavaNeedsToLoadClasses'>
    <retval type='B' type64='B' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSJavaNeedsVirtualMachine'>
    <retval type='B' type64='B' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSJavaObjectNamedInPath'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSJavaProvidesClasses'>
    <retval type='B' type64='B' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSJavaSetup'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSJavaSetupVirtualMachine'>
    <retval type='@' type64='@' />
  </function>
  <function name='NSLog' variadic='true'>
    <retval type='v' type64='v' />
    <arg printf_format='true' type='@' type64='@' />
  </function>
  <function name='NSLogPageSize'>
    <retval type='I' type64='Q' />
  </function>
  <function name='NSMouseInRect'>
    <retval type='B' type64='B' />
    <arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='B' type64='B' />
  </function>
  <function name='NSOffsetRect'>
    <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function name='NSOpenStepRootDirectory'>
    <retval type='@' type64='@' />
  </function>
  <function name='NSPageSize'>
    <retval type='I' type64='Q' />
  </function>
  <function name='NSPointFromString'>
    <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSPointInRect'>
    <retval type='B' type64='B' />
    <arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSProtocolFromString'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSRangeFromString'>
    <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSRealMemoryAvailable'>
    <retval type='I' type64='Q' />
  </function>
  <function name='NSRecordAllocationEvent'>
    <retval type='v' type64='v' />
    <arg type='i' type64='i' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSRectFromString'>
    <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSRecycleZone'>
    <retval type='v' type64='v' />
    <arg type='^{_NSZone=}' />
  </function>
  <function name='NSResetHashTable'>
    <retval type='v' type64='v' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSResetMapTable'>
    <retval type='v' type64='v' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSRoundDownToMultipleOfPageSize'>
    <retval type='I' type64='Q' />
    <arg type='I' type64='Q' />
  </function>
  <function name='NSRoundUpToMultipleOfPageSize'>
    <retval type='I' type64='Q' />
    <arg type='I' type64='Q' />
  </function>
  <function name='NSSearchPathForDirectoriesInDomains'>
    <retval type='@' type64='@' />
    <arg type='I' />
    <arg type='I' />
    <arg type='B' type64='B' />
  </function>
  <function name='NSSelectorFromString'>
    <retval type=':' type64=':' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSSetZoneName'>
    <retval type='v' type64='v' />
    <arg type='^{_NSZone=}' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSShouldRetainWithZone'>
    <retval type='B' type64='B' />
    <arg type='@' type64='@' />
    <arg type='^{_NSZone=}' />
  </function>
  <function name='NSSizeFromString'>
    <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSStringFromClass'>
    <retval type='@' type64='@' />
    <arg type='#' type64='#' />
  </function>
  <function name='NSStringFromHashTable'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSStringFromMapTable'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSStringFromPoint'>
    <retval type='@' type64='@' />
    <arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
  </function>
  <function name='NSStringFromProtocol'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSStringFromRange'>
    <retval type='@' type64='@' />
    <arg type='{_NSRange=II}' type64='{_NSRange=QQ}' />
  </function>
  <function name='NSStringFromRect'>
    <retval type='@' type64='@' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSStringFromSelector'>
    <retval type='@' type64='@' />
    <arg type=':' type64=':' />
  </function>
  <function name='NSStringFromSize'>
    <retval type='@' type64='@' />
    <arg type='{_NSSize=ff}' type64='{CGSize=dd}' />
  </function>
  <function name='NSTemporaryDirectory'>
    <retval type='@' type64='@' />
  </function>
  <function name='NSUnionRange'>
    <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    <arg type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    <arg type='{_NSRange=II}' type64='{_NSRange=QQ}' />
  </function>
  <function name='NSUnionRect'>
    <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSUserName'>
    <retval type='@' type64='@' />
  </function>
  <function name='NSZoneName'>
    <retval type='@' type64='@' />
    <arg type='^{_NSZone=}' />
  </function>
  <function name='NXReadNSObjectFromCoder'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function inline='true' name='NSConvertHostDoubleToSwapped'>
    <retval type='{_NSSwappedDouble=Q}' type64='{_NSSwappedDouble=Q}' />
    <arg type='d' type64='d' />
  </function>
  <function inline='true' name='NSConvertHostFloatToSwapped'>
    <retval type='{_NSSwappedFloat=I}' type64='{_NSSwappedFloat=I}' />
    <arg type='f' type64='f' />
  </function>
  <function inline='true' name='NSConvertSwappedDoubleToHost'>
    <retval type='d' type64='d' />
    <arg type='{_NSSwappedDouble=Q}' type64='{_NSSwappedDouble=Q}' />
  </function>
  <function inline='true' name='NSConvertSwappedFloatToHost'>
    <retval type='f' type64='f' />
    <arg type='{_NSSwappedFloat=I}' type64='{_NSSwappedFloat=I}' />
  </function>
  <function inline='true' name='NSEqualRanges'>
    <retval type='B' type64='B' />
    <arg type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    <arg type='{_NSRange=II}' type64='{_NSRange=QQ}' />
  </function>
  <function inline='true' name='NSHeight'>
    <retval type='f' type64='d' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function inline='true' name='NSHostByteOrder'>
    <retval type='l' type64='q' />
  </function>
  <function inline='true' name='NSLocationInRange'>
    <retval type='B' type64='B' />
    <arg type='I' type64='Q' />
    <arg type='{_NSRange=II}' type64='{_NSRange=QQ}' />
  </function>
  <function inline='true' name='NSMakeCollectable'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function inline='true' name='NSMakePoint'>
    <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function inline='true' name='NSMakeRange'>
    <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    <arg type='I' type64='Q' />
    <arg type='I' type64='Q' />
  </function>
  <function inline='true' name='NSMakeRect'>
    <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function inline='true' name='NSMakeSize'>
    <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function inline='true' name='NSMaxRange'>
    <retval type='I' type64='Q' />
    <arg type='{_NSRange=II}' type64='{_NSRange=QQ}' />
  </function>
  <function inline='true' name='NSMaxX'>
    <retval type='f' type64='d' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function inline='true' name='NSMaxY'>
    <retval type='f' type64='d' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function inline='true' name='NSMidX'>
    <retval type='f' type64='d' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function inline='true' name='NSMidY'>
    <retval type='f' type64='d' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function inline='true' name='NSMinX'>
    <retval type='f' type64='d' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function inline='true' name='NSMinY'>
    <retval type='f' type64='d' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function inline='true' name='NSPointFromCGPoint'>
    <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    <arg type='{CGPoint=ff}' type64='{CGPoint=dd}' />
  </function>
  <function inline='true' name='NSPointToCGPoint'>
    <retval type='{CGPoint=ff}' type64='{CGPoint=dd}' />
    <arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
  </function>
  <function inline='true' name='NSRectFromCGRect'>
    <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function inline='true' name='NSRectToCGRect'>
    <retval type='{CGRect={CGPoint=ff}{CGSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function inline='true' name='NSSizeFromCGSize'>
    <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    <arg type='{CGSize=ff}' type64='{CGSize=dd}' />
  </function>
  <function inline='true' name='NSSizeToCGSize'>
    <retval type='{CGSize=ff}' type64='{CGSize=dd}' />
    <arg type='{_NSSize=ff}' type64='{CGSize=dd}' />
  </function>
  <function inline='true' name='NSSwapBigDoubleToHost'>
    <retval type='d' type64='d' />
    <arg type='{_NSSwappedDouble=Q}' type64='{_NSSwappedDouble=Q}' />
  </function>
  <function inline='true' name='NSSwapBigDoubleToHost'>
    <retval type='d' type64='d' />
    <arg type='{_NSSwappedDouble=Q}' type64='{_NSSwappedDouble=Q}' />
  </function>
  <function inline='true' name='NSSwapBigFloatToHost'>
    <retval type='f' type64='f' />
    <arg type='{_NSSwappedFloat=I}' type64='{_NSSwappedFloat=I}' />
  </function>
  <function inline='true' name='NSSwapBigFloatToHost'>
    <retval type='f' type64='f' />
    <arg type='{_NSSwappedFloat=I}' type64='{_NSSwappedFloat=I}' />
  </function>
  <function inline='true' name='NSSwapBigIntToHost'>
    <retval type='I' type64='I' />
    <arg type='I' type64='I' />
  </function>
  <function inline='true' name='NSSwapBigLongLongToHost'>
    <retval type='Q' type64='Q' />
    <arg type='Q' type64='Q' />
  </function>
  <function inline='true' name='NSSwapBigLongToHost'>
    <retval type='L' type64='Q' />
    <arg type='L' type64='Q' />
  </function>
  <function inline='true' name='NSSwapBigShortToHost'>
    <retval type='S' type64='S' />
    <arg type='S' type64='S' />
  </function>
  <function inline='true' name='NSSwapDouble'>
    <retval type='{_NSSwappedDouble=Q}' type64='{_NSSwappedDouble=Q}' />
    <arg type='{_NSSwappedDouble=Q}' type64='{_NSSwappedDouble=Q}' />
  </function>
  <function inline='true' name='NSSwapFloat'>
    <retval type='{_NSSwappedFloat=I}' type64='{_NSSwappedFloat=I}' />
    <arg type='{_NSSwappedFloat=I}' type64='{_NSSwappedFloat=I}' />
  </function>
  <function inline='true' name='NSSwapHostDoubleToBig'>
    <retval type='{_NSSwappedDouble=Q}' type64='{_NSSwappedDouble=Q}' />
    <arg type='d' type64='d' />
  </function>
  <function inline='true' name='NSSwapHostDoubleToBig'>
    <retval type='{_NSSwappedDouble=Q}' type64='{_NSSwappedDouble=Q}' />
    <arg type='d' type64='d' />
  </function>
  <function inline='true' name='NSSwapHostDoubleToLittle'>
    <retval type='{_NSSwappedDouble=Q}' type64='{_NSSwappedDouble=Q}' />
    <arg type='d' type64='d' />
  </function>
  <function inline='true' name='NSSwapHostDoubleToLittle'>
    <retval type='{_NSSwappedDouble=Q}' type64='{_NSSwappedDouble=Q}' />
    <arg type='d' type64='d' />
  </function>
  <function inline='true' name='NSSwapHostFloatToBig'>
    <retval type='{_NSSwappedFloat=I}' type64='{_NSSwappedFloat=I}' />
    <arg type='f' type64='f' />
  </function>
  <function inline='true' name='NSSwapHostFloatToBig'>
    <retval type='{_NSSwappedFloat=I}' type64='{_NSSwappedFloat=I}' />
    <arg type='f' type64='f' />
  </function>
  <function inline='true' name='NSSwapHostFloatToLittle'>
    <retval type='{_NSSwappedFloat=I}' type64='{_NSSwappedFloat=I}' />
    <arg type='f' type64='f' />
  </function>
  <function inline='true' name='NSSwapHostFloatToLittle'>
    <retval type='{_NSSwappedFloat=I}' type64='{_NSSwappedFloat=I}' />
    <arg type='f' type64='f' />
  </function>
  <function inline='true' name='NSSwapHostIntToBig'>
    <retval type='I' type64='I' />
    <arg type='I' type64='I' />
  </function>
  <function inline='true' name='NSSwapHostIntToLittle'>
    <retval type='I' type64='I' />
    <arg type='I' type64='I' />
  </function>
  <function inline='true' name='NSSwapHostLongLongToBig'>
    <retval type='Q' type64='Q' />
    <arg type='Q' type64='Q' />
  </function>
  <function inline='true' name='NSSwapHostLongLongToLittle'>
    <retval type='Q' type64='Q' />
    <arg type='Q' type64='Q' />
  </function>
  <function inline='true' name='NSSwapHostLongToBig'>
    <retval type='L' type64='Q' />
    <arg type='L' type64='Q' />
  </function>
  <function inline='true' name='NSSwapHostLongToLittle'>
    <retval type='L' type64='Q' />
    <arg type='L' type64='Q' />
  </function>
  <function inline='true' name='NSSwapHostShortToBig'>
    <retval type='S' type64='S' />
    <arg type='S' type64='S' />
  </function>
  <function inline='true' name='NSSwapHostShortToLittle'>
    <retval type='S' type64='S' />
    <arg type='S' type64='S' />
  </function>
  <function inline='true' name='NSSwapInt'>
    <retval type='I' type64='I' />
    <arg type='I' type64='I' />
  </function>
  <function inline='true' name='NSSwapLittleDoubleToHost'>
    <retval type='d' type64='d' />
    <arg type='{_NSSwappedDouble=Q}' type64='{_NSSwappedDouble=Q}' />
  </function>
  <function inline='true' name='NSSwapLittleDoubleToHost'>
    <retval type='d' type64='d' />
    <arg type='{_NSSwappedDouble=Q}' type64='{_NSSwappedDouble=Q}' />
  </function>
  <function inline='true' name='NSSwapLittleFloatToHost'>
    <retval type='f' type64='f' />
    <arg type='{_NSSwappedFloat=I}' type64='{_NSSwappedFloat=I}' />
  </function>
  <function inline='true' name='NSSwapLittleFloatToHost'>
    <retval type='f' type64='f' />
    <arg type='{_NSSwappedFloat=I}' type64='{_NSSwappedFloat=I}' />
  </function>
  <function inline='true' name='NSSwapLittleIntToHost'>
    <retval type='I' type64='I' />
    <arg type='I' type64='I' />
  </function>
  <function inline='true' name='NSSwapLittleLongLongToHost'>
    <retval type='Q' type64='Q' />
    <arg type='Q' type64='Q' />
  </function>
  <function inline='true' name='NSSwapLittleLongToHost'>
    <retval type='L' type64='Q' />
    <arg type='L' type64='Q' />
  </function>
  <function inline='true' name='NSSwapLittleShortToHost'>
    <retval type='S' type64='S' />
    <arg type='S' type64='S' />
  </function>
  <function inline='true' name='NSSwapLong'>
    <retval type='L' type64='Q' />
    <arg type='L' type64='Q' />
  </function>
  <function inline='true' name='NSSwapLongLong'>
    <retval type='Q' type64='Q' />
    <arg type='Q' type64='Q' />
  </function>
  <function inline='true' name='NSSwapShort'>
    <retval type='S' type64='S' />
    <arg type='S' type64='S' />
  </function>
  <function inline='true' name='NSWidth'>
    <retval type='f' type64='d' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <informal_protocol name='NSArchiverCallback'>
    <method selector='classForArchiver' type='#@:' />
    <method selector='replacementObjectForArchiver:' type='@@:@' />
  </informal_protocol>
  <informal_protocol name='NSClassDescriptionPrimitives'>
    <method selector='attributeKeys' type='@@:' />
    <method selector='classDescription' type='@@:' />
    <method selector='inverseForRelationshipKey:' type='@@:@' />
    <method selector='toManyRelationshipKeys' type='@@:' />
    <method selector='toOneRelationshipKeys' type='@@:' />
  </informal_protocol>
  <informal_protocol name='NSCoderMethods'>
    <method selector='awakeAfterUsingCoder:' type='@@:@' />
    <method selector='classForCoder' type='#@:' />
    <method selector='replacementObjectForCoder:' type='@@:@' />
    <method class_method='true' selector='setVersion:' type='v@:i' type64='v@:q' />
    <method class_method='true' selector='version' type='i@:' type64='q@:' />
  </informal_protocol>
  <informal_protocol name='NSComparisonMethods'>
    <method selector='doesContain:' type='B@:@' />
    <method selector='isCaseInsensitiveLike:' type='B@:@' />
    <method selector='isEqualTo:' type='B@:@' />
    <method selector='isGreaterThan:' type='B@:@' />
    <method selector='isGreaterThanOrEqualTo:' type='B@:@' />
    <method selector='isLessThan:' type='B@:@' />
    <method selector='isLessThanOrEqualTo:' type='B@:@' />
    <method selector='isLike:' type='B@:@' />
    <method selector='isNotEqualTo:' type='B@:@' />
  </informal_protocol>
  <informal_protocol name='NSConnectionDelegateMethods'>
    <method selector='authenticateComponents:withData:' type='B@:@@' />
    <method selector='authenticationDataForComponents:' type='@@:@' />
    <method selector='connection:shouldMakeNewConnection:' type='B@:@@' />
    <method selector='createConversationForConnection:' type='@@:@' />
    <method selector='makeNewConnection:sender:' type='B@:@@' />
  </informal_protocol>
  <informal_protocol name='NSCopyLinkMoveHandler'>
    <method selector='fileManager:shouldProceedAfterError:' type='B@:@@' />
    <method selector='fileManager:willProcessPath:' type='v@:@@' />
  </informal_protocol>
  <informal_protocol name='NSDelayedPerforming'>
    <method class_method='true' selector='cancelPreviousPerformRequestsWithTarget:' type='v@:@' />
    <method class_method='true' selector='cancelPreviousPerformRequestsWithTarget:selector:object:' type='v@:@:@' />
    <method selector='performSelector:withObject:afterDelay:' type='v@::@d' />
    <method selector='performSelector:withObject:afterDelay:inModes:' type='v@::@d@' />
  </informal_protocol>
  <informal_protocol name='NSDeprecatedKeyValueCoding'>
    <method selector='handleQueryWithUnboundKey:' type='@@:@' />
    <method selector='handleTakeValue:forUnboundKey:' type='v@:@@' />
    <method selector='storedValueForKey:' type='@@:@' />
    <method selector='takeStoredValue:forKey:' type='v@:@@' />
    <method selector='takeValue:forKey:' type='v@:@@' />
    <method selector='takeValue:forKeyPath:' type='v@:@@' />
    <method selector='takeValuesFromDictionary:' type='v@:@' />
    <method selector='unableToSetNilForKey:' type='v@:@' />
    <method class_method='true' selector='useStoredAccessor' type='B@:' />
    <method selector='valuesForKeys:' type='@@:@' />
  </informal_protocol>
  <informal_protocol name='NSDeprecatedKeyValueObservingCustomization'>
    <method class_method='true' selector='setKeys:triggerChangeNotificationsForDependentKey:' type='v@:@@' />
  </informal_protocol>
  <informal_protocol name='NSDeprecatedMethods'>
    <method class_method='true' selector='poseAsClass:' type='v@:#' />
  </informal_protocol>
  <informal_protocol name='NSDistantObjectRequestMethods'>
    <method selector='connection:handleRequest:' type='B@:@@' />
  </informal_protocol>
  <informal_protocol name='NSDistributedObjects'>
    <method selector='classForPortCoder' type='#@:' />
    <method selector='replacementObjectForPortCoder:' type='@@:@' />
  </informal_protocol>
  <informal_protocol name='NSErrorRecoveryAttempting'>
    <method selector='attemptRecoveryFromError:optionIndex:' type='B@:@I' type64='B@:@Q' />
    <method selector='attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:' type='v@:@I@:^v' type64='v@:@Q@:^v' />
  </informal_protocol>
  <informal_protocol name='NSFileManagerFileOperationAdditions'>
    <method selector='fileManager:shouldCopyItemAtPath:toPath:' type='B@:@@@' />
    <method selector='fileManager:shouldLinkItemAtPath:toPath:' type='B@:@@@' />
    <method selector='fileManager:shouldMoveItemAtPath:toPath:' type='B@:@@@' />
    <method selector='fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:' type='B@:@@@@' />
    <method selector='fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:' type='B@:@@@@' />
    <method selector='fileManager:shouldProceedAfterError:movingItemAtPath:toPath:' type='B@:@@@@' />
    <method selector='fileManager:shouldProceedAfterError:removingItemAtPath:' type='B@:@@@' />
    <method selector='fileManager:shouldRemoveItemAtPath:' type='B@:@@' />
  </informal_protocol>
  <informal_protocol name='NSKeyValueCoding'>
    <method class_method='true' selector='accessInstanceVariablesDirectly' type='B@:' />
    <method selector='dictionaryWithValuesForKeys:' type='@@:@' />
    <method selector='mutableArrayValueForKey:' type='@@:@' />
    <method selector='mutableArrayValueForKeyPath:' type='@@:@' />
    <method selector='mutableSetValueForKey:' type='@@:@' />
    <method selector='mutableSetValueForKeyPath:' type='@@:@' />
    <method selector='setNilValueForKey:' type='v@:@' />
    <method selector='setValue:forKey:' type='v@:@@' />
    <method selector='setValue:forKeyPath:' type='v@:@@' />
    <method selector='setValue:forUndefinedKey:' type='v@:@@' />
    <method selector='setValuesForKeysWithDictionary:' type='v@:@' />
    <method selector='validateValue:forKey:error:' type='B@:^@@^@' />
    <method selector='validateValue:forKeyPath:error:' type='B@:^@@^@' />
    <method selector='valueForKey:' type='@@:@' />
    <method selector='valueForKeyPath:' type='@@:@' />
    <method selector='valueForUndefinedKey:' type='@@:@' />
  </informal_protocol>
  <informal_protocol name='NSKeyValueObserverNotification'>
    <method selector='didChange:valuesAtIndexes:forKey:' type='v@:I@@' />
    <method selector='didChangeValueForKey:' type='v@:@' />
    <method selector='didChangeValueForKey:withSetMutation:usingObjects:' type='v@:@I@' />
    <method selector='willChange:valuesAtIndexes:forKey:' type='v@:I@@' />
    <method selector='willChangeValueForKey:' type='v@:@' />
    <method selector='willChangeValueForKey:withSetMutation:usingObjects:' type='v@:@I@' />
  </informal_protocol>
  <informal_protocol name='NSKeyValueObserverRegistration'>
    <method selector='addObserver:forKeyPath:options:context:' type='v@:@@I^v' />
    <method selector='removeObserver:forKeyPath:' type='v@:@@' />
  </informal_protocol>
  <informal_protocol name='NSKeyValueObserving'>
    <method selector='observeValueForKeyPath:ofObject:change:context:' type='v@:@@@^v' />
  </informal_protocol>
  <informal_protocol name='NSKeyValueObservingCustomization'>
    <method class_method='true' selector='automaticallyNotifiesObserversForKey:' type='B@:@' />
    <method class_method='true' selector='keyPathsForValuesAffectingValueForKey:' type='@@:@' />
    <method selector='observationInfo' type='^v@:' />
    <method selector='setObservationInfo:' type='v@:^v' />
  </informal_protocol>
  <informal_protocol name='NSKeyedArchiverDelegate'>
    <method selector='archiver:didEncodeObject:' type='v@:@@' />
    <method selector='archiver:willEncodeObject:' type='@@:@@' />
    <method selector='archiver:willReplaceObject:withObject:' type='v@:@@@' />
    <method selector='archiverDidFinish:' type='v@:@' />
    <method selector='archiverWillFinish:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSKeyedArchiverObjectSubstitution'>
    <method class_method='true' selector='classFallbacksForKeyedArchiver' type='@@:' />
    <method selector='classForKeyedArchiver' type='#@:' />
    <method selector='replacementObjectForKeyedArchiver:' type='@@:@' />
  </informal_protocol>
  <informal_protocol name='NSKeyedUnarchiverDelegate'>
    <method selector='unarchiver:cannotDecodeObjectOfClassName:originalClasses:' type='#@:@@@' />
    <method selector='unarchiver:didDecodeObject:' type='@@:@@' />
    <method selector='unarchiver:willReplaceObject:withObject:' type='v@:@@@' />
    <method selector='unarchiverDidFinish:' type='v@:@' />
    <method selector='unarchiverWillFinish:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSKeyedUnarchiverObjectSubstitution'>
    <method class_method='true' selector='classForKeyedUnarchiver' type='#@:' />
  </informal_protocol>
  <informal_protocol name='NSMachPortDelegateMethods'>
    <method selector='handleMachMessage:' type='v@:^v' />
  </informal_protocol>
  <informal_protocol name='NSMetadataQueryDelegate'>
    <method selector='metadataQuery:replacementObjectForResultObject:' type='@@:@@' />
    <method selector='metadataQuery:replacementValueForAttribute:value:' type='@@:@@@' />
  </informal_protocol>
  <informal_protocol name='NSNetServiceBrowserDelegateMethods'>
    <method selector='netServiceBrowser:didFindDomain:moreComing:' type='v@:@@B' />
    <method selector='netServiceBrowser:didFindService:moreComing:' type='v@:@@B' />
    <method selector='netServiceBrowser:didNotSearch:' type='v@:@@' />
    <method selector='netServiceBrowser:didRemoveDomain:moreComing:' type='v@:@@B' />
    <method selector='netServiceBrowser:didRemoveService:moreComing:' type='v@:@@B' />
    <method selector='netServiceBrowserDidStopSearch:' type='v@:@' />
    <method selector='netServiceBrowserWillSearch:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSNetServiceDelegateMethods'>
    <method selector='netService:didNotPublish:' type='v@:@@' />
    <method selector='netService:didNotResolve:' type='v@:@@' />
    <method selector='netService:didUpdateTXTRecordData:' type='v@:@@' />
    <method selector='netServiceDidPublish:' type='v@:@' />
    <method selector='netServiceDidResolveAddress:' type='v@:@' />
    <method selector='netServiceDidStop:' type='v@:@' />
    <method selector='netServiceWillPublish:' type='v@:@' />
    <method selector='netServiceWillResolve:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSPortDelegateMethods'>
    <method selector='handlePortMessage:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSScriptClassDescription'>
    <method selector='classCode' type='L@:' type64='I@:' />
    <method selector='className' type='@@:' />
  </informal_protocol>
  <informal_protocol name='NSScriptKeyValueCoding'>
    <method selector='coerceValue:forKey:' type='@@:@@' />
    <method selector='insertValue:atIndex:inPropertyWithKey:' type='v@:@I@' type64='v@:@Q@' />
    <method selector='insertValue:inPropertyWithKey:' type='v@:@@' />
    <method selector='removeValueAtIndex:fromPropertyWithKey:' type='v@:I@' type64='v@:Q@' />
    <method selector='replaceValueAtIndex:inPropertyWithKey:withValue:' type='v@:I@@' type64='v@:Q@@' />
    <method selector='valueAtIndex:inPropertyWithKey:' type='@@:I@' type64='@@:Q@' />
    <method selector='valueWithName:inPropertyWithKey:' type='@@:@@' />
    <method selector='valueWithUniqueID:inPropertyWithKey:' type='@@:@@' />
  </informal_protocol>
  <informal_protocol name='NSScriptObjectSpecifiers'>
    <method selector='indicesOfObjectsByEvaluatingObjectSpecifier:' type='@@:@' />
    <method selector='objectSpecifier' type='@@:' />
  </informal_protocol>
  <informal_protocol name='NSScripting'>
    <method selector='copyScriptingValue:forKey:withProperties:' type='@@:@@@' />
    <method selector='newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:' type='@@:#@@@' />
    <method selector='scriptingProperties' type='@@:' />
    <method selector='scriptingValueForSpecifier:' type='@@:@' />
    <method selector='setScriptingProperties:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSScriptingComparisonMethods'>
    <method selector='scriptingBeginsWith:' type='B@:@' />
    <method selector='scriptingContains:' type='B@:@' />
    <method selector='scriptingEndsWith:' type='B@:@' />
    <method selector='scriptingIsEqualTo:' type='B@:@' />
    <method selector='scriptingIsGreaterThan:' type='B@:@' />
    <method selector='scriptingIsGreaterThanOrEqualTo:' type='B@:@' />
    <method selector='scriptingIsLessThan:' type='B@:@' />
    <method selector='scriptingIsLessThanOrEqualTo:' type='B@:@' />
  </informal_protocol>
  <informal_protocol name='NSSpellServerDelegate'>
    <method selector='spellServer:checkGrammarInString:language:details:' type='{_NSRange=II}@:@@@^@' type64='{_NSRange=QQ}@:@@@^@' />
    <method selector='spellServer:didForgetWord:inLanguage:' type='v@:@@@' />
    <method selector='spellServer:didLearnWord:inLanguage:' type='v@:@@@' />
    <method selector='spellServer:findMisspelledWordInString:language:wordCount:countOnly:' type='{_NSRange=II}@:@@@^iB' type64='{_NSRange=QQ}@:@@@^qB' />
    <method selector='spellServer:suggestCompletionsForPartialWordRange:inString:language:' type='@@:@{_NSRange=II}@@' type64='@@:@{_NSRange=QQ}@@' />
    <method selector='spellServer:suggestGuessesForWord:inLanguage:' type='@@:@@@' />
  </informal_protocol>
  <informal_protocol name='NSStreamDelegateEventExtensions'>
    <method selector='stream:handleEvent:' type='v@:@I' />
  </informal_protocol>
  <informal_protocol name='NSThreadPerformAdditions'>
    <method selector='performSelector:onThread:withObject:waitUntilDone:' type='v@::@@B' />
    <method selector='performSelector:onThread:withObject:waitUntilDone:modes:' type='v@::@@B@' />
    <method selector='performSelectorInBackground:withObject:' type='v@::@' />
    <method selector='performSelectorOnMainThread:withObject:waitUntilDone:' type='v@::@B' />
    <method selector='performSelectorOnMainThread:withObject:waitUntilDone:modes:' type='v@::@B@' />
  </informal_protocol>
  <informal_protocol name='NSURLClient'>
    <method selector='URL:resourceDataDidBecomeAvailable:' type='v@:@@' />
    <method selector='URL:resourceDidFailLoadingWithReason:' type='v@:@@' />
    <method selector='URLResourceDidCancelLoading:' type='v@:@' />
    <method selector='URLResourceDidFinishLoading:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSURLConnectionDelegate'>
    <method selector='connection:didCancelAuthenticationChallenge:' type='v@:@@' />
    <method selector='connection:didFailWithError:' type='v@:@@' />
    <method selector='connection:didReceiveAuthenticationChallenge:' type='v@:@@' />
    <method selector='connection:didReceiveData:' type='v@:@@' />
    <method selector='connection:didReceiveResponse:' type='v@:@@' />
    <method selector='connection:willCacheResponse:' type='@@:@@' />
    <method selector='connection:willSendRequest:redirectResponse:' type='@@:@@@' />
    <method selector='connectionDidFinishLoading:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSURLDownloadDelegate'>
    <method selector='download:decideDestinationWithSuggestedFilename:' type='v@:@@' />
    <method selector='download:didCancelAuthenticationChallenge:' type='v@:@@' />
    <method selector='download:didCreateDestination:' type='v@:@@' />
    <method selector='download:didFailWithError:' type='v@:@@' />
    <method selector='download:didReceiveAuthenticationChallenge:' type='v@:@@' />
    <method selector='download:didReceiveDataOfLength:' type='v@:@I' type64='v@:@Q' />
    <method selector='download:didReceiveResponse:' type='v@:@@' />
    <method selector='download:shouldDecodeSourceDataOfMIMEType:' type='B@:@@' />
    <method selector='download:willResumeWithResponse:fromByte:' type='v@:@@q' />
    <method selector='download:willSendRequest:redirectResponse:' type='@@:@@@' />
    <method selector='downloadDidBegin:' type='v@:@' />
    <method selector='downloadDidFinish:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSXMLParserDelegateEventAdditions'>
    <method selector='parser:didEndElement:namespaceURI:qualifiedName:' type='v@:@@@@' />
    <method selector='parser:didEndMappingPrefix:' type='v@:@@' />
    <method selector='parser:didStartElement:namespaceURI:qualifiedName:attributes:' type='v@:@@@@@' />
    <method selector='parser:didStartMappingPrefix:toURI:' type='v@:@@@' />
    <method selector='parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:' type='v@:@@@@@' />
    <method selector='parser:foundCDATA:' type='v@:@@' />
    <method selector='parser:foundCharacters:' type='v@:@@' />
    <method selector='parser:foundComment:' type='v@:@@' />
    <method selector='parser:foundElementDeclarationWithName:model:' type='v@:@@@' />
    <method selector='parser:foundExternalEntityDeclarationWithName:publicID:systemID:' type='v@:@@@@' />
    <method selector='parser:foundIgnorableWhitespace:' type='v@:@@' />
    <method selector='parser:foundInternalEntityDeclarationWithName:value:' type='v@:@@@' />
    <method selector='parser:foundNotationDeclarationWithName:publicID:systemID:' type='v@:@@@@' />
    <method selector='parser:foundProcessingInstructionWithTarget:data:' type='v@:@@@' />
    <method selector='parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:' type='v@:@@@@@' />
    <method selector='parser:parseErrorOccurred:' type='v@:@@' />
    <method selector='parser:resolveExternalEntityName:systemID:' type='@@:@@@' />
    <method selector='parser:validationErrorOccurred:' type='v@:@@' />
    <method selector='parserDidEndDocument:' type='v@:@' />
    <method selector='parserDidStartDocument:' type='v@:@' />
  </informal_protocol>
  <class name='NSAffineTransform'>
    <method selector='appendTransform:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithTransform:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='invert'>
      <retval type='v' />
    </method>
    <method selector='prependTransform:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='rotateByDegrees:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='rotateByRadians:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='scaleBy:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='scaleXBy:yBy:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='f' type64='d' />
    </method>
    <method selector='setTransformStruct:'>
      <retval type='v' />
      <arg index='0' type='{_NSAffineTransformStruct=ffffff}' type64='{_NSAffineTransformStruct=dddddd}' />
    </method>
    <method class_method='true' selector='transform'>
      <retval type='@' />
    </method>
    <method selector='transformPoint:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='transformSize:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='transformStruct'>
      <retval type='{_NSAffineTransformStruct=ffffff}' type64='{_NSAffineTransformStruct=dddddd}' />
    </method>
    <method selector='translateXBy:yBy:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='f' type64='d' />
    </method>
  </class>
  <class name='NSAppleEventDescriptor'>
    <method class_method='true' selector='appleEventWithEventClass:eventID:targetDescriptor:returnID:transactionID:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
      <arg index='1' type='L' type64='I' />
      <arg index='2' type='@' />
      <arg index='3' type='s' />
      <arg index='4' type='l' type64='i' />
    </method>
    <method selector='attributeDescriptorForKeyword:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
    </method>
    <method selector='booleanValue'>
      <retval type='B' />
    </method>
    <method selector='coerceToDescriptorType:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
    </method>
    <method selector='data'>
      <retval type='@' />
    </method>
    <method selector='descriptorAtIndex:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='descriptorForKeyword:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
    </method>
    <method selector='descriptorType'>
      <retval type='L' type64='I' />
    </method>
    <method class_method='true' selector='descriptorWithBoolean:'>
      <retval type='@' />
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='descriptorWithDescriptorType:bytes:length:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='descriptorWithDescriptorType:data:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='descriptorWithEnumCode:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
    </method>
    <method class_method='true' selector='descriptorWithInt32:'>
      <retval type='@' />
      <arg index='0' type='l' type64='i' />
    </method>
    <method class_method='true' selector='descriptorWithString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='descriptorWithTypeCode:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
    </method>
    <method selector='enumCodeValue'>
      <retval type='L' type64='I' />
    </method>
    <method selector='eventClass'>
      <retval type='L' type64='I' />
    </method>
    <method selector='eventID'>
      <retval type='L' type64='I' />
    </method>
    <method selector='initListDescriptor'>
      <retval type='@' />
    </method>
    <method selector='initRecordDescriptor'>
      <retval type='@' />
    </method>
    <method selector='initWithAEDescNoCopy:'>
      <retval type='@' />
      <arg index='0' type_modifier='n' />
    </method>
    <method selector='initWithDescriptorType:bytes:length:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='initWithDescriptorType:data:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithEventClass:eventID:targetDescriptor:returnID:transactionID:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
      <arg index='1' type='L' type64='I' />
      <arg index='2' type='@' />
      <arg index='3' type='s' />
      <arg index='4' type='l' type64='i' />
    </method>
    <method selector='insertDescriptor:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='int32Value'>
      <retval type='l' type64='i' />
    </method>
    <method selector='keywordForDescriptorAtIndex:'>
      <retval type='L' type64='I' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method class_method='true' selector='listDescriptor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='nullDescriptor'>
      <retval type='@' />
    </method>
    <method selector='numberOfItems'>
      <retval type='i' type64='q' />
    </method>
    <method selector='paramDescriptorForKeyword:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
    </method>
    <method class_method='true' selector='recordDescriptor'>
      <retval type='@' />
    </method>
    <method selector='removeDecriptorAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='removeDescriptorAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='removeDescriptorWithKeyword:'>
      <retval type='v' />
      <arg index='0' type='L' type64='I' />
    </method>
    <method selector='removeParamDescriptorWithKeyword:'>
      <retval type='v' />
      <arg index='0' type='L' type64='I' />
    </method>
    <method selector='returnID'>
      <retval type='s' />
    </method>
    <method selector='setAttributeDescriptor:forKeyword:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='L' type64='I' />
    </method>
    <method selector='setDescriptor:forKeyword:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='L' type64='I' />
    </method>
    <method selector='setParamDescriptor:forKeyword:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='L' type64='I' />
    </method>
    <method selector='stringValue'>
      <retval type='@' />
    </method>
    <method selector='transactionID'>
      <retval type='l' type64='i' />
    </method>
    <method selector='typeCodeValue'>
      <retval type='L' type64='I' />
    </method>
  </class>
  <class name='NSAppleEventManager'>
    <method selector='appleEventForSuspensionID:'>
      <retval type='@' />
    </method>
    <method selector='currentAppleEvent'>
      <retval type='@' />
    </method>
    <method selector='currentReplyAppleEvent'>
      <retval type='@' />
    </method>
    <method selector='dispatchRawAppleEvent:withRawReply:handlerRefCon:'>
      <retval type='s' />
      <arg index='0' type_modifier='n' />
      <arg index='1' type_modifier='n' />
      <arg index='2' type='l' type64='^v' />
    </method>
    <method selector='removeEventHandlerForEventClass:andEventID:'>
      <retval type='v' />
      <arg index='0' type='L' type64='I' />
      <arg index='1' type='L' type64='I' />
    </method>
    <method selector='replyAppleEventForSuspensionID:'>
      <retval type='@' />
    </method>
    <method selector='resumeWithSuspensionID:'>
      <retval type='v' />
    </method>
    <method selector='setCurrentAppleEventAndReplyEventWithSuspensionID:'>
      <retval type='v' />
    </method>
    <method selector='setEventHandler:andSelector:forEventClass:andEventID:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@@' />
      <arg index='2' type='L' type64='I' />
      <arg index='3' type='L' type64='I' />
    </method>
    <method class_method='true' selector='sharedAppleEventManager'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSAppleScript'>
    <method selector='compileAndReturnError:'>
      <retval type='B' />
      <arg index='0' type_modifier='o' />
    </method>
    <method selector='executeAndReturnError:'>
      <retval type='@' />
      <arg index='0' type_modifier='o' />
    </method>
    <method selector='executeAppleEvent:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithContentsOfURL:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithSource:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isCompiled'>
      <retval type='B' />
    </method>
    <method selector='source'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSArchiver'>
    <method class_method='true' selector='archiveRootObject:toFile:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='archivedDataWithRootObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='archiverData'>
      <retval type='@' />
    </method>
    <method selector='classNameEncodedForTrueClassName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='encodeClassName:intoClassName:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeConditionalObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='encodeRootObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='initForWritingWithMutableData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='replaceObject:withObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
  </class>
  <class name='NSArray'>
	  <method selector='sortedArrayUsingFunction:context:' >
		  <arg index='0' function_pointer='true' function_pointer_retained='false'>
			  <retval type='i'/>
			  <arg type='@' />
			  <arg type='@' />
			  <arg type='@' />
		  </arg>
		  <arg index='1' type='@' />
	  </method>
	  <method selector='sortedArrayUsingFunction:context:hint:' >
		  <arg index='0' function_pointer='true' function_pointer_retained='false'>
			  <retval type='i'/>
			  <arg type='@' />
			  <arg type='@' />
			  <arg type='@' />
		  </arg>
		  <arg index='1' type='@' />
	  </method>
    <method selector='addObserver:forKeyPath:options:context:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
      <arg index='3' type='^v' />
    </method>
    <method selector='addObserver:toObjectsAtIndexes:forKeyPath:options:context:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='I' />
      <arg index='4' type='^v' />
    </method>
    <method class_method='true' selector='array'>
      <retval type='@' />
    </method>
    <method selector='arrayByAddingObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='arrayByAddingObjectsFromArray:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='arrayWithArray:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='arrayWithContentsOfFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='arrayWithContentsOfURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='arrayWithObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method c_array_delimited_by_null='true' class_method='true' selector='arrayWithObjects:' variadic='true'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='arrayWithObjects:count:'>
      <retval type='@' />
      <arg index='0' type_modifier='n' c_array_length_in_arg='1' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='componentsJoinedByString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='containsObject:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='context:'>
      <retval type='@' />
      <arg index='0' type='^v' />
    </method>
    <method selector='context:hint:'>
      <retval type='@' />
      <arg index='0' type='^v' />
      <arg index='1' type='@' />
    </method>
    <method selector='count'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='description'>
      <retval type='@' />
    </method>
    <method selector='descriptionWithLocale:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='descriptionWithLocale:indent:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='filteredArrayUsingPredicate:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='firstObjectCommonWithArray:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='getObjects:' suggestion='convert to Python list instead' />
    <method selector='getObjects:range:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='o' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='indexOfObject:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='@' />
    </method>
    <method selector='indexOfObject:inRange:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='indexOfObjectIdenticalTo:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='@' />
    </method>
    <method selector='indexOfObjectIdenticalTo:inRange:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='initWithArray:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithArray:copyItems:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='initWithContentsOfFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithContentsOfURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method c_array_delimited_by_null='true' selector='initWithObjects:' variadic='true'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithObjects:count:'>
      <retval type='@' />
      <arg index='0' type_modifier='n' c_array_length_in_arg='1'/>
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='isEqualToArray:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='lastObject'>
      <retval type='@' />
    </method>
    <method selector='makeObjectsPerformSelector:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:' />
    </method>
    <method selector='makeObjectsPerformSelector:withObject:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
    </method>
    <method selector='objectAtIndex:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='objectEnumerator'>
      <retval type='@' />
    </method>
    <method selector='objectsAtIndexes:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='pathsMatchingExtensions:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeObserver:forKeyPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='removeObserver:fromObjectsAtIndexes:forKeyPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='reverseObjectEnumerator'>
      <retval type='@' />
    </method>
    <method selector='setValue:forKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='sortedArrayHint'>
      <retval type='@' />
    </method>
    <method selector='sortedArrayUsingDescriptors:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='sortedArrayUsingSelector:'>
      <retval type='@' />
      <arg index='0' sel_of_type='i@:@' />
    </method>
    <method selector='subarrayWithRange:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='valueForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='writeToFile:atomically:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='writeToURL:atomically:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
  </class>
  <class name='NSAssertionHandler'>
    <method class_method='true' selector='currentHandler'>
      <retval type='@' />
    </method>
    <method selector='handleFailureInFunction:file:lineNumber:description:' variadic='true'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' printf_format='true' type='@' />
    </method>
    <method selector='handleFailureInMethod:object:file:lineNumber:description:' variadic='true'>
      <retval type='v' />
      <arg index='0' type=':' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='i' type64='q' />
      <arg index='4' printf_format='true' type='@' />
    </method>
  </class>
  <class name='NSAttributedString'>
    <method selector='attribute:atIndex:effectiveRange:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='attribute:atIndex:longestEffectiveRange:inRange:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='attributedSubstringFromRange:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='attributesAtIndex:effectiveRange:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='attributesAtIndex:longestEffectiveRange:inRange:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='initWithAttributedString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithString:attributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='isEqualToAttributedString:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='length'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='string'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSAutoreleasePool'>
    <method class_method='true' selector='addObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='autoreleasedObjectCount'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='drain'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='enableFreedObjectCheck:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='enableRelease:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='poolCountHighWaterMark'>
      <retval type='I' type64='Q' />
    </method>
    <method class_method='true' selector='poolCountHighWaterResolution'>
      <retval type='I' type64='Q' />
    </method>
    <method class_method='true' selector='resetTotalAutoreleasedObjects'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='setPoolCountHighWaterMark:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='setPoolCountHighWaterResolution:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='showPools'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='topAutoreleasePoolCount'>
      <retval type='I' type64='Q' />
    </method>
    <method class_method='true' selector='totalAutoreleasedObjects'>
      <retval type='I' type64='Q' />
    </method>
  </class>
  <class name='NSBundle'>
    <method class_method='true' selector='allBundles'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='allFrameworks'>
      <retval type='@' />
    </method>
    <method selector='builtInPlugInsPath'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='bundleForClass:'>
      <retval type='@' />
      <arg index='0' type='#' />
    </method>
    <method selector='bundleIdentifier'>
      <retval type='@' />
    </method>
    <method selector='bundlePath'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='bundleWithIdentifier:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='bundleWithPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='classNamed:'>
      <retval type='#' />
      <arg index='0' type='@' />
    </method>
    <method selector='developmentLocalization'>
      <retval type='@' />
    </method>
    <method selector='executableArchitectures'>
      <retval type='@' />
    </method>
    <method selector='executablePath'>
      <retval type='@' />
    </method>
    <method selector='infoDictionary'>
      <retval type='@' />
    </method>
    <method selector='initWithPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isLoaded'>
      <retval type='B' />
    </method>
    <method selector='load'>
      <retval type='B' />
    </method>
    <method selector='loadAndReturnError:'>
      <retval type='B' />
      <arg index='0' type_modifier='o' />
    </method>
    <method selector='localizations'>
      <retval type='@' />
    </method>
    <method selector='localizedInfoDictionary'>
      <retval type='@' />
    </method>
    <method selector='localizedStringForKey:value:table:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='mainBundle'>
      <retval type='@' />
    </method>
    <method selector='objectForInfoDictionaryKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='pathForAuxiliaryExecutable:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='pathForResource:ofType:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='pathForResource:ofType:inDirectory:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='pathForResource:ofType:inDirectory:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='pathForResource:ofType:inDirectory:forLocalization:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method class_method='true' selector='pathsForResourcesOfType:inDirectory:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='pathsForResourcesOfType:inDirectory:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='pathsForResourcesOfType:inDirectory:forLocalization:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='preferredLocalizations'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='preferredLocalizationsFromArray:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='preferredLocalizationsFromArray:forPreferences:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='preflightAndReturnError:'>
      <retval type='B' />
      <arg index='0' type_modifier='o' />
    </method>
    <method selector='principalClass'>
      <retval type='#' />
    </method>
    <method selector='privateFrameworksPath'>
      <retval type='@' />
    </method>
    <method selector='resourcePath'>
      <retval type='@' />
    </method>
    <method selector='sharedFrameworksPath'>
      <retval type='@' />
    </method>
    <method selector='sharedSupportPath'>
      <retval type='@' />
    </method>
    <method selector='unload'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSCachedURLResponse'>
    <method selector='data'>
      <retval type='@' />
    </method>
    <method selector='initWithResponse:data:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithResponse:data:userInfo:storagePolicy:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='I' />
    </method>
    <method selector='response'>
      <retval type='@' />
    </method>
    <method selector='storagePolicy'>
      <retval type='I' />
    </method>
    <method selector='userInfo'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSCalendar'>
    <method class_method='true' selector=''>
      <retval type='@' />
    </method>
    <method selector='calendarIdentifier'>
      <retval type='@' />
    </method>
    <method selector='components:fromDate:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
    </method>
    <method selector='components:fromDate:toDate:options:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='currentCalendar'>
      <retval type='@' />
    </method>
    <method selector='dateByAddingComponents:toDate:options:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='dateFromComponents:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='firstWeekday'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='initWithCalendarIdentifier:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='locale'>
      <retval type='@' />
    </method>
    <method selector='maximumRangeOfUnit:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='I' />
    </method>
    <method selector='minimumDaysInFirstWeek'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='minimumRangeOfUnit:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='I' />
    </method>
    <method selector='ordinalityOfUnit:inUnit:forDate:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' />
      <arg index='1' type='I' />
      <arg index='2' type='@' />
    </method>
    <method selector='rangeOfUnit:inUnit:forDate:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='I' />
      <arg index='1' type='I' />
      <arg index='2' type='@' />
    </method>
    <method selector='rangeOfUnit:startDate:interval:forDate:'>
      <retval type='B' />
      <arg index='0' type='I' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type='@' />
    </method>
    <method selector='setFirstWeekday:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setLocale:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMinimumDaysInFirstWeek:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setTimeZone:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='timeZone'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSCalendarDate'>
    <method class_method='true' selector='calendarDate'>
      <retval type='@' />
    </method>
    <method selector='calendarFormat'>
      <retval type='@' />
    </method>
    <method selector='dateByAddingYears:months:days:hours:minutes:seconds:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='i' type64='q' />
      <arg index='4' type='i' type64='q' />
      <arg index='5' type='i' type64='q' />
    </method>
    <method class_method='true' selector='dateWithString:calendarFormat:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='dateWithString:calendarFormat:locale:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='dateWithYear:month:day:hour:minute:second:timeZone:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='I' type64='Q' />
      <arg index='4' type='I' type64='Q' />
      <arg index='5' type='I' type64='Q' />
      <arg index='6' type='@' />
    </method>
    <method selector='dayOfCommonEra'>
      <retval type='i' type64='q' />
    </method>
    <method selector='dayOfMonth'>
      <retval type='i' type64='q' />
    </method>
    <method selector='dayOfWeek'>
      <retval type='i' type64='q' />
    </method>
    <method selector='dayOfYear'>
      <retval type='i' type64='q' />
    </method>
    <method selector='description'>
      <retval type='@' />
    </method>
    <method selector='descriptionWithCalendarFormat:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='descriptionWithCalendarFormat:locale:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='descriptionWithLocale:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='hourOfDay'>
      <retval type='i' type64='q' />
    </method>
    <method selector='initWithString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithString:calendarFormat:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithString:calendarFormat:locale:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='initWithYear:month:day:hour:minute:second:timeZone:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='I' type64='Q' />
      <arg index='4' type='I' type64='Q' />
      <arg index='5' type='I' type64='Q' />
      <arg index='6' type='@' />
    </method>
    <method selector='minuteOfHour'>
      <retval type='i' type64='q' />
    </method>
    <method selector='monthOfYear'>
      <retval type='i' type64='q' />
    </method>
    <method selector='secondOfMinute'>
      <retval type='i' type64='q' />
    </method>
    <method selector='setCalendarFormat:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTimeZone:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='timeZone'>
      <retval type='@' />
    </method>
    <method selector='yearOfCommonEra'>
      <retval type='i' type64='q' />
    </method>
    <method selector='years:months:days:hours:minutes:seconds:sinceDate:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
      <arg index='4' type_modifier='o' />
      <arg index='5' type_modifier='o' />
      <arg index='6' type='@' />
    </method>
  </class>
  <class name='NSCharacterSet'>
    <method class_method='true' selector='alphanumericCharacterSet'>
      <retval type='@' />
    </method>
    <method selector='bitmapRepresentation'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='capitalizedLetterCharacterSet'>
      <retval type='@' />
    </method>
    <method selector='characterIsMember:'>
      <retval type='B' />
      <arg index='0' type='rT' />
    </method>
    <method class_method='true' selector='characterSetWithBitmapRepresentation:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='characterSetWithCharactersInString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='characterSetWithContentsOfFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='characterSetWithRange:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method class_method='true' selector='controlCharacterSet'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='decimalDigitCharacterSet'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='decomposableCharacterSet'>
      <retval type='@' />
    </method>
    <method selector='hasMemberInPlane:'>
      <retval type='B' />
      <arg index='0' type='C' />
    </method>
    <method class_method='true' selector='illegalCharacterSet'>
      <retval type='@' />
    </method>
    <method selector='invertedSet'>
      <retval type='@' />
    </method>
    <method selector='isSupersetOfSet:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='letterCharacterSet'>
      <retval type='@' />
    </method>
    <method selector='longCharacterIsMember:'>
      <retval type='B' />
      <arg index='0' type='L' type64='I' />
    </method>
    <method class_method='true' selector='lowercaseLetterCharacterSet'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='newlineCharacterSet'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='nonBaseCharacterSet'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='punctuationCharacterSet'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='symbolCharacterSet'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='uppercaseLetterCharacterSet'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='whitespaceAndNewlineCharacterSet'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='whitespaceCharacterSet'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSClassDescription'>
    <method selector='attributeKeys'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='classDescriptionForClass:'>
      <retval type='@' />
      <arg index='0' type='#' />
    </method>
    <method class_method='true' selector='invalidateClassDescriptionCache'>
      <retval type='v' />
    </method>
    <method selector='inverseForRelationshipKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='registerClassDescription:forClass:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='#' />
    </method>
    <method selector='toManyRelationshipKeys'>
      <retval type='@' />
    </method>
    <method selector='toOneRelationshipKeys'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSCloneCommand'>
    <method selector='keySpecifier'>
      <retval type='@' />
    </method>
    <method selector='setReceiversSpecifier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSCloseCommand'>
    <method selector='saveOptions'>
      <retval type='I' />
    </method>
  </class>
  <class name='NSCoder'>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector='allowsKeyedCoding'>
      <retval type='B' />
    </method>
    <method selector='containsValueForKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeBoolForKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeBytesForKey:returnedLength:'>
      <retval c_array_length_in_arg='1' type='^v' type64='^v' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='decodeBytesWithReturnedLength:'>
      <retval c_array_length_in_arg='0' />
      <arg index='0' type_modifier='o' />
    </method>
    <method selector='decodeDataObject'>
      <retval type='@' />
    </method>
    <method selector='decodeDoubleForKey:'>
      <retval type='d' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeFloatForKey:'>
      <retval type='f' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeInt32ForKey:'>
      <retval type='i' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeInt64ForKey:'>
      <retval type='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeIntForKey:'>
      <retval type='i' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeIntegerForKey:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeObject'>
      <retval type='@' />
    </method>
    <method selector='decodeObjectForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodePoint'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='decodePointForKey:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodePropertyList'>
      <retval type='@' />
    </method>
    <method selector='decodeRect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='decodeRectForKey:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='decodeSizeForKey:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeValueOfObjCType:at:'>
      <retval type='v' />
      <arg c_array_delimited_by_null='true' index='0' type='^t' type64='^t' type_modifier='n' />
      <arg index='1' type='^v' />
    </method>
    <method selector='decodeValuesOfObjCTypes:' variadic='true'>
      <retval type='v' />
      <arg c_array_delimited_by_null='true' index='0' type='^t' type64='^t' type_modifier='n' />
    </method>
    <method selector='encodeArrayOfObjCType:count:at:'>
      <retval type='v' />
      <arg c_array_delimited_by_null='true' index='0' type='^t' type64='^t' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='^v' />
    </method>
    <method selector='encodeBool:forKey:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeBycopyObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='encodeByrefObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='encodeBytes:length:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='encodeBytes:length:forKey:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type='^v' type64='^v' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='@' />
    </method>
    <method selector='encodeConditionalObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='encodeConditionalObject:forKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeDataObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='encodeDouble:forKey:'>
      <retval type='v' />
      <arg index='0' type='d' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeFloat:forKey:'>
      <retval type='v' />
      <arg index='0' type='f' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeInt32:forKey:'>
      <retval type='v' />
      <arg index='0' type='i' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeInt64:forKey:'>
      <retval type='v' />
      <arg index='0' type='q' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeInt:forKey:'>
      <retval type='v' />
      <arg index='0' type='i' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeInteger:forKey:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeNXObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='encodeObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='encodeObject:forKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodePoint:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='encodePoint:forKey:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodePropertyList:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='encodeRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='encodeRect:forKey:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeRootObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='encodeSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='encodeSize:forKey:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeValueOfObjCType:at:'>
      <retval type='v' />
      <arg c_array_delimited_by_null='true' index='0' type='^t' type64='^t' type_modifier='n' />
      <arg index='1' type='^v' />
    </method>
    <method selector='encodeValuesOfObjCTypes:' variadic='true'>
      <retval type='v' />
      <arg c_array_delimited_by_null='true' index='0' type='^t' type64='^t' type_modifier='n' />
    </method>
    <method selector='setObjectZone:'>
      <retval type='v' />
    </method>
    <method selector='systemVersion'>
      <retval type='I' />
    </method>
    <method selector='versionForClassName:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSComparisonPredicate'>
    <method selector='comparisonPredicateModifier'>
      <retval type='I' />
    </method>
    <method selector='customSelector'>
      <retval type=':' />
    </method>
    <method selector='initWithLeftExpression:rightExpression:customSelector:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' sel_of_type='B@:@' />
    </method>
    <method selector='initWithLeftExpression:rightExpression:modifier:type:options:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
      <arg index='3' type='I' />
      <arg index='4' type='I' type64='Q' />
    </method>
    <method selector='leftExpression'>
      <retval type='@' />
    </method>
    <method selector='options'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='predicateOperatorType'>
      <retval type='I' />
    </method>
    <method class_method='true' selector='predicateWithLeftExpression:rightExpression:customSelector:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' sel_of_type='B@:@' />
    </method>
    <method class_method='true' selector='predicateWithLeftExpression:rightExpression:modifier:type:options:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
      <arg index='3' type='I' />
      <arg index='4' type='I' type64='Q' />
    </method>
    <method selector='rightExpression'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSCompoundPredicate'>
    <method class_method='true' selector='andPredicateWithSubpredicates:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='compoundPredicateType'>
      <retval type='I' />
    </method>
    <method selector='initWithType:subpredicates:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='notPredicateWithSubpredicate:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='orPredicateWithSubpredicates:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='subpredicates'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSCondition'>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector='broadcast'>
      <retval type='v' />
    </method>
    <method selector='setName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='signal'>
      <retval type='v' />
    </method>
    <method selector='wait'>
      <retval type='v' />
    </method>
    <method selector='waitUntilDate:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSConditionLock'>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector='condition'>
      <retval type='i' type64='q' />
    </method>
    <method selector='initWithCondition:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='lockBeforeDate:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='lockWhenCondition:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='lockWhenCondition:beforeDate:'>
      <retval type='B' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='@' />
    </method>
    <method selector='setName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tryLock'>
      <retval type='B' />
    </method>
    <method selector='tryLockWhenCondition:'>
      <retval type='B' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='unlockWithCondition:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
  </class>
  <class name='NSConnection'>
    <method selector='addRequestMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addRunLoop:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='allConnections'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='connectionWithReceivePort:sendPort:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='connectionWithRegisteredName:host:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='connectionWithRegisteredName:host:usingNameServer:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='currentConversation'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='defaultConnection'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='enableMultipleThreads'>
      <retval type='v' />
    </method>
    <method selector='independentConversationQueueing'>
      <retval type='B' />
    </method>
    <method selector='initWithReceivePort:sendPort:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='invalidate'>
      <retval type='v' />
    </method>
    <method selector='isValid'>
      <retval type='B' />
    </method>
    <method selector='localObjects'>
      <retval type='@' />
    </method>
    <method selector='multipleThreadsEnabled'>
      <retval type='B' />
    </method>
    <method selector='receivePort'>
      <retval type='@' />
    </method>
    <method selector='registerName:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='registerName:withNameServer:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='remoteObjects'>
      <retval type='@' />
    </method>
    <method selector='removeRequestMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeRunLoop:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='replyTimeout'>
      <retval type='d' />
    </method>
    <method selector='requestModes'>
      <retval type='@' />
    </method>
    <method selector='requestTimeout'>
      <retval type='d' />
    </method>
    <method selector='rootObject'>
      <retval type='@' />
    </method>
    <method selector='rootProxy'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='rootProxyForConnectionWithRegisteredName:host:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='rootProxyForConnectionWithRegisteredName:host:usingNameServer:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='runInNewThread'>
      <retval type='v' />
    </method>
    <method selector='sendPort'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='serviceConnectionWithName:rootObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='serviceConnectionWithName:rootObject:usingNameServer:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setIndependentConversationQueueing:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setReplyTimeout:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setRequestTimeout:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setRootObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='statistics'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSCountedSet'>
    <method selector='addObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='countForObject:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithArray:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithCapacity:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='initWithSet:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='objectEnumerator'>
      <retval type='@' />
    </method>
    <method selector='removeObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSCreateCommand'>
    <method selector='createClassDescription'>
      <retval type='@' />
    </method>
    <method selector='resolvedKeyDictionary'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSData'>
    <method class_method='true' selector='data'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='dataWithBytes:length:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='dataWithBytesNoCopy:length:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='dataWithBytesNoCopy:length:freeWhenDone:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='B' />
    </method>
    <method class_method='true' selector='dataWithContentsOfFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='dataWithContentsOfFile:options:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
    </method>
    <method class_method='true' selector='dataWithContentsOfMappedFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='dataWithContentsOfURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='dataWithContentsOfURL:options:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
    </method>
    <method class_method='true' selector='dataWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='description'>
      <retval type='@' />
    </method>
    <method selector='getBytes:' suggestion='use -bytes instead' />
    <method selector='getBytes:length:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='o' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='getBytes:range:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='o' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='initWithBytes:length:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='initWithBytesNoCopy:length:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='initWithBytesNoCopy:length:freeWhenDone:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='B' />
    </method>
    <method selector='initWithContentsOfFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithContentsOfFile:options:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithContentsOfMappedFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithContentsOfURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithContentsOfURL:options:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isEqualToData:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='length'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='subdataWithRange:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='writeToFile:atomically:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='writeToFile:options:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='writeToURL:atomically:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='writeToURL:options:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
    </method>
  </class>
  <class name='NSDate'>
    <method selector='addTimeInterval:'>
      <retval type='@' />
      <arg index='0' type='d' />
    </method>
    <method selector='compare:'>
      <retval type='i' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='date'>
      <retval type='@' />
    </method>
    <method selector='dateWithCalendarFormat:timeZone:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='dateWithNaturalLanguageString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='dateWithNaturalLanguageString:locale:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='dateWithString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='dateWithTimeIntervalSince1970:'>
      <retval type='@' />
      <arg index='0' type='d' />
    </method>
    <method class_method='true' selector='dateWithTimeIntervalSinceNow:'>
      <retval type='@' />
      <arg index='0' type='d' />
    </method>
    <method class_method='true' selector='dateWithTimeIntervalSinceReferenceDate:'>
      <retval type='@' />
      <arg index='0' type='d' />
    </method>
    <method selector='description'>
      <retval type='@' />
    </method>
    <method selector='descriptionWithCalendarFormat:timeZone:locale:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='descriptionWithLocale:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='distantFuture'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='distantPast'>
      <retval type='@' />
    </method>
    <method selector='earlierDate:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='initWithString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithTimeInterval:sinceDate:'>
      <retval type='@' />
      <arg index='0' type='d' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithTimeIntervalSinceNow:'>
      <retval type='@' />
      <arg index='0' type='d' />
    </method>
    <method selector='initWithTimeIntervalSinceReferenceDate:'>
      <retval type='@' />
      <arg index='0' type='d' />
    </method>
    <method selector='isEqualToDate:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='laterDate:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='timeIntervalSince1970'>
      <retval type='d' />
    </method>
    <method selector='timeIntervalSinceDate:'>
      <retval type='d' />
      <arg index='0' type='@' />
    </method>
    <method selector='timeIntervalSinceNow'>
      <retval type='d' />
    </method>
    <method selector='timeIntervalSinceReferenceDate'>
      <retval type='d' />
    </method>
    <method class_method='true' selector='timeIntervalSinceReferenceDate'>
      <retval type='d' />
    </method>
  </class>
  <class name='NSDateComponents'>
    <method selector='day'>
      <retval type='i' type64='q' />
    </method>
    <method selector='era'>
      <retval type='i' type64='q' />
    </method>
    <method selector='hour'>
      <retval type='i' type64='q' />
    </method>
    <method selector='minute'>
      <retval type='i' type64='q' />
    </method>
    <method selector='month'>
      <retval type='i' type64='q' />
    </method>
    <method selector='second'>
      <retval type='i' type64='q' />
    </method>
    <method selector='setDay:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setEra:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setHour:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setMinute:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setMonth:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setSecond:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setWeek:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setWeekday:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setWeekdayOrdinal:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setYear:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='week'>
      <retval type='i' type64='q' />
    </method>
    <method selector='weekday'>
      <retval type='i' type64='q' />
    </method>
    <method selector='weekdayOrdinal'>
      <retval type='i' type64='q' />
    </method>
    <method selector='year'>
      <retval type='i' type64='q' />
    </method>
  </class>
  <class name='NSDateFormatter'>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector='AMSymbol'>
      <retval type='@' />
    </method>
    <method selector='PMSymbol'>
      <retval type='@' />
    </method>
    <method selector='allowsNaturalLanguage'>
      <retval type='B' />
    </method>
    <method selector='calendar'>
      <retval type='@' />
    </method>
    <method selector='dateFormat'>
      <retval type='@' />
    </method>
    <method selector='dateFromString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='dateStyle'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='defaultDate'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='defaultFormatterBehavior'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='eraSymbols'>
      <retval type='@' />
    </method>
    <method selector='formatterBehavior'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='generatesCalendarDates'>
      <retval type='B' />
    </method>
    <method selector='getObjectValue:forString:range:error:'>
      <retval type='B' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type='@' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='initWithDateFormat:allowNaturalLanguage:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='isLenient'>
      <retval type='B' />
    </method>
    <method selector='locale'>
      <retval type='@' />
    </method>
    <method selector='monthSymbols'>
      <retval type='@' />
    </method>
    <method selector='setAMSymbol:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCalendar:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDateFormat:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDateStyle:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setDefaultDate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setDefaultFormatterBehavior:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setEraSymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFormatterBehavior:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setGeneratesCalendarDates:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setGregorianStartDate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLenient:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setLocale:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLongEraSymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMonthSymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPMSymbol:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setQuarterSymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setShortMonthSymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setShortQuarterSymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setShortStandaloneMonthSymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setShortStandaloneQuarterSymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setShortStandaloneWeekdaySymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setShortWeekdaySymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setStandaloneMonthSymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setStandaloneQuarterSymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setStandaloneWeekdaySymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTimeStyle:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setTimeZone:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTwoDigitStartDate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setVeryShortMonthSymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setVeryShortStandaloneMonthSymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setVeryShortStandaloneWeekdaySymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setVeryShortWeekdaySymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setWeekdaySymbols:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='shortMonthSymbols'>
      <retval type='@' />
    </method>
    <method selector='shortWeekdaySymbols'>
      <retval type='@' />
    </method>
    <method selector='stringFromDate:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='timeStyle'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='timeZone'>
      <retval type='@' />
    </method>
    <method selector='twoDigitStartDate'>
      <retval type='@' />
    </method>
    <method selector='weekdaySymbols'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSDecimalNumber'>
    <method selector='compare:'>
      <retval type='i' />
      <arg index='0' type='@' />
    </method>
    <method selector='decimalNumberByAdding:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='decimalNumberByAdding:withBehavior:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='decimalNumberByDividingBy:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='decimalNumberByDividingBy:withBehavior:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='decimalNumberByMultiplyingBy:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='decimalNumberByMultiplyingBy:withBehavior:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='decimalNumberByMultiplyingByPowerOf10:'>
      <retval type='@' />
      <arg index='0' type='s' />
    </method>
    <method selector='decimalNumberByMultiplyingByPowerOf10:withBehavior:'>
      <retval type='@' />
      <arg index='0' type='s' />
      <arg index='1' type='@' />
    </method>
    <method selector='decimalNumberByRaisingToPower:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='decimalNumberByRaisingToPower:withBehavior:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
    </method>
    <method selector='decimalNumberByRoundingAccordingToBehavior:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='decimalNumberBySubtracting:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='decimalNumberBySubtracting:withBehavior:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='decimalNumberWithDecimal:'>
      <retval type='@' />
      <arg index='0' type='{NSDecimal=b8b4b1b1b18[8S]}' />
    </method>
    <method class_method='true' selector='decimalNumberWithMantissa:exponent:isNegative:'>
      <retval type='@' />
      <arg index='0' type='Q' />
      <arg index='1' type='s' />
      <arg index='2' type='B' />
    </method>
    <method class_method='true' selector='decimalNumberWithString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='decimalNumberWithString:locale:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='defaultBehavior'>
      <retval type='@' />
    </method>
    <method selector='descriptionWithLocale:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='doubleValue'>
      <retval type='d' />
    </method>
    <method selector='initWithDecimal:'>
      <retval type='@' />
      <arg index='0' type='{NSDecimal=b8b4b1b1b18[8S]}' />
    </method>
    <method selector='initWithMantissa:exponent:isNegative:'>
      <retval type='@' />
      <arg index='0' type='Q' />
      <arg index='1' type='s' />
      <arg index='2' type='B' />
    </method>
    <method selector='initWithString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithString:locale:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='maximumDecimalNumber'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='minimumDecimalNumber'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='notANumber'>
      <retval type='@' />
    </method>
    <method selector='objCType'>
      <retval c_array_delimited_by_null='true' type='^t' />
    </method>
    <method class_method='true' selector='one'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='setDefaultBehavior:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='zero'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSDecimalNumberHandler'>
    <method class_method='true' selector='decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='s' />
      <arg index='2' type='B' />
      <arg index='3' type='B' />
      <arg index='4' type='B' />
      <arg index='5' type='B' />
    </method>
    <method class_method='true' selector='defaultDecimalNumberHandler'>
      <retval type='@' />
    </method>
    <method selector='initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='s' />
      <arg index='2' type='B' />
      <arg index='3' type='B' />
      <arg index='4' type='B' />
      <arg index='5' type='B' />
    </method>
  </class>
  <class name='NSDeleteCommand'>
    <method selector='keySpecifier'>
      <retval type='@' />
    </method>
    <method selector='setReceiversSpecifier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSDictionary'>
    <method selector='allKeys'>
      <retval type='@' />
    </method>
    <method selector='allKeysForObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='allValues'>
      <retval type='@' />
    </method>
    <method selector='count'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='description'>
      <retval type='@' />
    </method>
    <method selector='descriptionInStringsFileFormat'>
      <retval type='@' />
    </method>
    <method selector='descriptionWithLocale:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='descriptionWithLocale:indent:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='dictionary'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='dictionaryWithContentsOfFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='dictionaryWithContentsOfURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='dictionaryWithDictionary:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='dictionaryWithObject:forKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='dictionaryWithObjects:forKeys:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='dictionaryWithObjects:forKeys:count:'>
      <retval type='@' />
      <arg c_array_length_in_arg='2' index='0' type_modifier='n' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='dictionaryWithObjectsAndKeys:' variadic='true' c_array_delimited_by_null='true'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='fileCreationDate'>
      <retval type='@' />
    </method>
    <method selector='fileExtensionHidden'>
      <retval type='B' />
    </method>
    <method selector='fileGroupOwnerAccountID'>
      <retval type='@' />
    </method>
    <method selector='fileGroupOwnerAccountName'>
      <retval type='@' />
    </method>
    <method selector='fileHFSCreatorCode'>
      <retval type='L' type64='I' />
    </method>
    <method selector='fileHFSTypeCode'>
      <retval type='L' type64='I' />
    </method>
    <method selector='fileIsAppendOnly'>
      <retval type='B' />
    </method>
    <method selector='fileIsImmutable'>
      <retval type='B' />
    </method>
    <method selector='fileModificationDate'>
      <retval type='@' />
    </method>
    <method selector='fileOwnerAccountID'>
      <retval type='@' />
    </method>
    <method selector='fileOwnerAccountName'>
      <retval type='@' />
    </method>
    <method selector='filePosixPermissions'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='fileSize'>
      <retval type='Q' />
    </method>
    <method selector='fileSystemFileNumber'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='fileSystemNumber'>
      <retval type='i' type64='q' />
    </method>
    <method selector='fileType'>
      <retval type='@' />
    </method>
    <method selector='getObjects:andKeys:' suggestion='convert to a python dict instead' />
    <method selector='initWithContentsOfFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithContentsOfURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithDictionary:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithDictionary:copyItems:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='initWithObjects:forKeys:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithObjects:forKeys:count:'>
      <retval type='@' />
      <arg c_array_length_in_arg='2' index='0' type_modifier='n' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method c_array_delimited_by_null='true' selector='initWithObjectsAndKeys:' variadic='true'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isEqualToDictionary:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='keyEnumerator'>
      <retval type='@' />
    </method>
    <method selector='keysSortedByValueUsingSelector:'>
      <retval type='@' />
      <arg index='0' sel_of_type='i@:@' />
    </method>
    <method selector='objectEnumerator'>
      <retval type='@' />
    </method>
    <method selector='objectForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='objectsForKeys:notFoundMarker:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='valueForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='writeToFile:atomically:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='writeToURL:atomically:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
  </class>
  <class name='NSDirectoryEnumerator'>
    <method selector='directoryAttributes'>
      <retval type='@' />
    </method>
    <method selector='fileAttributes'>
      <retval type='@' />
    </method>
    <method selector='skipDescendents'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSDistantObject'>
    <method selector='connectionForProxy'>
      <retval type='@' />
    </method>
    <method selector='initWithLocal:connection:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithTarget:connection:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='proxyWithLocal:connection:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='proxyWithTarget:connection:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setProtocolForProxy:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSDistantObjectRequest'>
    <method selector='connection'>
      <retval type='@' />
    </method>
    <method selector='conversation'>
      <retval type='@' />
    </method>
    <method selector='invocation'>
      <retval type='@' />
    </method>
    <method selector='replyWithException:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSDistributedLock'>
    <method selector='breakLock'>
      <retval type='v' />
    </method>
    <method selector='initWithPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='lockDate'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='lockWithPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='tryLock'>
      <retval type='B' />
    </method>
    <method selector='unlock'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSDistributedNotificationCenter'>
    <method selector='addObserver:selector:name:object:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='addObserver:selector:name:object:suspensionBehavior:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' type='I' />
    </method>
    <method class_method='true' selector='defaultCenter'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='notificationCenterForType:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='postNotificationName:object:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='postNotificationName:object:userInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='postNotificationName:object:userInfo:deliverImmediately:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='B' />
    </method>
    <method selector='postNotificationName:object:userInfo:options:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='I' type64='Q' />
    </method>
    <method selector='removeObserver:name:object:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='setSuspended:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='suspended'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSEnumerator'>
    <method selector='allObjects'>
      <retval type='@' />
    </method>
    <method selector='nextObject'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSError'>
    <method selector='code'>
      <retval type='i' type64='q' />
    </method>
    <method selector='domain'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='errorWithDomain:code:userInfo:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='@' />
    </method>
    <method selector='initWithDomain:code:userInfo:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='@' />
    </method>
    <method selector='localizedDescription'>
      <retval type='@' />
    </method>
    <method selector='localizedFailureReason'>
      <retval type='@' />
    </method>
    <method selector='localizedRecoveryOptions'>
      <retval type='@' />
    </method>
    <method selector='localizedRecoverySuggestion'>
      <retval type='@' />
    </method>
    <method selector='recoveryAttempter'>
      <retval type='@' />
    </method>
    <method selector='userInfo'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSException'>
    <method selector=''>
      <retval type='@' />
    </method>
    <method class_method='true' selector='exceptionWithName:reason:userInfo:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='initWithName:reason:userInfo:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='name'>
      <retval type='@' />
    </method>
    <method selector='raise'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='raise:format:' variadic='true'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' printf_format='true' type='@' />
    </method>
    <method class_method='true' selector='raise:format:arguments:' suggestion='use raise:format:' />
    <method selector='reason'>
      <retval type='@' />
    </method>
    <method selector='userInfo'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSExpression'>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector='arguments'>
      <retval type='@' />
    </method>
    <method selector='collection'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='expressionForAggregate:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='expressionForConstantValue:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='expressionForEvaluatedObject'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='expressionForFunction:arguments:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='expressionForFunction:selectorName:arguments:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='expressionForIntersectSet:with:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='expressionForKeyPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='expressionForMinusSet:with:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='expressionForSubquery:usingIteratorVariable:predicate:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='expressionForUnionSet:with:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='expressionForVariable:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='expressionType'>
      <retval type='I' />
    </method>
    <method selector='expressionValueWithObject:context:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='function'>
      <retval type='@' />
    </method>
    <method selector='initWithExpressionType:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method selector='keyPath'>
      <retval type='@' />
    </method>
    <method selector='leftExpression'>
      <retval type='@' />
    </method>
    <method selector='operand'>
      <retval type='@' />
    </method>
    <method selector='predicate'>
      <retval type='@' />
    </method>
    <method selector='rightExpression'>
      <retval type='@' />
    </method>
    <method selector='variable'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSFileHandle'>
    <method selector='acceptConnectionInBackgroundAndNotify'>
      <retval type='v' />
    </method>
    <method selector='acceptConnectionInBackgroundAndNotifyForModes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='availableData'>
      <retval type='@' />
    </method>
    <method selector='closeFile'>
      <retval type='v' />
    </method>
    <method selector='fileDescriptor'>
      <retval type='i' />
    </method>
    <method class_method='true' selector='fileHandleForReadingAtPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='fileHandleForUpdatingAtPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='fileHandleForWritingAtPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='fileHandleWithNullDevice'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='fileHandleWithStandardError'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='fileHandleWithStandardInput'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='fileHandleWithStandardOutput'>
      <retval type='@' />
    </method>
    <method selector='initWithFileDescriptor:'>
      <retval type='@' />
      <arg index='0' type='i' />
    </method>
    <method selector='initWithFileDescriptor:closeOnDealloc:'>
      <retval type='@' />
      <arg index='0' type='i' />
      <arg index='1' type='B' />
    </method>
    <method selector='offsetInFile'>
      <retval type='Q' />
    </method>
    <method selector='readDataOfLength:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='readDataToEndOfFile'>
      <retval type='@' />
    </method>
    <method selector='readInBackgroundAndNotify'>
      <retval type='v' />
    </method>
    <method selector='readInBackgroundAndNotifyForModes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='readToEndOfFileInBackgroundAndNotify'>
      <retval type='v' />
    </method>
    <method selector='readToEndOfFileInBackgroundAndNotifyForModes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='seekToEndOfFile'>
      <retval type='Q' />
    </method>
    <method selector='seekToFileOffset:'>
      <retval type='v' />
      <arg index='0' type='Q' />
    </method>
    <method selector='synchronizeFile'>
      <retval type='v' />
    </method>
    <method selector='truncateFileAtOffset:'>
      <retval type='v' />
      <arg index='0' type='Q' />
    </method>
    <method selector='waitForDataInBackgroundAndNotify'>
      <retval type='v' />
    </method>
    <method selector='waitForDataInBackgroundAndNotifyForModes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='writeData:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSFileManager'>
    <method selector='attributesOfFileSystemForPath:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='attributesOfItemAtPath:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='changeCurrentDirectoryPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='changeFileAttributes:atPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='componentsToDisplayForPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='contentsAtPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='contentsEqualAtPath:andPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='contentsOfDirectoryAtPath:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='copyItemAtPath:toPath:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='copyPath:toPath:handler:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='createDirectoryAtPath:attributes:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='createDirectoryAtPath:withIntermediateDirectories:attributes:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
      <arg index='2' type='@' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='createFileAtPath:contents:attributes:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='createSymbolicLinkAtPath:pathContent:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='createSymbolicLinkAtPath:withDestinationPath:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='currentDirectoryPath'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='defaultManager'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='destinationOfSymbolicLinkAtPath:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='directoryContentsAtPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='displayNameAtPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='enumeratorAtPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='fileAttributesAtPath:traverseLink:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='fileExistsAtPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='fileExistsAtPath:isDirectory:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='^B' type_modifier='o' />
    </method>
    <method selector='fileSystemAttributesAtPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='fileSystemRepresentationWithPath:'>
      <retval c_array_delimited_by_null='true' type='^t' />
      <arg index='0' type='@' />
    </method>
    <method selector='isDeletableFileAtPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isExecutableFileAtPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isReadableFileAtPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isWritableFileAtPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='linkItemAtPath:toPath:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='linkPath:toPath:handler:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='moveItemAtPath:toPath:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='movePath:toPath:handler:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='pathContentOfSymbolicLinkAtPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeFileAtPath:handler:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='removeItemAtPath:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='setAttributes:ofItemAtPath:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='stringWithFileSystemRepresentation:length:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type='^t' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='subpathsAtPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='subpathsOfDirectoryAtPath:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
  </class>
  <class name='NSFormatter'>
    <method selector='attributedStringForObjectValue:withDefaultAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='editingStringForObjectValue:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='getObjectValue:forString:errorDescription:'>
      <retval type='B' />
      <arg index='0' null_accepted='false' type_modifier='o' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='isPartialStringValid:newEditingString:errorDescription:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' null_accepted='false' type_modifier='N' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:'>
      <retval type='B' />
      <arg index='0' null_accepted='false' type_modifier='N' />
      <arg index='1' null_accepted='false' type_modifier='N' />
      <arg index='2' type='@' />
      <arg index='3' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='4' type_modifier='o' />
    </method>
    <method selector='stringForObjectValue:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSGarbageCollector'>
    <method selector='collectExhaustively'>
      <retval type='v' />
    </method>
    <method selector='collectIfNeeded'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='defaultCollector'>
      <retval type='@' />
    </method>
    <method selector='disable'>
      <retval type='v' />
    </method>
    <method selector='disableCollectorForPointer:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='enable'>
      <retval type='v' />
    </method>
    <method selector='enableCollectorForPointer:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='isCollecting'>
      <retval type='B' />
    </method>
    <method selector='isEnabled'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSHTTPCookie'>
    <method selector='comment'>
      <retval type='@' />
    </method>
    <method selector='commentURL'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='cookieWithProperties:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='cookiesWithResponseHeaderFields:forURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='domain'>
      <retval type='@' />
    </method>
    <method selector='expiresDate'>
      <retval type='@' />
    </method>
    <method selector='initWithProperties:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isSecure'>
      <retval type='B' />
    </method>
    <method selector='isSessionOnly'>
      <retval type='B' />
    </method>
    <method selector='name'>
      <retval type='@' />
    </method>
    <method selector='path'>
      <retval type='@' />
    </method>
    <method selector='portList'>
      <retval type='@' />
    </method>
    <method selector='properties'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='requestHeaderFieldsWithCookies:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='value'>
      <retval type='@' />
    </method>
    <method selector='version'>
      <retval type='I' type64='Q' />
    </method>
  </class>
  <class name='NSHTTPCookieStorage'>
    <method selector='cookieAcceptPolicy'>
      <retval type='I' />
    </method>
    <method selector='cookies'>
      <retval type='@' />
    </method>
    <method selector='cookiesForURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='deleteCookie:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCookie:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCookieAcceptPolicy:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setCookies:forURL:mainDocumentURL:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='sharedHTTPCookieStorage'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSHTTPURLResponse'>
    <method selector='allHeaderFields'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='localizedStringForStatusCode:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='statusCode'>
      <retval type='i' type64='q' />
    </method>
  </class>
  <class name='NSHashTable'>
    <method selector='addObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='allObjects'>
      <retval type='@' />
    </method>
    <method selector='anyObject'>
      <retval type='@' />
    </method>
    <method selector='containsObject:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='count'>
      <retval type='I' type64='Q' />
    </method>
    <method class_method='true' selector='hashTableWithOptions:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method class_method='true' selector='hashTableWithWeakObjects'>
      <retval type='@' />
    </method>
    <method selector='initWithOptions:capacity:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='initWithPointerFunctions:capacity:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='intersectHashTable:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='intersectsHashTable:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isEqualToHashTable:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isSubsetOfHashTable:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='member:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='minusHashTable:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='objectEnumerator'>
      <retval type='@' />
    </method>
    <method selector='pointerFunctions'>
      <retval type='@' />
    </method>
    <method selector='removeAllObjects'>
      <retval type='v' />
    </method>
    <method selector='removeObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setRepresentation'>
      <retval type='@' />
    </method>
    <method selector='unionHashTable:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSHost'>
    <method selector='address'>
      <retval type='@' />
    </method>
    <method selector='addresses'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='currentHost'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='flushHostCache'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='hostWithAddress:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='hostWithName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isEqualToHost:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='isHostCacheEnabled'>
      <retval type='B' />
    </method>
    <method selector='name'>
      <retval type='@' />
    </method>
    <method selector='names'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='setHostCacheEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='NSIndexPath'>
    <method selector='compare:'>
      <retval type='i' />
      <arg index='0' type='@' />
    </method>
    <method selector='getIndexes:' >
      <arg index='0' c_array_of_variable_length='true' type_modifier='o'  />
    </method>
    <method selector='indexAtPosition:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='indexPathByAddingIndex:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='indexPathByRemovingLastIndex'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='indexPathWithIndex:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='indexPathWithIndexes:length:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='initWithIndex:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='initWithIndexes:length:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='length'>
      <retval type='I' type64='Q' />
    </method>
  </class>
  <class name='NSIndexSet'>
    <method selector='containsIndex:'>
      <retval type='B' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='containsIndexes:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='containsIndexesInRange:'>
      <retval type='B' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='count'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='countOfIndexesInRange:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='firstIndex'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='getIndexes:maxCount:inIndexRange:'>
      <retval type='I' type64='Q' />
      <arg c_array_length_in_arg='1' index='0' null_accepted='false' type_modifier='o' c_array_length_in_result='true' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' null_accepted='false' type_modifier='N' />
    </method>
    <method selector='indexGreaterThanIndex:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='indexGreaterThanOrEqualToIndex:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='indexLessThanIndex:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='indexLessThanOrEqualToIndex:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='indexSet'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='indexSetWithIndex:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='indexSetWithIndexesInRange:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='initWithIndex:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='initWithIndexSet:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithIndexesInRange:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='intersectsIndexesInRange:'>
      <retval type='B' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='isEqualToIndexSet:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='lastIndex'>
      <retval type='I' type64='Q' />
    </method>
  </class>
  <class name='NSIndexSpecifier'>
    <method selector='index'>
      <retval type='i' type64='q' />
    </method>
    <method selector='initWithContainerClassDescription:containerSpecifier:key:index:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='i' type64='q' />
    </method>
    <method selector='setIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
  </class>
  <class name='NSInputStream'>
    <method selector='getBuffer:length:' suggestion='Not supported at the moment' />
    <method selector='hasBytesAvailable'>
      <retval type='B' />
    </method>
    <method selector='initWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithFileAtPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='inputStreamWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='inputStreamWithFileAtPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='read:maxLength:'>
      <retval type='i' type64='q' />
      <arg c_array_length_in_arg='1' c_array_length_in_result='true' index='0' type='^v' type64='^v' type_modifier='o' />
      <arg index='1' type='I' type64='Q' />
    </method>
  </class>
  <class name='NSInvocation'>
    <method selector='argumentsRetained'>
      <retval type='B' />
    </method>
    <method selector='getArgument:atIndex:'>
      <retval type='v' />
      <arg index='0' type='^v' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='getReturnValue:'>
      <retval type='v' />
      <arg index='0' type='^v' />
    </method>
    <method class_method='true' selector='invocationWithMethodSignature:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='invoke'>
      <retval type='v' />
    </method>
    <method selector='invokeWithTarget:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='methodSignature'>
      <retval type='@' />
    </method>
    <method selector='retainArguments'>
      <retval type='v' />
    </method>
    <method selector='selector'>
      <retval type=':' />
    </method>
    <method selector='setArgument:atIndex:'>
      <retval type='v' />
      <arg index='0' type='^v' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setReturnValue:'>
      <retval type='v' />
      <arg index='0' type='^v' />
    </method>
    <method selector='setSelector:'>
      <retval type='v' />
      <arg index='0' type=':' />
    </method>
    <method selector='setTarget:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='target'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSInvocationOperation'>
    <method selector='initWithInvocation:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithTarget:selector:object:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@' />
      <arg index='2' type='@' />
    </method>
    <method selector='invocation'>
      <retval type='@' />
    </method>
    <method selector='result'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSKeyedArchiver'>
    <method class_method='true' selector='archiveRootObject:toFile:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='archivedDataWithRootObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='classNameForClass:'>
      <retval type='@' />
      <arg index='0' type='#' />
    </method>
    <method selector='classNameForClass:'>
      <retval type='@' />
      <arg index='0' type='#' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='encodeBool:forKey:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeBytes:length:forKey:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type='^v' type64='^v' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='@' />
    </method>
    <method selector='encodeConditionalObject:forKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeDouble:forKey:'>
      <retval type='v' />
      <arg index='0' type='d' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeFloat:forKey:'>
      <retval type='v' />
      <arg index='0' type='f' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeInt32:forKey:'>
      <retval type='v' />
      <arg index='0' type='i' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeInt64:forKey:'>
      <retval type='v' />
      <arg index='0' type='q' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeInt:forKey:'>
      <retval type='v' />
      <arg index='0' type='i' />
      <arg index='1' type='@' />
    </method>
    <method selector='encodeObject:forKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='finishEncoding'>
      <retval type='v' />
    </method>
    <method selector='initForWritingWithMutableData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='outputFormat'>
      <retval type='I' />
    </method>
    <method class_method='true' selector='setClassName:forClass:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='#' />
    </method>
    <method selector='setClassName:forClass:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='#' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setOutputFormat:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
  </class>
  <class name='NSKeyedUnarchiver'>
    <method class_method='true' selector='classForClassName:'>
      <retval type='#' />
      <arg index='0' type='@' />
    </method>
    <method selector='classForClassName:'>
      <retval type='#' />
      <arg index='0' type='@' />
    </method>
    <method selector='containsValueForKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeBoolForKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeBytesForKey:returnedLength:'>
      <retval c_array_length_in_arg='1' type='^v' type64='^v' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='decodeDoubleForKey:'>
      <retval type='d' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeFloatForKey:'>
      <retval type='f' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeInt32ForKey:'>
      <retval type='i' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeInt64ForKey:'>
      <retval type='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeIntForKey:'>
      <retval type='i' />
      <arg index='0' type='@' />
    </method>
    <method selector='decodeObjectForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='finishDecoding'>
      <retval type='v' />
    </method>
    <method selector='initForReadingWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setClass:forClassName:'>
      <retval type='v' />
      <arg index='0' type='#' />
      <arg index='1' type='@' />
    </method>
    <method selector='setClass:forClassName:'>
      <retval type='v' />
      <arg index='0' type='#' />
      <arg index='1' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='unarchiveObjectWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='unarchiveObjectWithFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSLocale'>
    <method class_method='true' selector=''>
      <retval type='@' />
    </method>
    <method class_method='true' selector=''>
      <retval type='@' />
    </method>
    <method class_method='true' selector=''>
      <retval type='@' />
    </method>
    <method class_method='true' selector='ISOCountryCodes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='ISOCurrencyCodes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='ISOLanguageCodes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='availableLocaleIdentifiers'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='canonicalLocaleIdentifierFromString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='componentsFromLocaleIdentifier:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='currentLocale'>
      <retval type='@' />
    </method>
    <method selector='displayNameForKey:value:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithLocaleIdentifier:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='localeIdentifier'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='localeIdentifierFromComponents:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='objectForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='systemLocale'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSLock'>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector='lockBeforeDate:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tryLock'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSLogicalTest'>
    <method selector='initAndTestWithTests:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initNotTestWithTest:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initOrTestWithTests:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSMachBootstrapServer'>
    <method selector='portForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='portForName:host:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='registerPort:name:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='servicePortWithName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='sharedInstance'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSMachPort'>
    <method selector='initWithMachPort:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method selector='initWithMachPort:options:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='machPort'>
      <retval type='I' />
    </method>
    <method class_method='true' selector='portWithMachPort:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method class_method='true' selector='portWithMachPort:options:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='removeFromRunLoop:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='scheduleInRunLoop:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
  </class>
  <class name='NSMapTable'>
    <method selector='count'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='dictionaryRepresentation'>
      <retval type='@' />
    </method>
    <method selector='initWithKeyOptions:valueOptions:capacity:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='I' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='initWithKeyPointerFunctions:valuePointerFunctions:capacity:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='keyEnumerator'>
      <retval type='@' />
    </method>
    <method selector='keyPointerFunctions'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='mapTableWithKeyOptions:valueOptions:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='I' />
    </method>
    <method class_method='true' selector='mapTableWithStrongToStrongObjects'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='mapTableWithStrongToWeakObjects'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='mapTableWithWeakToStrongObjects'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='mapTableWithWeakToWeakObjects'>
      <retval type='@' />
    </method>
    <method selector='objectEnumerator'>
      <retval type='@' />
    </method>
    <method selector='objectForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeAllObjects'>
      <retval type='v' />
    </method>
    <method selector='removeObjectForKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setObject:forKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='valuePointerFunctions'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSMessagePortNameServer'>
    <method selector='portForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='portForName:host:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='sharedInstance'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSMetadataItem'>
    <method selector='attributes'>
      <retval type='@' />
    </method>
    <method selector='valueForAttribute:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='valuesForAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSMetadataQuery'>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='disableUpdates'>
      <retval type='v' />
    </method>
    <method selector='enableUpdates'>
      <retval type='v' />
    </method>
    <method selector='groupedResults'>
      <retval type='@' />
    </method>
    <method selector='groupingAttributes'>
      <retval type='@' />
    </method>
    <method selector='indexOfResult:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='@' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='isGathering'>
      <retval type='B' />
    </method>
    <method selector='isStarted'>
      <retval type='B' />
    </method>
    <method selector='isStopped'>
      <retval type='B' />
    </method>
    <method selector='notificationBatchingInterval'>
      <retval type='d' />
    </method>
    <method selector='predicate'>
      <retval type='@' />
    </method>
    <method selector='resultAtIndex:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='resultCount'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='results'>
      <retval type='@' />
    </method>
    <method selector='searchScopes'>
      <retval type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setGroupingAttributes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setNotificationBatchingInterval:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setPredicate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSearchScopes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSortDescriptors:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setValueListAttributes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='sortDescriptors'>
      <retval type='@' />
    </method>
    <method selector='startQuery'>
      <retval type='B' />
    </method>
    <method selector='stopQuery'>
      <retval type='v' />
    </method>
    <method selector='valueListAttributes'>
      <retval type='@' />
    </method>
    <method selector='valueLists'>
      <retval type='@' />
    </method>
    <method selector='valueOfAttribute:forResultAtIndex:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
  </class>
  <class name='NSMetadataQueryAttributeValueTuple'>
    <method selector='attribute'>
      <retval type='@' />
    </method>
    <method selector='count'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='value'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSMetadataQueryResultGroup'>
    <method selector='attribute'>
      <retval type='@' />
    </method>
    <method selector='resultAtIndex:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='resultCount'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='results'>
      <retval type='@' />
    </method>
    <method selector='subgroups'>
      <retval type='@' />
    </method>
    <method selector='value'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSMethodSignature'>
    <method selector='frameLength'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='getArgumentTypeAtIndex:'>
      <retval c_array_delimited_by_null='true' type='^t' type64='^t' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='isOneway'>
      <retval type='B' />
    </method>
    <method selector='methodReturnLength'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='methodReturnType'>
      <retval c_array_delimited_by_null='true' type='^t' type64='^t' />
    </method>
    <method selector='numberOfArguments'>
      <retval type='I' type64='Q' />
    </method>
    <method class_method='true' selector='signatureWithObjCTypes:'>
      <retval type='@' />
      <arg c_array_delimited_by_null='true' index='0' type='^t' type_modifier='n' />
    </method>
  </class>
  <class name='NSMoveCommand'>
    <method selector='keySpecifier'>
      <retval type='@' />
    </method>
    <method selector='setReceiversSpecifier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSMutableArray'>
	  <method selector='sortUsingFunction:context:' >
		  <arg index='0' function_pointer='true' function_pointer_retained='false' >
			  <retval type='i' />
			  <arg type='@' />
			  <arg type='@' />
			  <arg type='@' />
		  </arg>
		  <arg index='1' type='@' />
	  </method>

    <method selector='addObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addObjectsFromArray:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='arrayWithCapacity:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='context:'>
      <retval type='v' />
      <arg index='0' type='^v' />
    </method>
    <method selector='exchangeObjectAtIndex:withObjectAtIndex:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='filterUsingPredicate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithCapacity:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='insertObject:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='insertObjects:atIndexes:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='removeAllObjects'>
      <retval type='v' />
    </method>
    <method selector='removeLastObject'>
      <retval type='v' />
    </method>
    <method selector='removeObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeObject:inRange:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='removeObjectAtIndex:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='removeObjectIdenticalTo:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeObjectIdenticalTo:inRange:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='removeObjectsAtIndexes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeObjectsFromIndices:numIndices:'>
      <retval type='v' />
      <arg index='0' type_modifier='n' c_array_length_in_arg='1' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='removeObjectsInArray:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeObjectsInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='replaceObjectAtIndex:withObject:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
    </method>
    <method selector='replaceObjectsAtIndexes:withObjects:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='replaceObjectsInRange:withObjectsFromArray:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='replaceObjectsInRange:withObjects:count:'>
	                <arg index='1' type_modifier='n' c_array_length_in_arg='2' />
			           </method>

    <method selector='replaceObjectsInRange:withObjectsFromArray:range:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setArray:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='sortUsingDescriptors:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='sortUsingSelector:'>
      <retval type='v' />
      <arg index='0' sel_of_type='i@:@' />
    </method>
  </class>
  <class name='NSMutableAttributedString'>
    <method selector='addAttribute:value:range:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='addAttributes:range:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='appendAttributedString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='beginEditing'>
      <retval type='v' />
    </method>
    <method selector='deleteCharactersInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='endEditing'>
      <retval type='v' />
    </method>
    <method selector='insertAttributedString:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='mutableString'>
      <retval type='@' />
    </method>
    <method selector='removeAttribute:range:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='replaceCharactersInRange:withAttributedString:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='replaceCharactersInRange:withString:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='setAttributedString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAttributes:range:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
  </class>
  <class name='NSMutableCharacterSet'>
    <method selector='addCharactersInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='addCharactersInString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='formIntersectionWithCharacterSet:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='formUnionWithCharacterSet:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='invert'>
      <retval type='v' />
    </method>
    <method selector='removeCharactersInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='removeCharactersInString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSMutableData'>
    <method selector='appendBytes:length:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='appendData:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='dataWithCapacity:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='dataWithLength:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='increaseLengthBy:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='initWithCapacity:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='initWithLength:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='replaceBytesInRange:withBytes:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg c_array_length_in_arg='0' index='1' type_modifier='n' />
    </method>
    <method selector='replaceBytesInRange:withBytes:length:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='resetBytesInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setData:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLength:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
  </class>
  <class name='NSMutableDictionary'>
    <method selector='addEntriesFromDictionary:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='dictionaryWithCapacity:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='initWithCapacity:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='removeAllObjects'>
      <retval type='v' />
    </method>
    <method selector='removeObjectForKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeObjectsForKeys:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDictionary:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setObject:forKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setValue:forKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
  </class>
  <class name='NSMutableIndexSet'>
    <method selector='addIndex:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='addIndexes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addIndexesInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='removeAllIndexes'>
      <retval type='v' />
    </method>
    <method selector='removeIndex:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='removeIndexes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeIndexesInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='shiftIndexesStartingAtIndex:by:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='i' type64='q' />
    </method>
  </class>
  <class name='NSMutableSet'>
    <method selector='addObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addObjectsFromArray:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='filterUsingPredicate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithCapacity:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='intersectSet:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='minusSet:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeAllObjects'>
      <retval type='v' />
    </method>
    <method selector='removeObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSet:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setWithCapacity:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='unionSet:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSMutableString'>
    <method selector='appendFormat:' variadic='true'>
      <retval type='v' />
      <arg index='0' printf_format='true' type='@' />
    </method>
    <method selector='appendString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='deleteCharactersInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='initWithCapacity:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='insertString:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='replaceCharactersInRange:withString:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='replaceOccurrencesOfString:withString:options:range:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
      <arg index='3' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='stringWithCapacity:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
  </class>
  <class name='NSMutableURLRequest'>
    <method selector='addValue:forHTTPHeaderField:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setAllHTTPHeaderFields:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCachePolicy:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setHTTPBody:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHTTPBodyStream:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHTTPMethod:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHTTPShouldHandleCookies:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setMainDocumentURL:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTimeoutInterval:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setURL:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setValue:forHTTPHeaderField:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
  </class>
  <class name='NSNameSpecifier'>
    <method selector='initWithContainerClassDescription:containerSpecifier:key:name:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='name'>
      <retval type='@' />
    </method>
    <method selector='setName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSNetService'>
    <method selector='TXTRecordData'>
      <retval type='@' />
    </method>
    <method selector='addresses'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='dataFromTXTRecordDictionary:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='dictionaryFromTXTRecordData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='domain'>
      <retval type='@' />
    </method>
    <method selector='getInputStream:outputStream:'>
      <retval type='B' />
      <arg index='0' null_accepted='false' type_modifier='o' />
      <arg index='1' null_accepted='false' type_modifier='o' />
    </method>
    <method selector='hostName'>
      <retval type='@' />
    </method>
    <method selector='initWithDomain:type:name:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='initWithDomain:type:name:port:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='i' />
    </method>
    <method selector='name'>
      <retval type='@' />
    </method>
    <method selector='port'>
      <retval type='i' type64='q' />
    </method>
    <method selector='protocolSpecificInformation'>
      <retval type='@' />
    </method>
    <method selector='publish'>
      <retval type='v' />
    </method>
    <method selector='publishWithOptions:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='removeFromRunLoop:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='resolve'>
      <retval type='v' />
    </method>
    <method selector='resolveWithTimeout:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='scheduleInRunLoop:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setProtocolSpecificInformation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTXTRecordData:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='startMonitoring'>
      <retval type='v' />
    </method>
    <method selector='stop'>
      <retval type='v' />
    </method>
    <method selector='stopMonitoring'>
      <retval type='v' />
    </method>
    <method selector='type'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSNetServiceBrowser'>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='removeFromRunLoop:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='scheduleInRunLoop:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='searchForAllDomains'>
      <retval type='v' />
    </method>
    <method selector='searchForBrowsableDomains'>
      <retval type='v' />
    </method>
    <method selector='searchForRegistrationDomains'>
      <retval type='v' />
    </method>
    <method selector='searchForServicesOfType:inDomain:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='stop'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSNotification'>
    <method selector='name'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='notificationWithName:object:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='notificationWithName:object:userInfo:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='object'>
      <retval type='@' />
    </method>
    <method selector='userInfo'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSNotificationCenter'>
    <method selector='addObserver:selector:name:object:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method class_method='true' selector='defaultCenter'>
      <retval type='@' />
    </method>
    <method selector='postNotification:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='postNotificationName:object:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='postNotificationName:object:userInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='removeObserver:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeObserver:name:object:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
  </class>
  <class name='NSNotificationQueue'>
    <method class_method='true' selector='defaultQueue'>
      <retval type='@' />
    </method>
    <method selector='dequeueNotificationsMatching:coalesceMask:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='enqueueNotification:postingStyle:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
    </method>
    <method selector='enqueueNotification:postingStyle:coalesceMask:forModes:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='@' />
    </method>
    <method selector='initWithNotificationCenter:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSNull'>
    <method class_method='true' selector='null'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSNumber'>
    <method selector='boolValue'>
      <retval type='B' />
    </method>
    <method selector='charValue'>
      <retval type='c' />
    </method>
    <method selector='compare:'>
      <retval type='i' />
      <arg index='0' type='@' />
    </method>
    <method selector='decimalValue'>
      <retval type='{NSDecimal=b8b4b1b1b18[8S]}' />
    </method>
    <method selector='descriptionWithLocale:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='doubleValue'>
      <retval type='d' />
    </method>
    <method selector='floatValue'>
      <retval type='f' />
    </method>
    <method selector='initWithBool:'>
      <retval type='@' />
      <arg index='0' type='B' />
    </method>
    <method selector='initWithChar:'>
      <retval type='@' />
      <arg index='0' type='z' type64='z' />
    </method>
    <method selector='initWithDouble:'>
      <retval type='@' />
      <arg index='0' type='d' />
    </method>
    <method selector='initWithFloat:'>
      <retval type='@' />
      <arg index='0' type='f' />
    </method>
    <method selector='initWithInt:'>
      <retval type='@' />
      <arg index='0' type='i' />
    </method>
    <method selector='initWithInteger:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='initWithLong:'>
      <retval type='@' />
      <arg index='0' type='l' type64='q' />
    </method>
    <method selector='initWithLongLong:'>
      <retval type='@' />
      <arg index='0' type='q' />
    </method>
    <method selector='initWithShort:'>
      <retval type='@' />
      <arg index='0' type='s' />
    </method>
    <method selector='initWithUnsignedChar:'>
      <retval type='@' />
      <arg index='0' type='C' />
    </method>
    <method selector='initWithUnsignedInt:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method selector='initWithUnsignedInteger:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='initWithUnsignedLong:'>
      <retval type='@' />
      <arg index='0' type='L' type64='Q' />
    </method>
    <method selector='initWithUnsignedLongLong:'>
      <retval type='@' />
      <arg index='0' type='Q' />
    </method>
    <method selector='initWithUnsignedShort:'>
      <retval type='@' />
      <arg index='0' type='S' />
    </method>
    <method selector='intValue'>
      <retval type='i' />
    </method>
    <method selector='integerValue'>
      <retval type='i' type64='q' />
    </method>
    <method selector='isEqualToNumber:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='longLongValue'>
      <retval type='q' />
    </method>
    <method selector='longValue'>
      <retval type='l' type64='q' />
    </method>
    <method class_method='true' selector='numberWithBool:'>
      <retval type='@' />
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='numberWithChar:'>
      <retval type='@' />
      <arg index='0' type='z' type64='z' />
    </method>
    <method class_method='true' selector='numberWithDouble:'>
      <retval type='@' />
      <arg index='0' type='d' />
    </method>
    <method class_method='true' selector='numberWithFloat:'>
      <retval type='@' />
      <arg index='0' type='f' />
    </method>
    <method class_method='true' selector='numberWithInt:'>
      <retval type='@' />
      <arg index='0' type='i' />
    </method>
    <method class_method='true' selector='numberWithInteger:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method class_method='true' selector='numberWithLong:'>
      <retval type='@' />
      <arg index='0' type='l' type64='q' />
    </method>
    <method class_method='true' selector='numberWithLongLong:'>
      <retval type='@' />
      <arg index='0' type='q' />
    </method>
    <method class_method='true' selector='numberWithShort:'>
      <retval type='@' />
      <arg index='0' type='s' />
    </method>
    <method class_method='true' selector='numberWithUnsignedChar:'>
      <retval type='@' />
      <arg index='0' type='C' />
    </method>
    <method class_method='true' selector='numberWithUnsignedInt:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method class_method='true' selector='numberWithUnsignedInteger:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='numberWithUnsignedLong:'>
      <retval type='@' />
      <arg index='0' type='L' type64='Q' />
    </method>
    <method class_method='true' selector='numberWithUnsignedLongLong:'>
      <retval type='@' />
      <arg index='0' type='Q' />
    </method>
    <method class_method='true' selector='numberWithUnsignedShort:'>
      <retval type='@' />
      <arg index='0' type='S' />
    </method>
    <method selector='shortValue'>
      <retval type='s' />
    </method>
    <method selector='stringValue'>
      <retval type='@' />
    </method>
    <method selector='unsignedCharValue'>
      <retval type='C' />
    </method>
    <method selector='unsignedIntValue'>
      <retval type='I' />
    </method>
    <method selector='unsignedIntegerValue'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='unsignedLongLongValue'>
      <retval type='Q' />
    </method>
    <method selector='unsignedLongValue'>
      <retval type='L' type64='Q' />
    </method>
    <method selector='unsignedShortValue'>
      <retval type='S' />
    </method>
  </class>
  <class name='NSNumberFormatter'>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' type64='Q' />
    </method>
    <method selector=''>
      <retval type='@' type64='Q' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector='allowsFloats'>
      <retval type='B' />
    </method>
    <method selector='alwaysShowsDecimalSeparator'>
      <retval type='B' />
    </method>
    <method selector='attributedStringForNil'>
      <retval type='@' />
    </method>
    <method selector='attributedStringForNotANumber'>
      <retval type='@' />
    </method>
    <method selector='attributedStringForZero'>
      <retval type='@' />
    </method>
    <method selector='currencyCode'>
      <retval type='@' />
    </method>
    <method selector='currencyDecimalSeparator'>
      <retval type='@' />
    </method>
    <method selector='currencySymbol'>
      <retval type='@' />
    </method>
    <method selector='decimalSeparator'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='defaultFormatterBehavior'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='exponentSymbol'>
      <retval type='@' />
    </method>
    <method selector='format'>
      <retval type='@' />
    </method>
    <method selector='formatWidth'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='formatterBehavior'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='generatesDecimalNumbers'>
      <retval type='B' />
    </method>
    <method selector='getObjectValue:forString:range:error:'>
      <retval type='B' />
      <arg index='0' type_modifier='o' />
      <arg index='2' type_modifier='N' />
      <arg index='3' type_modifier='o' null_accepted='true' />
    </method>
    <method selector='groupingSeparator'>
      <retval type='@' />
    </method>
    <method selector='groupingSize'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='hasThousandSeparators'>
      <retval type='B' />
    </method>
    <method selector='isLenient'>
      <retval type='B' />
    </method>
    <method selector='usesSignificantDigits'>
      <retval type='B' />
    </method>
    <method selector='isPartialStringValidationEnabled'>
      <retval type='B' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='internationalCurrencySymbol'>
      <retval type='@' />
    </method>
    <method selector='locale'>
      <retval type='@' />
    </method>
    <method selector='localizesFormat'>
      <retval type='B' />
    </method>
    <method selector='maximum'>
      <retval type='@' />
    </method>
    <method selector='maximum'>
      <retval type='@' />
    </method>
    <method selector='maximumFractionDigits'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='maximumIntegerDigits'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='minimum'>
      <retval type='@' />
    </method>
    <method selector='minimum'>
      <retval type='@' />
    </method>
    <method selector='minimumFractionDigits'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='minimumIntegerDigits'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='minusSign'>
      <retval type='@' />
    </method>
    <method selector='multiplier'>
      <retval type='@' />
    </method>
    <method selector='negativeFormat'>
      <retval type='@' />
    </method>
    <method selector='negativeInfinitySymbol'>
      <retval type='@' />
    </method>
    <method selector='negativePrefix'>
      <retval type='@' />
    </method>
    <method selector='negativeSuffix'>
      <retval type='@' />
    </method>
    <method selector='nilSymbol'>
      <retval type='@' />
    </method>
    <method selector='notANumberSymbol'>
      <retval type='@' />
    </method>
    <method selector='numberFromString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='numberStyle'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='paddingCharacter'>
      <retval type='@' />
    </method>
    <method selector='paddingPosition'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='perMillSymbol'>
      <retval type='@' />
    </method>
    <method selector='percentSymbol'>
      <retval type='@' />
    </method>
    <method selector='plusSign'>
      <retval type='@' />
    </method>
    <method selector='positiveFormat'>
      <retval type='@' />
    </method>
    <method selector='positiveInfinitySymbol'>
      <retval type='@' />
    </method>
    <method selector='positivePrefix'>
      <retval type='@' />
    </method>
    <method selector='positiveSuffix'>
      <retval type='@' />
    </method>
    <method selector='roundingBehavior'>
      <retval type='@' />
    </method>
    <method selector='roundingIncrement'>
      <retval type='@' />
    </method>
    <method selector='roundingMode'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='secondaryGroupingSize'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='setAllowsFloats:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAlwaysShowsDecimalSeparator:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAttributedStringForNil:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAttributedStringForNotANumber:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAttributedStringForZero:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCurrencyCode:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCurrencyDecimalSeparator:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCurrencyGroupingSeparator:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCurrencySymbol:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDecimalSeparator:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setDefaultFormatterBehavior:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setExponentSymbol:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFormat:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFormatWidth:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setFormatterBehavior:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setGeneratesDecimalNumbers:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setGroupingSeparator:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setGroupingSize:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setHasThousandSeparators:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setInternationalCurrencySymbol:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLenient:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setLocale:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLocalizesFormat:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setMaximum:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMaximum:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMaximumFractionDigits:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setMaximumIntegerDigits:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setMaximumSignificantDigits:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setMinimum:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMinimum:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMinimumFractionDigits:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setMinimumIntegerDigits:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setMinimumSignificantDigits:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setMinusSign:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMultiplier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setNegativeFormat:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setNegativeInfinitySymbol:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setNegativePrefix:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setNegativeSuffix:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setNilSymbol:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setNotANumberSymbol:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setNumberStyle:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setPaddingCharacter:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPaddingPosition:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setPartialStringValidationEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setPerMillSymbol:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPercentSymbol:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPlusSign:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPositiveFormat:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPositiveInfinitySymbol:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPositivePrefix:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPositiveSuffix:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setRoundingBehavior:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setRoundingIncrement:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setRoundingMode:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setSecondaryGroupingSize:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setTextAttributesForNegativeInfinity:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTextAttributesForNegativeValues:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTextAttributesForNil:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTextAttributesForNotANumber:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTextAttributesForPositiveInfinity:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTextAttributesForPositiveValues:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTextAttributesForZero:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setThousandSeparator:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setUsesGroupingSeparator:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setUsesSignificantDigits:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setZeroSymbol:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='stringFromNumber:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='textAttributesForNegativeInfinity'>
      <retval type='@' />
    </method>
    <method selector='textAttributesForNegativeValues'>
      <retval type='@' />
    </method>
    <method selector='textAttributesForNil'>
      <retval type='@' />
    </method>
    <method selector='textAttributesForNotANumber'>
      <retval type='@' />
    </method>
    <method selector='textAttributesForPositiveInfinity'>
      <retval type='@' />
    </method>
    <method selector='textAttributesForPositiveValues'>
      <retval type='@' />
    </method>
    <method selector='textAttributesForZero'>
      <retval type='@' />
    </method>
    <method selector='thousandSeparator'>
      <retval type='@' />
    </method>
    <method selector='usesGroupingSeparator'>
      <retval type='B' />
    </method>
    <method selector='zeroSymbol'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSObject'>
    <method selector='mutableCopyWithZone:'>
      <retval type='@' />
      <arg index='0' type='^{_NSZone=}' />
    </method>
    <method class_method='true' selector='mutableCopyWithZone:'>
      <retval type='@' />
      <arg index='0' type='^{_NSZone=}' />
    </method>
    <method selector=''>
      <retval type='v' />
    </method>
    <method selector='URL:resourceDataDidBecomeAvailable:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='URL:resourceDidFailLoadingWithReason:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='URLHandle:resourceDataDidBecomeAvailable:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='URLHandle:resourceDidFailLoadingWithReason:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='URLHandleResourceDidBeginLoading:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='URLHandleResourceDidCancelLoading:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='URLHandleResourceDidFinishLoading:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='URLProtocol:cachedResponseIsValid:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='URLProtocol:didCancelAuthenticationChallenge:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='URLProtocol:didFailWithError:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='URLProtocol:didLoadData:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='URLProtocol:didReceiveAuthenticationChallenge:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='URLProtocol:didReceiveResponse:cacheStoragePolicy:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
    </method>
    <method selector='URLProtocol:wasRedirectedToRequest:redirectResponse:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='URLProtocolDidFinishLoading:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='URLResourceDidCancelLoading:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='URLResourceDidFinishLoading:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='accessInstanceVariablesDirectly'>
      <retval type='B' />
    </method>
    <method selector='addObserver:forKeyPath:options:context:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
      <arg index='3' type='^v' />
    </method>
    <method class_method='true' selector='alloc'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='allocWithZone:'>
      <retval type='@' />
    </method>
    <method selector='archiver:didEncodeObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='archiver:willEncodeObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='archiver:willReplaceObject:withObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='archiverDidFinish:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='archiverWillFinish:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='attemptRecoveryFromError:optionIndex:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='@' />
      <arg index='3' sel_of_type='v@:B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='attributeKeys'>
      <retval type='@' />
    </method>
    <method selector='authenticateComponents:withData:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='authenticationDataForComponents:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='automaticallyNotifiesObserversForKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='autorelease'>
      <retval type='@' />
    </method>
    <method selector='awakeAfterUsingCoder:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='cancelAuthenticationChallenge:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='cancelPreviousPerformRequestsWithTarget:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='cancelPreviousPerformRequestsWithTarget:selector:object:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@' />
      <arg index='2' type='@' />
    </method>
    <method selector='class'>
      <retval type='#' />
    </method>
    <method class_method='true' selector='class'>
      <retval type='#' />
    </method>
    <method selector='classCode'>
      <retval type='L' type64='I' />
    </method>
    <method selector='classDescription'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='classFallbacksForKeyedArchiver'>
      <retval type='@' />
    </method>
    <method selector='classForArchiver'>
      <retval type='#' />
    </method>
    <method selector='classForCoder'>
      <retval type='#' />
    </method>
    <method selector='classForKeyedArchiver'>
      <retval type='#' />
    </method>
    <method class_method='true' selector='classForKeyedUnarchiver'>
      <retval type='#' />
    </method>
    <method selector='classForPortCoder'>
      <retval type='#' />
    </method>
    <method selector='className'>
      <retval type='@' />
    </method>
    <method selector='coerceValue:forKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='conformsToProtocol:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='conformsToProtocol:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='connection:didCancelAuthenticationChallenge:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='connection:didFailWithError:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='connection:didReceiveAuthenticationChallenge:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='connection:didReceiveData:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='connection:didReceiveResponse:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='connection:handleRequest:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='connection:shouldMakeNewConnection:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='connection:willCacheResponse:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='connection:willSendRequest:redirectResponse:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='connectionDidFinishLoading:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='continueWithoutCredentialForAuthenticationChallenge:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='copy'>
      <retval type='@' />
    </method>
    <method selector='copyScriptingValue:forKey:withProperties:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='copyWithZone:'>
      <retval type='@' />
      <arg index='0' type='^{_NSZone=}' />
    </method>
    <method class_method='true' selector='copyWithZone:'>
      <retval type='@' />
      <arg index='0' type='^{_NSZone=}' />
    </method>
    <method selector='countByEnumeratingWithState:objects:count:' suggestion='use python iteration' />
    <method selector='createConversationForConnection:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='dealloc'>
      <retval type='v' />
    </method>
    <method selector='description'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='description'>
      <retval type='@' />
    </method>
    <method selector='dictionaryWithValuesForKeys:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='didChange:valuesAtIndexes:forKey:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='didChangeValueForKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='didChangeValueForKey:withSetMutation:usingObjects:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='@' />
    </method>
    <method selector='doesContain:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='doesNotRecognizeSelector:'>
      <retval type='v' />
      <arg index='0' type=':' />
    </method>
    <method selector='download:decideDestinationWithSuggestedFilename:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='download:didCancelAuthenticationChallenge:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='download:didCreateDestination:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='download:didFailWithError:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='download:didReceiveAuthenticationChallenge:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='download:didReceiveDataOfLength:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='download:didReceiveResponse:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='download:shouldDecodeSourceDataOfMIMEType:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='download:willResumeWithResponse:fromByte:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='q' />
    </method>
    <method selector='download:willSendRequest:redirectResponse:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='downloadDidBegin:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='downloadDidFinish:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='encodeWithCoder:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='exceptionDuringOperation:error:leftOperand:rightOperand:'>
      <retval type='@' />
      <arg index='0' type=':' />
      <arg index='1' type='I' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='fileManager:shouldCopyItemAtPath:toPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='fileManager:shouldLinkItemAtPath:toPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='fileManager:shouldMoveItemAtPath:toPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='fileManager:shouldProceedAfterError:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='fileManager:shouldProceedAfterError:movingItemAtPath:toPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='fileManager:shouldProceedAfterError:removingItemAtPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='fileManager:shouldRemoveItemAtPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='fileManager:willProcessPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='forwardInvocation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='handleMachMessage:'>
      <retval type='v' />
      <arg index='0' type='^v' />
    </method>
    <method selector='handlePortMessage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='handleQueryWithUnboundKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='handleTakeValue:forUnboundKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='hash'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='indicesOfObjectsByEvaluatingObjectSpecifier:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='initWithCoder:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='initialize'>
      <retval type='v' />
    </method>
    <method selector='insertValue:atIndex:inPropertyWithKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='@' />
    </method>
    <method selector='insertValue:inPropertyWithKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='instanceMethodSignatureForSelector:'>
      <retval type='@' />
      <arg index='0' type=':' />
    </method>
    <method class_method='true' selector='instancesRespondToSelector:'>
      <retval type='B' />
      <arg index='0' type=':' />
    </method>
    <method selector='inverseForRelationshipKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isCaseInsensitiveLike:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isEqual:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isEqualTo:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isGreaterThan:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isGreaterThanOrEqualTo:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isKindOfClass:'>
      <retval type='B' />
      <arg index='0' type='#' />
    </method>
    <method selector='isLessThan:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isLessThanOrEqualTo:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isLike:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isMemberOfClass:'>
      <retval type='B' />
      <arg index='0' type='#' />
    </method>
    <method selector='isNotEqualTo:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isProxy'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='isSubclassOfClass:'>
      <retval type='B' />
      <arg index='0' type='#' />
    </method>
    <method class_method='true' selector='keyPathsForValuesAffectingValueForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='load'>
      <retval type='v' />
    </method>
    <method selector='lock'>
      <retval type='v' />
    </method>
    <method selector='makeNewConnection:sender:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='metadataQuery:replacementObjectForResultObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='metadataQuery:replacementValueForAttribute:value:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='methodSignatureForSelector:'>
      <retval type='@' />
      <arg index='0' type=':' />
    </method>
    <method selector='mutableArrayValueForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='mutableArrayValueForKeyPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='mutableCopy'>
      <retval type='@' />
    </method>
    <method selector='mutableCopyWithZone:'>
      <retval type='@' />
      <arg index='0' type='^{_NSZone=}' />
    </method>
    <method class_method='true' selector='mutableCopyWithZone:'>
      <retval type='@' />
      <arg index='0' type='^{_NSZone=}' />
    </method>
    <method selector='mutableSetValueForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='mutableSetValueForKeyPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='netService:didNotPublish:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='netService:didNotResolve:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='netService:didUpdateTXTRecordData:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='netServiceBrowser:didFindDomain:moreComing:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method selector='netServiceBrowser:didFindService:moreComing:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method selector='netServiceBrowser:didNotSearch:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='netServiceBrowser:didRemoveDomain:moreComing:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method selector='netServiceBrowser:didRemoveService:moreComing:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method selector='netServiceBrowserDidStopSearch:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='netServiceBrowserWillSearch:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='netServiceDidPublish:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='netServiceDidResolveAddress:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='netServiceDidStop:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='netServiceWillPublish:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='netServiceWillResolve:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='new'>
      <retval type='@' />
    </method>
    <method selector='newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:'>
      <retval type='@' />
      <arg index='0' type='#' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='objectSpecifier'>
      <retval type='@' />
    </method>
    <method selector='observeValueForKeyPath:ofObject:change:context:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='^v' />
    </method>
    <method selector='parser:didEndElement:namespaceURI:qualifiedName:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='parser:didEndMappingPrefix:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='parser:didStartElement:namespaceURI:qualifiedName:attributes:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' type='@' />
    </method>
    <method selector='parser:didStartMappingPrefix:toURI:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' type='@' />
    </method>
    <method selector='parser:foundCDATA:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='parser:foundCharacters:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='parser:foundComment:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='parser:foundElementDeclarationWithName:model:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='parser:foundExternalEntityDeclarationWithName:publicID:systemID:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='parser:foundIgnorableWhitespace:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='parser:foundInternalEntityDeclarationWithName:value:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='parser:foundNotationDeclarationWithName:publicID:systemID:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='parser:foundProcessingInstructionWithTarget:data:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' type='@' />
    </method>
    <method selector='parser:parseErrorOccurred:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='parser:resolveExternalEntityName:systemID:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='parser:validationErrorOccurred:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='parserDidEndDocument:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='parserDidStartDocument:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='performSelector:'>
      <retval type='@' />
      <arg index='0' type=':' />
    </method>
    <method selector='performSelector:onThread:withObject:waitUntilDone:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='B' />
    </method>
    <method selector='performSelector:onThread:withObject:waitUntilDone:modes:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='B' />
      <arg index='4' type='@' />
    </method>
    <method selector='performSelector:withObject:'>
      <retval type='@' />
      <arg index='0' type=':' />
      <arg index='1' type='@' />
    </method>
    <method selector='performSelector:withObject:afterDelay:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
      <arg index='2' type='d' />
    </method>
    <method selector='performSelector:withObject:afterDelay:inModes:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
      <arg index='2' type='d' />
      <arg index='3' type='@' />
    </method>
    <method selector='performSelector:withObject:withObject:'>
      <retval type='@' />
      <arg index='0' type=':' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='performSelectorInBackground:withObject:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
    </method>
    <method selector='performSelectorOnMainThread:withObject:waitUntilDone:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method selector='performSelectorOnMainThread:withObject:waitUntilDone:modes:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
      <arg index='3' type='@' />
    </method>
    <method class_method='true' selector='poseAsClass:'>
      <retval type='v' />
      <arg index='0' type='#' />
    </method>
    <method selector='release'>
      <retval type='Vv' />
    </method>
    <method selector='removeObserver:forKeyPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='removeValueAtIndex:fromPropertyWithKey:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
    </method>
    <method selector='replaceValueAtIndex:inPropertyWithKey:withValue:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='replacementObjectForArchiver:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='replacementObjectForCoder:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='replacementObjectForKeyedArchiver:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='replacementObjectForPortCoder:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='resolveClassMethod:'>
      <retval type='B' />
      <arg index='0' type=':' />
    </method>
    <method class_method='true' selector='resolveInstanceMethod:'>
      <retval type='B' />
      <arg index='0' type=':' />
    </method>
    <method selector='respondsToSelector:'>
      <retval type='B' />
      <arg index='0' type=':' />
    </method>
    <method selector='retain'>
      <retval type='@' />
    </method>
    <method selector='retainCount'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='roundingMode'>
      <retval type='I' />
    </method>
    <method selector='scale'>
      <retval type='s' />
    </method>
    <method selector='scriptingBeginsWith:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='scriptingContains:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='scriptingEndsWith:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='scriptingIsEqualTo:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='scriptingIsGreaterThan:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='scriptingIsGreaterThanOrEqualTo:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='scriptingIsLessThan:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='scriptingIsLessThanOrEqualTo:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='scriptingProperties'>
      <retval type='@' />
    </method>
    <method selector='scriptingValueForSpecifier:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='self'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='setKeys:triggerChangeNotificationsForDependentKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setNilValueForKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setObservationInfo:'>
      <retval type='v' />
      <arg index='0' type='^v' />
    </method>
    <method selector='setScriptingProperties:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setValue:forKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setValue:forKeyPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setValue:forUndefinedKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setValuesForKeysWithDictionary:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setVersion:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='spellServer:checkGrammarInString:language:details:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='spellServer:didForgetWord:inLanguage:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='spellServer:didLearnWord:inLanguage:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='spellServer:findMisspelledWordInString:language:wordCount:countOnly:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type_modifier='o' />
      <arg index='4' type='B' />
    </method>
    <method selector='spellServer:suggestCompletionsForPartialWordRange:inString:language:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='spellServer:suggestGuessesForWord:inLanguage:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='storedValueForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='stream:handleEvent:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
    </method>
    <method selector='superclass'>
      <retval type='#' />
    </method>
    <method class_method='true' selector='superclass'>
      <retval type='#' />
    </method>
    <method selector='takeStoredValue:forKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='takeValue:forKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='takeValue:forKeyPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='takeValuesFromDictionary:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='toManyRelationshipKeys'>
      <retval type='@' />
    </method>
    <method selector='toOneRelationshipKeys'>
      <retval type='@' />
    </method>
    <method selector='unableToSetNilForKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='unarchiver:cannotDecodeObjectOfClassName:originalClasses:'>
      <retval type='#' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='unarchiver:didDecodeObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='unarchiver:willReplaceObject:withObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='unarchiverDidFinish:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='unarchiverWillFinish:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='unlock'>
      <retval type='v' />
    </method>
    <method selector='useCredential:forAuthenticationChallenge:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='useStoredAccessor'>
      <retval type='B' />
    </method>
    <method selector='validateValue:forKey:error:'>
      <retval type='B' />
      <arg index='0' type_modifier='N' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='validateValue:forKeyPath:error:'>
      <retval type='B' />
      <arg index='0' type_modifier='N' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='valueAtIndex:inPropertyWithKey:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
    </method>
    <method selector='valueForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='valueForKeyPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='valueForUndefinedKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='valueWithName:inPropertyWithKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='valueWithUniqueID:inPropertyWithKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='valuesForKeys:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='version'>
      <retval type='i' type64='q' />
    </method>
    <method selector='willChange:valuesAtIndexes:forKey:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='willChangeValueForKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='willChangeValueForKey:withSetMutation:usingObjects:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='@' />
    </method>
  </class>
  <class name='NSOperation'>
    <method selector='addDependency:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='cancel'>
      <retval type='v' />
    </method>
    <method selector='dependencies'>
      <retval type='@' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='isCancelled'>
      <retval type='B' />
    </method>
    <method selector='isConcurrent'>
      <retval type='B' />
    </method>
    <method selector='isExecuting'>
      <retval type='B' />
    </method>
    <method selector='isFinished'>
      <retval type='B' />
    </method>
    <method selector='isReady'>
      <retval type='B' />
    </method>
    <method selector='main'>
      <retval type='v' />
    </method>
    <method selector='queuePriority'>
      <retval type='i' type64='q' />
    </method>
    <method selector='removeDependency:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setQueuePriority:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='start'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSOperationQueue'>
    <method selector='addOperation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='cancelAllOperations'>
      <retval type='v' />
    </method>
    <method selector='isSuspended'>
      <retval type='B' />
    </method>
    <method selector='maxConcurrentOperationCount'>
      <retval type='i' type64='q' />
    </method>
    <method selector='operations'>
      <retval type='@' />
    </method>
    <method selector='setMaxConcurrentOperationCount:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setSuspended:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='waitUntilAllOperationsAreFinished'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSOutputStream'>
    <method selector='hasSpaceAvailable'>
      <retval type='B' />
    </method>
    <method selector='initToBuffer:capacity:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type='^v' type_modifier='o' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='initToFileAtPath:append:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='initToMemory'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='outputStreamToBuffer:capacity:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='o' type='^v'/>
      <arg index='1' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='outputStreamToFileAtPath:append:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method class_method='true' selector='outputStreamToMemory'>
      <retval type='@' />
    </method>
    <method selector='write:maxLength:'>
      <retval type='i' type64='q' />
      <arg c_array_length_in_arg='1' index='0' type='^v' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
    </method>
  </class>
  <class name='NSPipe'>
    <method selector='fileHandleForReading'>
      <retval type='@' />
    </method>
    <method selector='fileHandleForWriting'>
      <retval type='@' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='pipe'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSPointerArray'>
	  <method selector='addPointer:'>
		  <arg index='0' type='@' type64='@' />
	  </method>
    <method selector='insertPointer:atIndex:' >
		  <arg index='0' type='@' type64='@' />
	  </method>

    <method selector='pointerAtIndex:' >
	    <retval type='@' type64='@' />
    </method>
    <method selector='replacePointerAtIndex:withPointer:' suggestion='use NSMutableArray' >
		  <arg index='1' type='@' type64='@' />
	  </method>
  </class>
  <class name='NSPointerFunctions'>
    <method selector='BOOL'>
      <retval type='v' />
    </method>
    <method selector='descriptionFunction'>
      <retval type='@' />
    </method>
    <method selector='hashFunction'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='initWithOptions:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method selector='isEqualFunction'>
      <retval type='B' />
    </method>
    <method selector='item'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='item'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='item'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='item'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='item'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='item'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='item, NSUInteger'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='item, NSUInteger'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='item1, const void'>
      <retval type='B' />
    </method>
    <method selector='item2, NSUInteger'>
      <retval type='B' />
    </method>
    <method selector='onst'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='onst'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='onst'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='onst'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='onst'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='onst'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='onst'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='onst'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='onst'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='onst'>
      <retval type='I' type64='Q' />
    </method>
    <method class_method='true' selector='pointerFunctionsWithOptions:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method selector='relinquishFunction'>
      <retval type='v' />
    </method>
    <method selector='setBOOL:'>
      <retval type='v' />
      <arg index='0' type='v' />
    </method>
    <method selector='setDescriptionFunction:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHashFunction:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setIsEqualFunction:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setItem, NSUInteger:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setItem, NSUInteger:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setItem1, const void:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setItem2, NSUInteger:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setItem:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setItem:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setItem:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setItem:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setItem:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setItem:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setOnst:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setOnst:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setOnst:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setOnst:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setOnst:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setOnst:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setOnst:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setOnst:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setOnst:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setOnst:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setRelinquishFunction:'>
      <retval type='v' />
      <arg index='0' type='v' />
    </method>
    <method selector='setShouldCopy:'>
      <retval type='v' />
      <arg index='0' type='v' />
    </method>
    <method selector='setSize:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setSize:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setSize:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setSize:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setSizeFunction:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setSrc, NSUInteger:'>
      <retval type='v' />
      <arg index='0' type='v' />
    </method>
    <method selector='setUsesStrongWriteBarrier:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setUsesWeakReadAndWriteBarriers:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setVoid:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setVoid:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setVoid:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setVoid:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setVoid:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setVoid:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setVoid:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setVoid:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setVoid:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setVoid:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='shouldCopy'>
      <retval type='v' />
    </method>
    <method selector='size'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='size'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='size'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='size'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='sizeFunction'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='src, NSUInteger'>
      <retval type='v' />
    </method>
    <method selector='usesStrongWriteBarrier'>
      <retval type='B' />
    </method>
    <method selector='usesWeakReadAndWriteBarriers'>
      <retval type='B' />
    </method>
    <method selector='void'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='void'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='void'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='void'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='void'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='void'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='void'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='void'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='void'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='void'>
      <retval type='I' type64='Q' />
    </method>
  </class>
  <class name='NSPort'>
    <method selector='addConnection:toRunLoop:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='allocWithZone:'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='invalidate'>
      <retval type='v' />
    </method>
    <method selector='isValid'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='port'>
      <retval type='@' />
    </method>
    <method selector='removeConnection:fromRunLoop:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='removeFromRunLoop:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='reservedSpaceLength'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='scheduleInRunLoop:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='sendBeforeDate:components:from:reserved:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='I' type64='Q' />
    </method>
    <method selector='sendBeforeDate:msgid:components:from:reserved:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' type='I' type64='Q' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSPortCoder'>
    <method selector='connection'>
      <retval type='@' />
    </method>
    <method selector='decodePortObject'>
      <retval type='@' />
    </method>
    <method selector='dispatch'>
      <retval type='v' />
    </method>
    <method selector='encodePortObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithReceivePort:sendPort:components:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='isBycopy'>
      <retval type='B' />
    </method>
    <method selector='isByref'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='portCoderWithReceivePort:sendPort:components:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
  </class>
  <class name='NSPortMessage'>
    <method selector='components'>
      <retval type='@' />
    </method>
    <method selector='initWithSendPort:receivePort:components:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='msgid'>
      <retval type='I' />
    </method>
    <method selector='receivePort'>
      <retval type='@' />
    </method>
    <method selector='sendBeforeDate:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='sendPort'>
      <retval type='@' />
    </method>
    <method selector='setMsgid:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
  </class>
  <class name='NSPortNameServer'>
    <method selector='portForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='portForName:host:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='registerPort:name:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='removePortForName:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='systemDefaultPortNameServer'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSPositionalSpecifier'>
    <method selector='evaluate'>
      <retval type='v' />
    </method>
    <method selector='initWithPosition:objectSpecifier:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='@' />
    </method>
    <method selector='insertionContainer'>
      <retval type='@' />
    </method>
    <method selector='insertionIndex'>
      <retval type='i' type64='q' />
    </method>
    <method selector='insertionKey'>
      <retval type='@' />
    </method>
    <method selector='insertionReplaces'>
      <retval type='B' />
    </method>
    <method selector='objectSpecifier'>
      <retval type='@' />
    </method>
    <method selector='position'>
      <retval type='I' />
    </method>
    <method selector='setInsertionClassDescription:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSPredicate'>
    <method selector='evaluateWithObject:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='evaluateWithObject:substitutionVariables:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='predicateFormat'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='predicateWithFormat:' variadic='true'>
      <retval type='@' />
      <arg index='0' printf_format='true' type='@' />
    </method>
    <method class_method='true' selector='predicateWithFormat:argumentArray:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='predicateWithFormat:arguments:' suggestion='use predicateWithFormat:' />
    <method selector='predicateWithSubstitutionVariables:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='predicateWithValue:'>
      <retval type='@' />
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='NSProcessInfo'>
    <method selector='activeProcessorCount'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='arguments'>
      <retval type='@' />
    </method>
    <method selector='environment'>
      <retval type='@' />
    </method>
    <method selector='globallyUniqueString'>
      <retval type='@' />
    </method>
    <method selector='hostName'>
      <retval type='@' />
    </method>
    <method selector='operatingSystem'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='operatingSystemName'>
      <retval type='@' />
    </method>
    <method selector='operatingSystemVersionString'>
      <retval type='@' />
    </method>
    <method selector='physicalMemory'>
      <retval type='Q' />
    </method>
    <method selector='processIdentifier'>
      <retval type='i' />
    </method>
    <method class_method='true' selector='processInfo'>
      <retval type='@' />
    </method>
    <method selector='processName'>
      <retval type='@' />
    </method>
    <method selector='processorCount'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='setProcessName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSPropertyListSerialization'>
    <method class_method='true' selector='dataFromPropertyList:format:errorDescription:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type_modifier='o' />
    </method>
    <method class_method='true' selector='propertyList:isValidForFormat:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
    </method>
    <method class_method='true' selector='propertyListFromData:mutabilityOption:format:errorDescription:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
  </class>
  <class name='NSProtocolChecker'>
    <method selector='initWithTarget:protocol:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='protocol'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='protocolCheckerWithTarget:protocol:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='target'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSProxy'>
    <method class_method='true' selector='alloc'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='allocWithZone:'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='class'>
      <retval type='#' />
    </method>
    <method selector='dealloc'>
      <retval type='v' />
    </method>
    <method selector='description'>
      <retval type='@' />
    </method>
    <method selector='finalize'>
      <retval type='v' />
    </method>
    <method selector='forwardInvocation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='methodSignatureForSelector:'>
      <retval type='@' />
      <arg index='0' type=':' />
    </method>
    <method class_method='true' selector='respondsToSelector:'>
      <retval type='B' />
      <arg index='0' type=':' />
    </method>
  </class>
  <class name='NSQuitCommand'>
    <method selector='saveOptions'>
      <retval type='I' />
    </method>
  </class>
  <class name='NSRangeSpecifier'>
    <method selector='endSpecifier'>
      <retval type='@' />
    </method>
    <method selector='initWithContainerClassDescription:containerSpecifier:key:startSpecifier:endSpecifier:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' type='@' />
    </method>
    <method selector='setEndSpecifier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setStartSpecifier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='startSpecifier'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSRecursiveLock'>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector='lockBeforeDate:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tryLock'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSRelativeSpecifier'>
    <method selector='baseSpecifier'>
      <retval type='@' />
    </method>
    <method selector='initWithContainerClassDescription:containerSpecifier:key:relativePosition:baseSpecifier:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='I' />
      <arg index='4' type='@' />
    </method>
    <method selector='relativePosition'>
      <retval type='I' />
    </method>
    <method selector='setBaseSpecifier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setRelativePosition:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
  </class>
  <class name='NSRunLoop'>
    <method class_method='true' selector=''>
      <retval type='@' />
    </method>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector='acceptInputForMode:beforeDate:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='addPort:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='addTimer:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='cancelPerformSelector:target:argument:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='cancelPerformSelectorsWithTarget:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='currentMode'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='currentRunLoop'>
      <retval type='@' />
    </method>
    <method selector='limitDateForMode:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='performSelector:target:argument:order:modes:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='I' type64='Q' />
      <arg index='4' type='@' />
    </method>
    <method selector='removePort:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='run'>
      <retval type='v' />
    </method>
    <method selector='runMode:beforeDate:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='runUntilDate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSScanner'>
    <method selector='caseSensitive'>
      <retval type='B' />
    </method>
    <method selector='charactersToBeSkipped'>
      <retval type='@' />
    </method>
    <method selector='initWithString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isAtEnd'>
      <retval type='B' />
    </method>
    <method selector='locale'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='localizedScannerWithString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='scanCharactersFromSet:intoString:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' null_accepted='false' type_modifier='o' />
    </method>
    <method selector='scanDecimal:'>
      <retval type='B' />
      <arg index='0' null_accepted='false' />
    </method>
    <method selector='scanDouble:'>
      <retval type='B' />
      <arg index='0' null_accepted='false' type_modifier='o' />
    </method>
    <method selector='scanFloat:'>
      <retval type='B' />
      <arg index='0' null_accepted='false' type_modifier='o' />
    </method>
    <method selector='scanHexDouble:'>
      <retval type='B' />
      <arg index='0' null_accepted='false' type_modifier='o' />
    </method>
    <method selector='scanHexFloat:'>
      <retval type='B' />
      <arg index='0' null_accepted='false' type_modifier='o' />
    </method>
    <method selector='scanHexInt:'>
      <retval type='B' />
      <arg index='0' null_accepted='false' type_modifier='o' />
    </method>
    <method selector='scanHexLongLong:'>
      <retval type='B' />
      <arg index='0' null_accepted='false' type_modifier='o' />
    </method>
    <method selector='scanInt:'>
      <retval type='B' />
      <arg index='0' null_accepted='false' type_modifier='o' />
    </method>
    <method selector='scanInteger:'>
      <retval type='B' />
      <arg index='0' null_accepted='false' type_modifier='o' />
    </method>
    <method selector='scanLocation'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='scanLongLong:'>
      <retval type='B' />
      <arg index='0' null_accepted='false' type_modifier='o' />
    </method>
    <method selector='scanString:intoString:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' null_accepted='false' type_modifier='o' />
    </method>
    <method selector='scanUpToCharactersFromSet:intoString:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' null_accepted='false' type_modifier='o' />
    </method>
    <method selector='scanUpToString:intoString:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' null_accepted='false' type_modifier='o' />
    </method>
    <method class_method='true' selector='scannerWithString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCaseSensitive:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setCharactersToBeSkipped:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLocale:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setScanLocation:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='string'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSScriptClassDescription'>
    <method selector='appleEventCode'>
      <retval type='L' type64='I' />
    </method>
    <method selector='appleEventCodeForKey:'>
      <retval type='L' type64='I' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='classDescriptionForClass:'>
      <retval type='@' />
      <arg index='0' type='#' />
    </method>
    <method selector='classDescriptionForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='className'>
      <retval type='@' />
    </method>
    <method selector='defaultSubcontainerAttributeKey'>
      <retval type='@' />
    </method>
    <method selector='hasOrderedToManyRelationshipForKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='hasPropertyForKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='hasReadablePropertyForKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='hasWritablePropertyForKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='implementationClassName'>
      <retval type='@' />
    </method>
    <method selector='initWithSuiteName:className:dictionary:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='isLocationRequiredToCreateForKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isReadOnlyKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='keyWithAppleEventCode:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
    </method>
    <method selector='matchesAppleEventCode:'>
      <retval type='B' />
      <arg index='0' type='L' type64='I' />
    </method>
    <method selector='selectorForCommand:'>
      <retval type=':' />
      <arg index='0' type='@' />
    </method>
    <method selector='suiteName'>
      <retval type='@' />
    </method>
    <method selector='superclassDescription'>
      <retval type='@' />
    </method>
    <method selector='supportsCommand:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='typeForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSScriptCoercionHandler'>
    <method selector='coerceValue:toClass:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='#' />
    </method>
    <method selector='registerCoercer:selector:toConvertFromClass:toClass:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='@@:@#' />
      <arg index='2' type='#' />
      <arg index='3' type='#' />
    </method>
    <method class_method='true' selector='sharedCoercionHandler'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSScriptCommand'>
    <method selector='appleEvent'>
      <retval type='@' />
    </method>
    <method selector='arguments'>
      <retval type='@' />
    </method>
    <method selector='commandDescription'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='currentCommand'>
      <retval type='@' />
    </method>
    <method selector='directParameter'>
      <retval type='@' />
    </method>
    <method selector='evaluatedArguments'>
      <retval type='@' />
    </method>
    <method selector='evaluatedReceivers'>
      <retval type='@' />
    </method>
    <method selector='executeCommand'>
      <retval type='@' />
    </method>
    <method selector='initWithCommandDescription:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isWellFormed'>
      <retval type='B' />
    </method>
    <method selector='performDefaultImplementation'>
      <retval type='@' />
    </method>
    <method selector='receiversSpecifier'>
      <retval type='@' />
    </method>
    <method selector='resumeExecutionWithResult:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='scriptErrorExpectedTypeDescriptor'>
      <retval type='@' />
    </method>
    <method selector='scriptErrorNumber'>
      <retval type='i' />
    </method>
    <method selector='scriptErrorOffendingObjectDescriptor'>
      <retval type='@' />
    </method>
    <method selector='scriptErrorString'>
      <retval type='@' />
    </method>
    <method selector='setArguments:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDirectParameter:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setReceiversSpecifier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setScriptErrorExpectedTypeDescriptor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setScriptErrorNumber:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setScriptErrorOffendingObjectDescriptor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setScriptErrorString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='suspendExecution'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSScriptCommandDescription'>
    <method selector='appleEventClassCode'>
      <retval type='L' type64='I' />
    </method>
    <method selector='appleEventCode'>
      <retval type='L' type64='I' />
    </method>
    <method selector='appleEventCodeForArgumentWithName:'>
      <retval type='L' type64='I' />
      <arg index='0' type='@' />
    </method>
    <method selector='appleEventCodeForReturnType'>
      <retval type='L' type64='I' />
    </method>
    <method selector='argumentNames'>
      <retval type='@' />
    </method>
    <method selector='commandClassName'>
      <retval type='@' />
    </method>
    <method selector='commandName'>
      <retval type='@' />
    </method>
    <method selector='createCommandInstance'>
      <retval type='@' />
    </method>
    <method selector='createCommandInstanceWithZone:'>
      <retval type='@' />
    </method>
    <method selector='initWithSuiteName:commandName:dictionary:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='isOptionalArgumentWithName:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='returnType'>
      <retval type='@' />
    </method>
    <method selector='suiteName'>
      <retval type='@' />
    </method>
    <method selector='typeForArgumentWithName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSScriptExecutionContext'>
    <method selector='objectBeingTested'>
      <retval type='@' />
    </method>
    <method selector='rangeContainerObject'>
      <retval type='@' />
    </method>
    <method selector='setObjectBeingTested:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setRangeContainerObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTopLevelObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='sharedScriptExecutionContext'>
      <retval type='@' />
    </method>
    <method selector='topLevelObject'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSScriptObjectSpecifier'>
    <method selector='childSpecifier'>
      <retval type='@' />
    </method>
    <method selector='containerClassDescription'>
      <retval type='@' />
    </method>
    <method selector='containerIsObjectBeingTested'>
      <retval type='B' />
    </method>
    <method selector='containerIsRangeContainerObject'>
      <retval type='B' />
    </method>
    <method selector='containerSpecifier'>
      <retval type='@' />
    </method>
    <method selector='descriptor'>
      <retval type='@' />
    </method>
    <method selector='evaluationErrorNumber'>
      <retval type='i' type64='q' />
    </method>
    <method selector='evaluationErrorSpecifier'>
      <retval type='@' />
    </method>
    <method selector='indicesOfObjectsByEvaluatingWithContainer:count:'>
      <retval c_array_length_in_arg='1' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithContainerClassDescription:containerSpecifier:key:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='initWithContainerSpecifier:key:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='key'>
      <retval type='@' />
    </method>
    <method selector='keyClassDescription'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='objectSpecifierWithDescriptor:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='objectsByEvaluatingSpecifier'>
      <retval type='@' />
    </method>
    <method selector='objectsByEvaluatingWithContainers:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='setChildSpecifier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setContainerClassDescription:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setContainerIsObjectBeingTested:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setContainerIsRangeContainerObject:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setContainerSpecifier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setEvaluationErrorNumber:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSScriptSuiteRegistry'>
    <method selector='aeteResource:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='appleEventCodeForSuite:'>
      <retval type='L' type64='I' />
      <arg index='0' type='@' />
    </method>
    <method selector='bundleForSuite:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='classDescriptionWithAppleEventCode:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
    </method>
    <method selector='classDescriptionsInSuite:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='commandDescriptionWithAppleEventClass:andAppleEventCode:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
      <arg index='1' type='L' type64='I' />
    </method>
    <method selector='commandDescriptionsInSuite:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='loadSuiteWithDictionary:fromBundle:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='loadSuitesFromBundle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='registerClassDescription:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='registerCommandDescription:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setSharedScriptSuiteRegistry:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='sharedScriptSuiteRegistry'>
      <retval type='@' />
    </method>
    <method selector='suiteForAppleEventCode:'>
      <retval type='@' />
      <arg index='0' type='L' type64='I' />
    </method>
    <method selector='suiteNames'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSScriptWhoseTest'>
    <method selector='isTrue'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSSet'>
    <method selector='addObserver:forKeyPath:options:context:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
      <arg index='3' type='^v' />
    </method>
    <method selector='allObjects'>
      <retval type='@' />
    </method>
    <method selector='anyObject'>
      <retval type='@' />
    </method>
    <method selector='containsObject:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='count'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='description'>
      <retval type='@' />
    </method>
    <method selector='descriptionWithLocale:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='filteredSetUsingPredicate:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithArray:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method c_array_delimited_by_null='true' selector='initWithObjects:' variadic='true'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithObjects:count:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='initWithSet:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithSet:copyItems:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='intersectsSet:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isEqualToSet:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isSubsetOfSet:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='makeObjectsPerformSelector:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:' />
    </method>
    <method selector='makeObjectsPerformSelector:withObject:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
    </method>
    <method selector='member:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='objectEnumerator'>
      <retval type='@' />
    </method>
    <method selector='removeObserver:forKeyPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='set'>
      <retval type='@' />
    </method>
    <method selector='setByAddingObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='setByAddingObjectsFromArray:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='setByAddingObjectsFromSet:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='setValue:forKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='setWithArray:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setWithObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method c_array_delimited_by_null='true' class_method='true' selector='setWithObjects:' variadic='true'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setWithObjects:count:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='setWithSet:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='valueForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSSetCommand'>
    <method selector='keySpecifier'>
      <retval type='@' />
    </method>
    <method selector='setReceiversSpecifier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSSocketPort'>
    <method selector='address'>
      <retval type='@' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='initRemoteWithProtocolFamily:socketType:protocol:address:'>
      <retval type='@' />
      <arg index='0' type='i' />
      <arg index='1' type='i' />
      <arg index='2' type='i' />
      <arg index='3' type='@' />
    </method>
    <method selector='initRemoteWithTCPPort:host:'>
      <retval type='@' />
      <arg index='0' type='S' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithProtocolFamily:socketType:protocol:address:'>
      <retval type='@' />
      <arg index='0' type='i' />
      <arg index='1' type='i' />
      <arg index='2' type='i' />
      <arg index='3' type='@' />
    </method>
    <method selector='initWithProtocolFamily:socketType:protocol:socket:'>
      <retval type='@' />
      <arg index='0' type='i' />
      <arg index='1' type='i' />
      <arg index='2' type='i' />
      <arg index='3' type='i' />
    </method>
    <method selector='initWithTCPPort:'>
      <retval type='@' />
      <arg index='0' type='S' />
    </method>
    <method selector='protocol'>
      <retval type='i' />
    </method>
    <method selector='protocolFamily'>
      <retval type='i' />
    </method>
    <method selector='socket'>
      <retval type='i' />
    </method>
    <method selector='socketType'>
      <retval type='i' />
    </method>
  </class>
  <class name='NSSocketPortNameServer'>
    <method selector='defaultNameServerPortNumber'>
      <retval type='S' />
    </method>
    <method selector='portForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='portForName:host:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='portForName:host:nameServerPortNumber:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='S' />
    </method>
    <method selector='registerPort:name:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='registerPort:name:nameServerPortNumber:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='S' />
    </method>
    <method selector='removePortForName:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDefaultNameServerPortNumber:'>
      <retval type='v' />
      <arg index='0' type='S' />
    </method>
    <method class_method='true' selector='sharedInstance'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSSortDescriptor'>
    <method selector='ascending'>
      <retval type='B' />
    </method>
    <method selector='compareObject:toObject:'>
      <retval type='i' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithKey:ascending:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='initWithKey:ascending:selector:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
      <arg index='2' sel_of_type='i@:@' />
    </method>
    <method selector='key'>
      <retval type='@' />
    </method>
    <method selector='reversedSortDescriptor'>
      <retval type='@' />
    </method>
    <method selector='selector'>
      <retval type=':' />
    </method>
  </class>
  <class name='NSSpecifierTest'>
    <method selector='initWithObjectSpecifier:comparisonOperator:testObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='@' />
    </method>
  </class>
  <class name='NSSpellServer'>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='isWordInUserDictionaries:caseSensitive:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='registerLanguage:byVendor:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='run'>
      <retval type='v' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSStream'>
    <method selector='close'>
      <retval type='v' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='getStreamsToHost:port:inputStream:outputStream:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' null_accepted='false' type_modifier='o' />
      <arg index='3' null_accepted='false' type_modifier='o' />
    </method>
    <method selector='open'>
      <retval type='v' />
    </method>
    <method selector='propertyForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeFromRunLoop:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='scheduleInRunLoop:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setProperty:forKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='streamError'>
      <retval type='@' />
    </method>
    <method selector='streamStatus'>
      <retval type='I' />
    </method>
  </class>
  <class name='NSString'>
    <method selector=''>
      <retval type='*' />
    </method>
    <method selector=''>
      <retval type='*' />
    </method>
    <method selector=''>
      <retval type='*' type64='Q' />
    </method>
    <method selector='UTF8String'>
      <retval c_array_delimited_by_null='true' type='^t' type64='^t' />
    </method>
    <method selector='boolValue'>
      <retval type='B' />
    </method>
    <method selector='cStringUsingEncoding:'>
      <retval c_array_delimited_by_null='true' type='^v' />
      <arg index='0' type='I' />
    </method>
    <method selector='canBeConvertedToEncoding:'>
      <retval type='B' />
      <arg index='0' type='I' />
    </method>
    <method selector='capitalizedString'>
      <retval type='@' />
    </method>
    <method selector='caseInsensitiveCompare:'>
      <retval type='i' />
      <arg index='0' type='@' />
    </method>
    <method selector='characterAtIndex:'>
      <retval type='rT' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='commonPrefixWithString:options:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
    </method>
    <method selector='compare:'>
      <retval type='i' />
      <arg index='0' type='@' />
    </method>
    <method selector='compare:options:'>
      <retval type='i' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
    </method>
    <method selector='compare:options:range:'>
      <retval type='i' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='compare:options:range:locale:'>
      <retval type='i' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='3' type='@' />
    </method>
    <method selector='completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:'>
      <retval type='I' type64='Q' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type='B' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type='@' />
    </method>
    <method selector='componentsSeparatedByCharactersInSet:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='componentsSeparatedByString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='dataUsingEncoding:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method selector='dataUsingEncoding:allowLossyConversion:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='B' />
    </method>
    <method selector='decomposedStringWithCanonicalMapping'>
      <retval type='@' />
    </method>
    <method selector='decomposedStringWithCompatibilityMapping'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='defaultCStringEncoding'>
      <retval type='I' />
    </method>
    <method selector='description'>
      <retval type='@' />
    </method>
    <method selector='doubleValue'>
      <retval type='d' />
    </method>
    <method selector='fastestEncoding'>
      <retval type='I' />
    </method>
    <method selector='fileSystemRepresentation'>
      <retval c_array_delimited_by_null='true' type='^t' type64='^t' />
    </method>
    <method selector='floatValue'>
      <retval type='f' />
    </method>
    <method selector='availableStringEncodings'>
	    <retval c_array_delimited_by_null='true' />
    </method>
    <method selector='getBytes:maxLength:usedLength:encoding:options:range:remainingRange:'>
      <retval type='B' />
      <arg c_array_length_in_arg='1,2' index='0' type_modifier='o' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type='I' />
      <arg index='4' type='I' />
      <arg index='5' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='6' type_modifier='o' />
    </method>
    <method selector='cString'>
	    <retval type='^t' c_array_delimited_by_null='true' />
    </method>
    <method selector='lossyCString'>
	    <retval type='^t' c_array_delimited_by_null='true' />
    </method>
    <method selector='getCString:' suggestion='use -cString' />
    <method selector='getCString:maxLength:' >
	    <retval type='B' />
	    <arg index='0' type='^v' type_modifier='o' c_array_length_in_arg='1' />
    </method>
    <method selector='getCString:maxLength:encoding:' >
	    <retval type='B' />
	    <arg index='0' type='^v' type_modifier='o' c_array_length_in_arg='1' />
    </method>
    <method selector='getCString:maxLength:range:remainingRange:' >
	    <retval type='B' />
	    <arg index='0' type='^v' type_modifier='o' c_array_length_in_arg='1' />
	    <arg index='3' type_modifier='o' />
    </method>
    <method selector='getCharacters:'>
      <retval type='v' />
      <arg c_array_of_variable_length='true' index='0' type='^T' type_modifier='o' />
    </method>
    <method selector='getCharacters:range:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type='^T' type_modifier='o' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='getFileSystemRepresentation:maxLength:' >
	    <retval type='B' />
	    <arg index='0' c_array_length_in_arg='1' type_modifier='o' type='^t' />
    </method>
    <method selector='getLineStart:end:contentsEnd:forRange:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='getParagraphStart:end:contentsEnd:forRange:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='hasPrefix:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='hasSuffix:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='hash'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='initWithBytes:length:encoding:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' />
    </method>
    <method selector='initWithBytesNoCopy:length:encoding:freeWhenDone:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' />
      <arg index='3' type='B' />
    </method>
    <method selector='initWithCString:'>
      <retval type='@' />
      <arg c_array_delimited_by_null='true' index='0' type='^v' type_modifier='n' />
    </method>
    <method selector='initWithCString:encoding:'>
      <retval type='@' />
      <arg c_array_delimited_by_null='true' index='0' type='^t' type_modifier='n' />
      <arg index='1' type='I' />
    </method>
    <method selector='initWithCString:length:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type='^v' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='initWithCStringNoCopy:length:freeWhenDone:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type='^v' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='B' />
    </method>
    <method selector='initWithCharacters:length:'>
      <retval type='@' />
      <arg index='0' type='^T' type_modifier='n' c_array_length_in_arg='1'  />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='initWithCharactersNoCopy:length:freeWhenDone:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type='^T' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='B' />
    </method>
    <method selector='initWithContentsOfFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithContentsOfFile:encoding:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithContentsOfFile:usedEncoding:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithContentsOfURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithContentsOfURL:encoding:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithContentsOfURL:usedEncoding:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithData:encoding:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
    </method>
    <method selector='initWithFormat:' variadic='true'>
      <retval type='@' />
      <arg index='0' printf_format='true' type='@' />
    </method>
    <method selector='initWithFormat:arguments:' suggestion='use -initWithFormat:' />
    <method selector='initWithFormat:locale:' variadic='true'>
      <retval type='@' />
      <arg index='0' printf_format='true' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithFormat:locale:arguments:' suggestion='use -initWithFormat:locale:' />
    <method selector='initWithString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithUTF8String:'>
      <retval type='@' />
      <arg c_array_delimited_by_null='true' index='0' type='^t' type_modifier='n' />
    </method>
    <method selector='intValue'>
      <retval type='i' />
    </method>
    <method selector='integerValue'>
      <retval type='i' type64='q' />
    </method>
    <method selector='isAbsolutePath'>
      <retval type='B' />
    </method>
    <method selector='isEqualToString:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='lastPathComponent'>
      <retval type='@' />
    </method>
    <method selector='length'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='lengthOfBytesUsingEncoding:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' />
    </method>
    <method selector='lineRangeForRange:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='localizedCaseInsensitiveCompare:'>
      <retval type='i' />
      <arg index='0' type='@' />
    </method>
    <method selector='localizedCompare:'>
      <retval type='i' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='localizedNameOfStringEncoding:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method class_method='true' selector='localizedStringWithFormat:' variadic='true'>
      <retval type='@' />
      <arg index='0' printf_format='true' type='@' />
    </method>
    <method selector='longLongValue'>
      <retval type='q' />
    </method>
    <method selector='lowercaseString'>
      <retval type='@' />
    </method>
    <method selector='maximumLengthOfBytesUsingEncoding:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' />
    </method>
    <method selector='paragraphRangeForRange:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='pathComponents'>
      <retval type='@' />
    </method>
    <method selector='pathExtension'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='pathWithComponents:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='precomposedStringWithCanonicalMapping'>
      <retval type='@' />
    </method>
    <method selector='precomposedStringWithCompatibilityMapping'>
      <retval type='@' />
    </method>
    <method selector='propertyList'>
      <retval type='@' />
    </method>
    <method selector='propertyListFromStringsFileFormat'>
      <retval type='@' />
    </method>
    <method selector='rangeOfCharacterFromSet:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
    </method>
    <method selector='rangeOfCharacterFromSet:options:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
    </method>
    <method selector='rangeOfCharacterFromSet:options:range:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='rangeOfComposedCharacterSequenceAtIndex:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='rangeOfComposedCharacterSequencesForRange:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='rangeOfString:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
    </method>
    <method selector='rangeOfString:options:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
    </method>
    <method selector='rangeOfString:options:range:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='rangeOfString:options:range:locale:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='3' type='@' />
    </method>
    <method selector='smallestEncoding'>
      <retval type='I' />
    </method>
    <method class_method='true' selector='string'>
      <retval type='@' />
    </method>
    <method selector='stringByAbbreviatingWithTildeInPath'>
      <retval type='@' />
    </method>
    <method selector='stringByAddingPercentEscapesUsingEncoding:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method selector='stringByAppendingFormat:' variadic='true'>
      <retval type='@' />
      <arg index='0' printf_format='true' type='@' />
    </method>
    <method selector='stringByAppendingPathComponent:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='stringByAppendingPathExtension:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='stringByAppendingString:'>
      <retval type='@' />
      <arg index='0' printf_format='true' />
    </method>
    <method selector='stringByDeletingLastPathComponent'>
      <retval type='@' />
    </method>
    <method selector='stringByDeletingPathExtension'>
      <retval type='@' />
    </method>
    <method selector='stringByExpandingTildeInPath'>
      <retval type='@' />
    </method>
    <method selector='stringByFoldingWithOptions:locale:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='@' />
    </method>
    <method selector='stringByPaddingToLength:withString:startingAtIndex:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='stringByReplacingCharactersInRange:withString:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='stringByReplacingOccurrencesOfString:withString:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='stringByReplacingOccurrencesOfString:withString:options:range:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
      <arg index='3' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='stringByReplacingPercentEscapesUsingEncoding:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method selector='stringByResolvingSymlinksInPath'>
      <retval type='@' />
    </method>
    <method selector='stringByStandardizingPath'>
      <retval type='@' />
    </method>
    <method selector='stringByTrimmingCharactersInSet:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='stringWithCString:'>
      <retval type='@' />
      <arg c_array_delimited_by_null='true' index='0' type='^v' type_modifier='n' />
    </method>
    <method class_method='true' selector='stringWithCString:encoding:'>
      <retval type='@' />
      <arg c_array_delimited_by_null='true' index='0' type='^t' type_modifier='n' />
      <arg index='1' type='I' />
    </method>
    <method class_method='true' selector='stringWithCString:length:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type='^v' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='stringWithCharacters:length:'>
      <retval type='@' />
      <arg c_array_length_in_arg='1' index='0' type='r^T' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='stringWithContentsOfFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='stringWithContentsOfFile:encoding:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type_modifier='o' />
    </method>
    <method class_method='true' selector='stringWithContentsOfFile:usedEncoding:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type_modifier='o' />
    </method>
    <method class_method='true' selector='stringWithContentsOfURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='stringWithContentsOfURL:encoding:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type_modifier='o' />
    </method>
    <method class_method='true' selector='stringWithContentsOfURL:usedEncoding:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type_modifier='o' />
    </method>
    <method class_method='true' selector='stringWithFormat:' variadic='true'>
      <retval type='@' />
      <arg index='0' type='@' printf_format='true' />
    </method>
    <method class_method='true' selector='stringWithString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='stringWithUTF8String:'>
      <retval type='@' />
      <arg c_array_delimited_by_null='true' index='0' type='^t' type_modifier='n' />
    </method>
    <method selector='stringsByAppendingPaths:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='substringFromIndex:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='substringToIndex:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='substringWithRange:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='uppercaseString'>
      <retval type='@' />
    </method>
    <method selector='writeToFile:atomically:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='writeToFile:atomically:encoding:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
      <arg index='2' type='I' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='writeToURL:atomically:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='writeToURL:atomically:encoding:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
      <arg index='2' type='I' />
      <arg index='3' type_modifier='o' />
    </method>
  </class>
  <class name='NSTask'>
    <method selector='arguments'>
      <retval type='@' />
    </method>
    <method selector='currentDirectoryPath'>
      <retval type='@' />
    </method>
    <method selector='environment'>
      <retval type='@' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='interrupt'>
      <retval type='v' />
    </method>
    <method selector='isRunning'>
      <retval type='B' />
    </method>
    <method selector='launch'>
      <retval type='v' />
    </method>
    <method selector='launchPath'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='launchedTaskWithLaunchPath:arguments:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='processIdentifier'>
      <retval type='i' />
    </method>
    <method selector='resume'>
      <retval type='B' />
    </method>
    <method selector='setArguments:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCurrentDirectoryPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setEnvironment:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLaunchPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setStandardError:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setStandardInput:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setStandardOutput:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='standardError'>
      <retval type='@' />
    </method>
    <method selector='standardInput'>
      <retval type='@' />
    </method>
    <method selector='standardOutput'>
      <retval type='@' />
    </method>
    <method selector='suspend'>
      <retval type='B' />
    </method>
    <method selector='terminate'>
      <retval type='v' />
    </method>
    <method selector='terminationStatus'>
      <retval type='i' />
    </method>
    <method selector='waitUntilExit'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSThread'>
    <method class_method='true' selector='callStackReturnAddresses'>
      <retval type='@' />
    </method>
    <method selector='cancel'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='currentThread'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='detachNewThreadSelector:toTarget:withObject:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='exit'>
      <retval type='v' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='initWithTarget:selector:object:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@' />
      <arg index='2' type='@' />
    </method>
    <method selector='isCancelled'>
      <retval type='B' />
    </method>
    <method selector='isExecuting'>
      <retval type='B' />
    </method>
    <method selector='isFinished'>
      <retval type='B' />
    </method>
    <method selector='isMainThread'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='isMainThread'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='isMultiThreaded'>
      <retval type='B' />
    </method>
    <method selector='main'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='mainThread'>
      <retval type='@' />
    </method>
    <method selector='name'>
      <retval type='@' />
    </method>
    <method selector='setName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setStackSize:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='setThreadPriority:'>
      <retval type='B' />
      <arg index='0' type='d' />
    </method>
    <method class_method='true' selector='sleepForTimeInterval:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method class_method='true' selector='sleepUntilDate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='stackSize'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='start'>
      <retval type='v' />
    </method>
    <method selector='threadDictionary'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='threadPriority'>
      <retval type='d' />
    </method>
  </class>
  <class name='NSTimeZone'>
    <method selector=''>
      <retval type='d' />
    </method>
    <method selector=''>
      <retval type='d' />
    </method>
    <method selector='abbreviation'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='abbreviationDictionary'>
      <retval type='@' />
    </method>
    <method selector='abbreviationForDate:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='data'>
      <retval type='@' />
    </method>
    <method selector='daylightSavingTimeOffsetForDate:'>
      <retval type='d' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='defaultTimeZone'>
      <retval type='@' />
    </method>
    <method selector='description'>
      <retval type='@' />
    </method>
    <method selector='initWithName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithName:data:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='isDaylightSavingTime'>
      <retval type='B' />
    </method>
    <method selector='isDaylightSavingTimeForDate:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isEqualToTimeZone:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='knownTimeZoneNames'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='localTimeZone'>
      <retval type='@' />
    </method>
    <method selector='localizedName:locale:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='@' />
    </method>
    <method selector='name'>
      <retval type='@' />
    </method>
    <method selector='nextDaylightSavingTimeTransitionAfterDate:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='resetSystemTimeZone'>
      <retval type='v' />
    </method>
    <method selector='secondsFromGMT'>
      <retval type='i' type64='q' />
    </method>
    <method selector='secondsFromGMTForDate:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setDefaultTimeZone:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='systemTimeZone'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='timeZoneForSecondsFromGMT:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method class_method='true' selector='timeZoneWithAbbreviation:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='timeZoneWithName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='timeZoneWithName:data:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
  </class>
  <class name='NSTimer'>
    <method selector='fire'>
      <retval type='v' />
    </method>
    <method selector='fireDate'>
      <retval type='@' />
    </method>
    <method selector='initWithFireDate:interval:target:selector:userInfo:repeats:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='d' />
      <arg index='2' type='@' />
      <arg index='3' sel_of_type='v@:@' />
      <arg index='4' type='@' />
      <arg index='5' type='B' />
    </method>
    <method selector='invalidate'>
      <retval type='v' />
    </method>
    <method selector='isValid'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='scheduledTimerWithTimeInterval:invocation:repeats:'>
      <retval type='@' />
      <arg index='0' type='d' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method class_method='true' selector='scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:'>
      <retval type='@' />
      <arg index='0' type='d' />
      <arg index='1' type='@' />
      <arg index='2' sel_of_type='v@:@' />
      <arg index='3' type='@' />
      <arg index='4' type='B' />
    </method>
    <method selector='setFireDate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='timeInterval'>
      <retval type='d' />
    </method>
    <method class_method='true' selector='timerWithTimeInterval:invocation:repeats:'>
      <retval type='@' />
      <arg index='0' type='d' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method class_method='true' selector='timerWithTimeInterval:target:selector:userInfo:repeats:'>
      <retval type='@' />
      <arg index='0' type='d' />
      <arg index='1' type='@' />
      <arg index='2' sel_of_type='v@:@' />
      <arg index='3' type='@' />
      <arg index='4' type='B' />
    </method>
    <method selector='userInfo'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSURL'>
    <method selector='URLHandleUsingCache:'>
      <retval type='@' />
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='URLWithString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='URLWithString:relativeToURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='absoluteString'>
      <retval type='@' />
    </method>
    <method selector='absoluteURL'>
      <retval type='@' />
    </method>
    <method selector='baseURL'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='fileURLWithPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='fileURLWithPath:isDirectory:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='fragment'>
      <retval type='@' />
    </method>
    <method selector='host'>
      <retval type='@' />
    </method>
    <method selector='initFileURLWithPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initFileURLWithPath:isDirectory:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='initWithScheme:host:path:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='initWithString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithString:relativeToURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='isFileURL'>
      <retval type='B' />
    </method>
    <method selector='loadResourceDataNotifyingClient:usingCache:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='parameterString'>
      <retval type='@' />
    </method>
    <method selector='password'>
      <retval type='@' />
    </method>
    <method selector='path'>
      <retval type='@' />
    </method>
    <method selector='port'>
      <retval type='@' />
    </method>
    <method selector='propertyForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='query'>
      <retval type='@' />
    </method>
    <method selector='relativePath'>
      <retval type='@' />
    </method>
    <method selector='relativeString'>
      <retval type='@' />
    </method>
    <method selector='resourceDataUsingCache:'>
      <retval type='@' />
      <arg index='0' type='B' />
    </method>
    <method selector='resourceSpecifier'>
      <retval type='@' />
    </method>
    <method selector='scheme'>
      <retval type='@' />
    </method>
    <method selector='setProperty:forKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setResourceData:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='standardizedURL'>
      <retval type='@' />
    </method>
    <method selector='user'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSURLAuthenticationChallenge'>
    <method selector='error'>
      <retval type='@' />
    </method>
    <method selector='failureResponse'>
      <retval type='@' />
    </method>
    <method selector='initWithAuthenticationChallenge:sender:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='@' />
      <arg index='4' type='@' />
      <arg index='5' type='@' />
    </method>
    <method selector='previousFailureCount'>
      <retval type='i' type64='q' />
    </method>
    <method selector='proposedCredential'>
      <retval type='@' />
    </method>
    <method selector='protectionSpace'>
      <retval type='@' />
    </method>
    <method selector='sender'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSURLCache'>
    <method selector='cachedResponseForRequest:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='currentDiskUsage'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='currentMemoryUsage'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='diskCapacity'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='initWithMemoryCapacity:diskCapacity:diskPath:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='@' />
    </method>
    <method selector='memoryCapacity'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='removeAllCachedResponses'>
      <retval type='v' />
    </method>
    <method selector='removeCachedResponseForRequest:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDiskCapacity:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setMemoryCapacity:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='setSharedURLCache:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='sharedURLCache'>
      <retval type='@' />
    </method>
    <method selector='storeCachedResponse:forRequest:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
  </class>
  <class name='NSURLConnection'>
    <method selector=''>
      <retval type='v' />
    </method>
    <method class_method='true' selector='canHandleRequest:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='cancel'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='connectionWithRequest:delegate:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithRequest:delegate:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithRequest:delegate:startImmediately:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method selector='scheduleInRunLoop:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='sendSynchronousRequest:returningResponse:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='unscheduleFromRunLoop:forMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
  </class>
  <class name='NSURLCredential'>
    <method class_method='true' selector='credentialWithUser:password:persistence:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
    </method>
    <method selector='hasPassword'>
      <retval type='B' />
    </method>
    <method selector='initWithUser:password:persistence:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
    </method>
    <method selector='password'>
      <retval type='@' />
    </method>
    <method selector='persistence'>
      <retval type='I' />
    </method>
    <method selector='user'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSURLCredentialStorage'>
    <method selector='allCredentials'>
      <retval type='@' />
    </method>
    <method selector='credentialsForProtectionSpace:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='defaultCredentialForProtectionSpace:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeCredential:forProtectionSpace:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setCredential:forProtectionSpace:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setDefaultCredential:forProtectionSpace:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='sharedCredentialStorage'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSURLDownload'>
    <method class_method='true' selector='canResumeDownloadDecodedWithEncodingMIMEType:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='cancel'>
      <retval type='v' />
    </method>
    <method selector='deletesFileUponFailure'>
      <retval type='B' />
    </method>
    <method selector='initWithRequest:delegate:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithResumeData:delegate:path:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='request'>
      <retval type='@' />
    </method>
    <method selector='resumeData'>
      <retval type='@' />
    </method>
    <method selector='setDeletesFileUponFailure:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDestination:allowOverwrite:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
  </class>
  <class name='NSURLHandle'>
    <method selector=''>
      <retval type='I' />
    </method>
    <method selector=''>
      <retval type='I' />
    </method>
    <method selector=''>
      <retval type='I' />
    </method>
    <method selector=''>
      <retval type='I' />
    </method>
    <method selector=''>
      <retval type='I' />
    </method>
    <method selector=''>
      <retval type='I' />
    </method>
    <method selector=''>
      <retval type='I' />
    </method>
    <method selector=''>
      <retval type='I' />
    </method>
    <method selector=''>
      <retval type='I' />
    </method>
    <method selector=''>
      <retval type='I' />
    </method>
    <method selector=''>
      <retval type='I' />
    </method>
    <method class_method='true' selector='URLHandleClassForURL:'>
      <retval type='#' />
      <arg index='0' type='@' />
    </method>
    <method selector='addClient:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='backgroundLoadDidFailWithReason:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='cachedHandleForURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='canInitWithURL:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='didLoadBytes:loadComplete:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='initWithURL:cached:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='propertyForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='propertyForKeyIfAvailable:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='registerURLHandleClass:'>
      <retval type='v' />
      <arg index='0' type='#' />
    </method>
    <method selector='removeClient:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='writeData:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='writeProperty:forKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
  </class>
  <class name='NSURLProtectionSpace'>
    <method selector='authenticationMethod'>
      <retval type='@' />
    </method>
    <method selector='host'>
      <retval type='@' />
    </method>
    <method selector='initWithHost:port:protocol:realm:authenticationMethod:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' type='@' />
    </method>
    <method selector='initWithProxyHost:port:type:realm:authenticationMethod:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' type='@' />
    </method>
    <method selector='isProxy'>
      <retval type='B' />
    </method>
    <method selector='port'>
      <retval type='i' type64='q' />
    </method>
    <method selector='protocol'>
      <retval type='@' />
    </method>
    <method selector='proxyType'>
      <retval type='@' />
    </method>
    <method selector='realm'>
      <retval type='@' />
    </method>
    <method selector='receivesCredentialSecurely'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSURLProtocol'>
    <method selector='cachedResponse'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='canInitWithRequest:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='canonicalRequestForRequest:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='client'>
      <retval type='@' />
    </method>
    <method selector='initWithRequest:cachedResponse:client:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='propertyForKey:inRequest:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='registerClass:'>
      <retval type='B' />
      <arg index='0' type='#' />
    </method>
    <method class_method='true' selector='removePropertyForKey:inRequest:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='request'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='requestIsCacheEquivalent:toRequest:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='setProperty:forKey:inRequest:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='startLoading'>
      <retval type='v' />
    </method>
    <method selector='stopLoading'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='unregisterClass:'>
      <retval type='v' />
      <arg index='0' type='#' />
    </method>
  </class>
  <class name='NSURLRequest'>
    <method selector='HTTPBody'>
      <retval type='@' />
    </method>
    <method selector='HTTPBodyStream'>
      <retval type='@' />
    </method>
    <method selector='HTTPMethod'>
      <retval type='@' />
    </method>
    <method selector='HTTPShouldHandleCookies'>
      <retval type='B' />
    </method>
    <method selector='URL'>
      <retval type='@' />
    </method>
    <method selector='allHTTPHeaderFields'>
      <retval type='@' />
    </method>
    <method selector='cachePolicy'>
      <retval type='I' />
    </method>
    <method selector='initWithURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithURL:cachePolicy:timeoutInterval:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='d' />
    </method>
    <method selector='mainDocumentURL'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='requestWithURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='requestWithURL:cachePolicy:timeoutInterval:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='d' />
    </method>
    <method selector='timeoutInterval'>
      <retval type='d' />
    </method>
    <method selector='valueForHTTPHeaderField:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSURLResponse'>
    <method selector='MIMEType'>
      <retval type='@' />
    </method>
    <method selector='URL'>
      <retval type='@' />
    </method>
    <method selector='expectedContentLength'>
      <retval type='q' />
    </method>
    <method selector='initWithURL:MIMEType:expectedContentLength:textEncodingName:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='@' />
    </method>
    <method selector='suggestedFilename'>
      <retval type='@' />
    </method>
    <method selector='textEncodingName'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSUnarchiver'>
    <method class_method='true' selector='classNameDecodedForArchiveClassName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='classNameDecodedForArchiveClassName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='decodeClassName:asClassName:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='decodeClassName:asClassName:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initForReadingWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isAtEnd'>
      <retval type='B' />
    </method>
    <method selector='replaceObject:withObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setObjectZone:'>
      <retval type='v' />
    </method>
    <method selector='systemVersion'>
      <retval type='I' />
    </method>
    <method class_method='true' selector='unarchiveObjectWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='unarchiveObjectWithFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSUndoManager'>
    <method selector='beginUndoGrouping'>
      <retval type='v' />
    </method>
    <method selector='canRedo'>
      <retval type='B' />
    </method>
    <method selector='canUndo'>
      <retval type='B' />
    </method>
    <method selector='disableUndoRegistration'>
      <retval type='v' />
    </method>
    <method selector='enableUndoRegistration'>
      <retval type='v' />
    </method>
    <method selector='endUndoGrouping'>
      <retval type='v' />
    </method>
    <method selector='groupingLevel'>
      <retval type='i' type64='q' />
    </method>
    <method selector='groupsByEvent'>
      <retval type='B' />
    </method>
    <method selector='isRedoing'>
      <retval type='B' />
    </method>
    <method selector='isUndoRegistrationEnabled'>
      <retval type='B' />
    </method>
    <method selector='isUndoing'>
      <retval type='B' />
    </method>
    <method selector='levelsOfUndo'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='prepareWithInvocationTarget:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='redo'>
      <retval type='v' />
    </method>
    <method selector='redoActionName'>
      <retval type='@' />
    </method>
    <method selector='redoMenuItemTitle'>
      <retval type='@' />
    </method>
    <method selector='redoMenuTitleForUndoActionName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='registerUndoWithTarget:selector:object:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@' />
      <arg index='2' type='@' />
    </method>
    <method selector='removeAllActions'>
      <retval type='v' />
    </method>
    <method selector='removeAllActionsWithTarget:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='runLoopModes'>
      <retval type='@' />
    </method>
    <method selector='setActionName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setGroupsByEvent:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setLevelsOfUndo:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setRunLoopModes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='undo'>
      <retval type='v' />
    </method>
    <method selector='undoActionName'>
      <retval type='@' />
    </method>
    <method selector='undoMenuItemTitle'>
      <retval type='@' />
    </method>
    <method selector='undoMenuTitleForUndoActionName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='undoNestedGroup'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSUniqueIDSpecifier'>
    <method selector='initWithContainerClassDescription:containerSpecifier:key:uniqueID:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='setUniqueID:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='uniqueID'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSUserDefaults'>
    <method selector=''>
      <retval type='@' />
    </method>
    <method selector='addSuiteNamed:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='arrayForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='boolForKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='dataForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='dictionaryForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='dictionaryRepresentation'>
      <retval type='@' />
    </method>
    <method selector='doubleForKey:'>
      <retval type='d' />
      <arg index='0' type='@' />
    </method>
    <method selector='floatForKey:'>
      <retval type='f' />
      <arg index='0' type='@' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='initWithUser:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='integerForKey:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='objectForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='objectIsForcedForKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='objectIsForcedForKey:inDomain:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='olatileDomainForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='persistentDomainForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='persistentDomainNames'>
      <retval type='@' />
    </method>
    <method selector='registerDefaults:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeObjectForKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removePersistentDomainForName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeSuiteNamed:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeVolatileDomainForName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='resetStandardUserDefaults'>
      <retval type='v' />
    </method>
    <method selector='setBool:forKey:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='@' />
    </method>
    <method selector='setDouble:forKey:'>
      <retval type='v' />
      <arg index='0' type='d' />
      <arg index='1' type='@' />
    </method>
    <method selector='setFloat:forKey:'>
      <retval type='v' />
      <arg index='0' type='f' />
      <arg index='1' type='@' />
    </method>
    <method selector='setInteger:forKey:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='@' />
    </method>
    <method selector='setObject:forKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setPersistentDomain:forName:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setVolatileDomain:forName:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='standardUserDefaults'>
      <retval type='@' />
    </method>
    <method selector='stringArrayForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='stringForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='synchronize'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSValue'>
    <method selector='getValue:' suggestion='use another method' />
    <method selector='initWithBytes:objCType:'>
      <retval type='@' />
      <arg c_array_of_variable_length='true' index='0' type_modifier='n' />
      <arg c_array_delimited_by_null='true' index='1' type='^t' type_modifier='n' />
    </method>
    <method selector='isEqualToValue:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='nonretainedObjectValue'>
      <retval type='@' />
    </method>
    <method selector='objCType'>
      <retval c_array_delimited_by_null='true' type='^t' />
    </method>
    <method selector='pointValue'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='rangeValue'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='rectValue'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='sizeValue'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method class_method='true' selector='value:withObjCType:'>
      <retval type='@' />
      <arg index='0' type='^v' type_modifier='n' c_array_of_variable_length='true' />
      <arg c_array_delimited_by_null='true' index='1' type='^t' type_modifier='n' />
    </method>
    <method class_method='true' selector='valueWithBytes:objCType:'>
      <retval type='@' />
      <arg index='0' type='^v' type_modifier='n' c_array_of_variable_length='true' />
      <arg c_array_delimited_by_null='true' index='1' type='^t' type_modifier='n' />
    </method>
    <method class_method='true' selector='valueWithNonretainedObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='valueWithPoint:'>
      <retval type='@' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method class_method='true' selector='valueWithPointer:' suggestion='use some other method' />
    <method class_method='true' selector='valueWithRange:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method class_method='true' selector='valueWithRect:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method class_method='true' selector='valueWithSize:'>
      <retval type='@' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
  </class>
  <class name='NSValueTransformer'>
    <method class_method='true' selector='allowsReverseTransformation'>
      <retval type='B' />
    </method>
    <method selector='reverseTransformedValue:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setValueTransformer:forName:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='transformedValue:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='transformedValueClass'>
      <retval type='#' />
    </method>
    <method class_method='true' selector='valueTransformerForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='valueTransformerNames'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSWhoseSpecifier'>
    <method selector='endSubelementIdentifier'>
      <retval type='I' />
    </method>
    <method selector='endSubelementIndex'>
      <retval type='i' type64='q' />
    </method>
    <method selector='initWithContainerClassDescription:containerSpecifier:key:test:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='setEndSubelementIdentifier:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setEndSubelementIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setStartSubelementIdentifier:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setStartSubelementIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setTest:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='startSubelementIdentifier'>
      <retval type='I' />
    </method>
    <method selector='startSubelementIndex'>
      <retval type='i' type64='q' />
    </method>
    <method selector='test'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSXMLDTD'>
    <method selector='addChild:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='attributeDeclarationForName:elementName:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='elementDeclarationForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='entityDeclarationForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithContentsOfURL:options:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithData:options:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='insertChild:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='insertChildren:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='notationDeclarationForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='predefinedEntityDeclarationForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='publicID'>
      <retval type='@' />
    </method>
    <method selector='removeChildAtIndex:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='replaceChildAtIndex:withNode:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
    </method>
    <method selector='setChildren:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPublicID:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSystemID:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='systemID'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSXMLDTDNode'>
    <method selector='DTDKind'>
      <retval type='I' />
    </method>
    <method selector='initWithXMLString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isExternal'>
      <retval type='B' />
    </method>
    <method selector='notationName'>
      <retval type='@' />
    </method>
    <method selector='publicID'>
      <retval type='@' />
    </method>
    <method selector='setDTDKind:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setNotationName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPublicID:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSystemID:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='systemID'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSXMLDocument'>
    <method selector='DTD'>
      <retval type='@' />
    </method>
    <method selector='MIMEType'>
      <retval type='@' />
    </method>
    <method selector='XMLData'>
      <retval type='@' />
    </method>
    <method selector='XMLDataWithOptions:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='addChild:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='characterEncoding'>
      <retval type='@' />
    </method>
    <method selector='documentContentKind'>
      <retval type='I' />
    </method>
    <method selector='initWithContentsOfURL:options:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithData:options:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithRootElement:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithXMLString:options:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='insertChild:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='insertChildren:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='isStandalone'>
      <retval type='B' />
    </method>
    <method selector='objectByApplyingXSLT:arguments:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='objectByApplyingXSLTAtURL:arguments:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='objectByApplyingXSLTString:arguments:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='removeChildAtIndex:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='replaceChildAtIndex:withNode:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='replacementClassForClass:'>
      <retval type='#' />
      <arg index='0' type='#' />
    </method>
    <method selector='rootElement'>
      <retval type='@' />
    </method>
    <method selector='setCharacterEncoding:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setChildren:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDTD:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDocumentContentKind:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setMIMEType:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setRootElement:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setStandalone:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setVersion:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='validateAndReturnError:'>
      <retval type='B' />
      <arg index='0' type_modifier='o' />
    </method>
    <method selector='version'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSXMLElement'>
    <method selector='addAttribute:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addChild:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addNamespace:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='attributeForLocalName:URI:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='attributeForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='attributes'>
      <retval type='@' />
    </method>
    <method selector='elementsForLocalName:URI:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='elementsForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithName:URI:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithName:stringValue:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithXMLString:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='insertChild:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='insertChildren:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='namespaceForPrefix:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='namespaces'>
      <retval type='@' />
    </method>
    <method selector='normalizeAdjacentTextNodesPreservingCDATA:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='removeAttributeForName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeChildAtIndex:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='removeNamespaceForPrefix:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='replaceChildAtIndex:withNode:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
    </method>
    <method selector='resolveNamespaceForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='resolvePrefixForNamespaceURI:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAttributes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAttributesAsDictionary:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setChildren:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setNamespaces:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSXMLNode'>
    <method class_method='true' selector='DTDNodeWithXMLString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='URI'>
      <retval type='@' />
    </method>
    <method selector='XMLString'>
      <retval type='@' />
    </method>
    <method selector='XMLStringWithOptions:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='XPath'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='attributeWithName:URI:stringValue:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='attributeWithName:stringValue:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='canonicalXMLStringPreservingComments:'>
      <retval type='@' />
      <arg index='0' type='B' />
    </method>
    <method selector='childAtIndex:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='childCount'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='children'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='commentWithStringValue:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='description'>
      <retval type='@' />
    </method>
    <method selector='detach'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='document'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='documentWithRootElement:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='elementWithName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='elementWithName:URI:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='elementWithName:children:attributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='elementWithName:stringValue:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='index'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='initWithKind:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method selector='initWithKind:options:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='kind'>
      <retval type='I' />
    </method>
    <method selector='level'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='localName'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='localNameForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='name'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='namespaceWithName:stringValue:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='nextNode'>
      <retval type='@' />
    </method>
    <method selector='nextSibling'>
      <retval type='@' />
    </method>
    <method selector='nodesForXPath:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='objectValue'>
      <retval type='@' />
    </method>
    <method selector='objectsForXQuery:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='objectsForXQuery:error:'>
      <retval type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='objectsForXQuery:constants:error:'>
      <retval type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='parent'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='predefinedNamespaceForPrefix:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='prefix'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='prefixForName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='previousNode'>
      <retval type='@' />
    </method>
    <method selector='previousSibling'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='processingInstructionWithName:stringValue:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='rootDocument'>
      <retval type='@' />
    </method>
    <method selector='setName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setObjectValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setStringValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setStringValue:resolvingEntities:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='setURI:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='stringValue'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='textWithStringValue:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSXMLParser'>
    <method selector='abortParsing'>
      <retval type='v' />
    </method>
    <method selector='columnNumber'>
      <retval type='i' type64='q' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='initWithContentsOfURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='lineNumber'>
      <retval type='i' type64='q' />
    </method>
    <method selector='parse'>
      <retval type='B' />
    </method>
    <method selector='parserError'>
      <retval type='@' />
    </method>
    <method selector='publicID'>
      <retval type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setShouldProcessNamespaces:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setShouldReportNamespacePrefixes:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setShouldResolveExternalEntities:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='shouldProcessNamespaces'>
      <retval type='B' />
    </method>
    <method selector='shouldReportNamespacePrefixes'>
      <retval type='B' />
    </method>
    <method selector='shouldResolveExternalEntities'>
      <retval type='B' />
    </method>
    <method selector='systemID'>
      <retval type='@' />
    </method>
  </class>
</signatures>

