<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
  <depends_on path='/System/Library/Frameworks/Foundation.framework/Foundation' />
  <depends_on path='/System/Library/Frameworks/ApplicationServices.framework/ApplicationServices' />
  <opaque name='NSModalSession' type='^{_NSModalSession=}' type64='^{_NSModalSession=}' />
  <constant name='NSAFMAscender' type='@' />
  <constant name='NSAFMCapHeight' type='@' />
  <constant name='NSAFMCharacterSet' type='@' />
  <constant name='NSAFMDescender' type='@' />
  <constant name='NSAFMEncodingScheme' type='@' />
  <constant name='NSAFMFamilyName' type='@' />
  <constant name='NSAFMFontName' type='@' />
  <constant name='NSAFMFormatVersion' type='@' />
  <constant name='NSAFMFullName' type='@' />
  <constant name='NSAFMItalicAngle' type='@' />
  <constant name='NSAFMMappingScheme' type='@' />
  <constant name='NSAFMNotice' type='@' />
  <constant name='NSAFMUnderlinePosition' type='@' />
  <constant name='NSAFMUnderlineThickness' type='@' />
  <constant name='NSAFMVersion' type='@' />
  <constant name='NSAFMWeight' type='@' />
  <constant name='NSAFMXHeight' type='@' />
  <constant name='NSAbortModalException' type='@' />
  <constant name='NSAbortPrintingException' type='@' />
  <constant name='NSAccessibilityAllowedValuesAttribute' type='@' />
  <constant name='NSAccessibilityApplicationActivatedNotification' type='@' />
  <constant name='NSAccessibilityApplicationDeactivatedNotification' type='@' />
  <constant name='NSAccessibilityApplicationHiddenNotification' type='@' />
  <constant name='NSAccessibilityApplicationRole' type='@' />
  <constant name='NSAccessibilityApplicationShownNotification' type='@' />
  <constant name='NSAccessibilityAscendingSortDirectionValue' type='@' />
  <constant name='NSAccessibilityAttachmentTextAttribute' type='@' />
  <constant name='NSAccessibilityAttributedStringForRangeParameterizedAttribute' type='@' />
  <constant name='NSAccessibilityBackgroundColorTextAttribute' type='@' />
  <constant name='NSAccessibilityBoundsForRangeParameterizedAttribute' type='@' />
  <constant name='NSAccessibilityBrowserRole' type='@' />
  <constant name='NSAccessibilityBusyIndicatorRole' type='@' />
  <constant name='NSAccessibilityButtonRole' type='@' />
  <constant name='NSAccessibilityCancelAction' type='@' />
  <constant name='NSAccessibilityCancelButtonAttribute' type='@' />
  <constant name='NSAccessibilityCenterTabStopMarkerTypeValue' type='@' />
  <constant name='NSAccessibilityCentimetersUnitValue' type='@' />
  <constant name='NSAccessibilityCheckBoxRole' type='@' />
  <constant name='NSAccessibilityChildrenAttribute' type='@' />
  <constant name='NSAccessibilityClearButtonAttribute' type='@' />
  <constant name='NSAccessibilityCloseButtonAttribute' type='@' />
  <constant name='NSAccessibilityCloseButtonSubrole' type='@' />
  <constant name='NSAccessibilityColorWellRole' type='@' />
  <constant name='NSAccessibilityColumnCountAttribute' type='@' />
  <constant name='NSAccessibilityColumnRole' type='@' />
  <constant name='NSAccessibilityColumnTitlesAttribute' type='@' />
  <constant name='NSAccessibilityColumnsAttribute' type='@' />
  <constant name='NSAccessibilityComboBoxRole' type='@' />
  <constant name='NSAccessibilityConfirmAction' type='@' />
  <constant name='NSAccessibilityContentsAttribute' type='@' />
  <constant name='NSAccessibilityCreatedNotification' type='@' />
  <constant name='NSAccessibilityDecimalTabStopMarkerTypeValue' type='@' />
  <constant name='NSAccessibilityDecrementAction' type='@' />
  <constant name='NSAccessibilityDecrementArrowSubrole' type='@' />
  <constant name='NSAccessibilityDecrementButtonAttribute' type='@' />
  <constant name='NSAccessibilityDecrementPageSubrole' type='@' />
  <constant name='NSAccessibilityDefaultButtonAttribute' type='@' />
  <constant name='NSAccessibilityDeleteAction' type='@' />
  <constant name='NSAccessibilityDescendingSortDirectionValue' type='@' />
  <constant name='NSAccessibilityDescriptionAttribute' type='@' />
  <constant name='NSAccessibilityDialogSubrole' type='@' />
  <constant name='NSAccessibilityDisclosedByRowAttribute' type='@' />
  <constant name='NSAccessibilityDisclosedRowsAttribute' type='@' />
  <constant name='NSAccessibilityDisclosingAttribute' type='@' />
  <constant name='NSAccessibilityDisclosureLevelAttribute' type='@' />
  <constant name='NSAccessibilityDisclosureTriangleRole' type='@' />
  <constant name='NSAccessibilityDocumentAttribute' type='@' />
  <constant name='NSAccessibilityDrawerCreatedNotification' type='@' />
  <constant name='NSAccessibilityDrawerRole' type='@' />
  <constant name='NSAccessibilityEditedAttribute' type='@' />
  <constant name='NSAccessibilityEnabledAttribute' type='@' />
  <constant name='NSAccessibilityErrorCodeExceptionInfo' type='@' />
  <constant name='NSAccessibilityException' type='@' />
  <constant name='NSAccessibilityExpandedAttribute' type='@' />
  <constant name='NSAccessibilityFilenameAttribute' type='@' />
  <constant name='NSAccessibilityFirstLineIndentMarkerTypeValue' type='@' />
  <constant name='NSAccessibilityFloatingWindowSubrole' type='@' />
  <constant name='NSAccessibilityFocusedAttribute' type='@' />
  <constant name='NSAccessibilityFocusedUIElementAttribute' type='@' />
  <constant name='NSAccessibilityFocusedUIElementChangedNotification' type='@' />
  <constant name='NSAccessibilityFocusedWindowAttribute' type='@' />
  <constant name='NSAccessibilityFocusedWindowChangedNotification' type='@' />
  <constant name='NSAccessibilityFontFamilyKey' type='@' />
  <constant name='NSAccessibilityFontNameKey' type='@' />
  <constant name='NSAccessibilityFontSizeKey' type='@' />
  <constant name='NSAccessibilityFontTextAttribute' type='@' />
  <constant name='NSAccessibilityForegroundColorTextAttribute' type='@' />
  <constant name='NSAccessibilityFrontmostAttribute' type='@' />
  <constant name='NSAccessibilityGridRole' type='@' />
  <constant name='NSAccessibilityGroupRole' type='@' />
  <constant name='NSAccessibilityGrowAreaAttribute' type='@' />
  <constant name='NSAccessibilityGrowAreaRole' type='@' />
  <constant name='NSAccessibilityHeadIndentMarkerTypeValue' type='@' />
  <constant name='NSAccessibilityHeaderAttribute' type='@' />
  <constant name='NSAccessibilityHelpAttribute' type='@' />
  <constant name='NSAccessibilityHelpTagCreatedNotification' type='@' />
  <constant name='NSAccessibilityHelpTagRole' type='@' />
  <constant name='NSAccessibilityHiddenAttribute' type='@' />
  <constant name='NSAccessibilityHorizontalOrientationValue' type='@' />
  <constant name='NSAccessibilityHorizontalScrollBarAttribute' type='@' />
  <constant name='NSAccessibilityImageRole' type='@' />
  <constant name='NSAccessibilityInchesUnitValue' type='@' />
  <constant name='NSAccessibilityIncrementAction' type='@' />
  <constant name='NSAccessibilityIncrementArrowSubrole' type='@' />
  <constant name='NSAccessibilityIncrementButtonAttribute' type='@' />
  <constant name='NSAccessibilityIncrementPageSubrole' type='@' />
  <constant name='NSAccessibilityIncrementorRole' type='@' />
  <constant name='NSAccessibilityIndexAttribute' type='@' />
  <constant name='NSAccessibilityInsertionPointLineNumberAttribute' type='@' />
  <constant name='NSAccessibilityLabelUIElementsAttribute' type='@' />
  <constant name='NSAccessibilityLabelValueAttribute' type='@' />
  <constant name='NSAccessibilityLeftTabStopMarkerTypeValue' type='@' />
  <constant name='NSAccessibilityLineForIndexParameterizedAttribute' type='@' />
  <constant name='NSAccessibilityLinkRole' type='@' />
  <constant name='NSAccessibilityLinkTextAttribute' type='@' />
  <constant name='NSAccessibilityLinkedUIElementsAttribute' type='@' />
  <constant name='NSAccessibilityListRole' type='@' />
  <constant name='NSAccessibilityMainAttribute' type='@' />
  <constant name='NSAccessibilityMainWindowAttribute' type='@' />
  <constant name='NSAccessibilityMainWindowChangedNotification' type='@' />
  <constant name='NSAccessibilityMarkerGroupUIElementAttribute' type='@' />
  <constant name='NSAccessibilityMarkerTypeAttribute' type='@' />
  <constant name='NSAccessibilityMarkerTypeDescriptionAttribute' type='@' />
  <constant name='NSAccessibilityMarkerUIElementsAttribute' type='@' />
  <constant name='NSAccessibilityMarkerValuesAttribute' type='@' />
  <constant name='NSAccessibilityMatteContentUIElementAttribute' type='@' />
  <constant name='NSAccessibilityMatteHoleAttribute' type='@' />
  <constant name='NSAccessibilityMatteRole' type='@' />
  <constant name='NSAccessibilityMaxValueAttribute' type='@' />
  <constant name='NSAccessibilityMenuBarAttribute' type='@' />
  <constant name='NSAccessibilityMenuBarRole' type='@' />
  <constant name='NSAccessibilityMenuButtonRole' type='@' />
  <constant name='NSAccessibilityMenuItemRole' type='@' />
  <constant name='NSAccessibilityMenuRole' type='@' />
  <constant name='NSAccessibilityMinValueAttribute' type='@' />
  <constant name='NSAccessibilityMinimizeButtonAttribute' type='@' />
  <constant name='NSAccessibilityMinimizeButtonSubrole' type='@' />
  <constant name='NSAccessibilityMinimizedAttribute' type='@' />
  <constant name='NSAccessibilityMisspelledTextAttribute' type='@' />
  <constant name='NSAccessibilityModalAttribute' type='@' />
  <constant name='NSAccessibilityMovedNotification' type='@' />
  <constant name='NSAccessibilityNextContentsAttribute' type='@' />
  <constant name='NSAccessibilityNumberOfCharactersAttribute' type='@' />
  <constant name='NSAccessibilityOrderedByRowAttribute' type='@' />
  <constant name='NSAccessibilityOrientationAttribute' type='@' />
  <constant name='NSAccessibilityOutlineRole' type='@' />
  <constant name='NSAccessibilityOutlineRowSubrole' type='@' />
  <constant name='NSAccessibilityOverflowButtonAttribute' type='@' />
  <constant name='NSAccessibilityParentAttribute' type='@' />
  <constant name='NSAccessibilityPicasUnitValue' type='@' />
  <constant name='NSAccessibilityPickAction' type='@' />
  <constant name='NSAccessibilityPointsUnitValue' type='@' />
  <constant name='NSAccessibilityPopUpButtonRole' type='@' />
  <constant name='NSAccessibilityPositionAttribute' type='@' />
  <constant name='NSAccessibilityPressAction' type='@' />
  <constant name='NSAccessibilityPreviousContentsAttribute' type='@' />
  <constant name='NSAccessibilityProgressIndicatorRole' type='@' />
  <constant name='NSAccessibilityProxyAttribute' type='@' />
  <constant name='NSAccessibilityRTFForRangeParameterizedAttribute' type='@' />
  <constant name='NSAccessibilityRadioButtonRole' type='@' />
  <constant name='NSAccessibilityRadioGroupRole' type='@' />
  <constant name='NSAccessibilityRaiseAction' type='@' />
  <constant name='NSAccessibilityRangeForIndexParameterizedAttribute' type='@' />
  <constant name='NSAccessibilityRangeForLineParameterizedAttribute' type='@' />
  <constant name='NSAccessibilityRangeForPositionParameterizedAttribute' type='@' />
  <constant name='NSAccessibilityResizedNotification' type='@' />
  <constant name='NSAccessibilityRightTabStopMarkerTypeValue' type='@' />
  <constant name='NSAccessibilityRoleAttribute' type='@' />
  <constant name='NSAccessibilityRoleDescriptionAttribute' type='@' />
  <constant name='NSAccessibilityRowCountAttribute' type='@' />
  <constant name='NSAccessibilityRowCountChangedNotification' type='@' />
  <constant name='NSAccessibilityRowRole' type='@' />
  <constant name='NSAccessibilityRowsAttribute' type='@' />
  <constant name='NSAccessibilityRulerMarkerRole' type='@' />
  <constant name='NSAccessibilityRulerRole' type='@' />
  <constant name='NSAccessibilityScrollAreaRole' type='@' />
  <constant name='NSAccessibilityScrollBarRole' type='@' />
  <constant name='NSAccessibilitySearchButtonAttribute' type='@' />
  <constant name='NSAccessibilitySearchFieldSubrole' type='@' />
  <constant name='NSAccessibilitySearchMenuAttribute' type='@' />
  <constant name='NSAccessibilitySecureTextFieldSubrole' type='@' />
  <constant name='NSAccessibilitySelectedAttribute' type='@' />
  <constant name='NSAccessibilitySelectedChildrenAttribute' type='@' />
  <constant name='NSAccessibilitySelectedChildrenChangedNotification' type='@' />
  <constant name='NSAccessibilitySelectedColumnsAttribute' type='@' />
  <constant name='NSAccessibilitySelectedColumnsChangedNotification' type='@' />
  <constant name='NSAccessibilitySelectedRowsAttribute' type='@' />
  <constant name='NSAccessibilitySelectedRowsChangedNotification' type='@' />
  <constant name='NSAccessibilitySelectedTextAttribute' type='@' />
  <constant name='NSAccessibilitySelectedTextChangedNotification' type='@' />
  <constant name='NSAccessibilitySelectedTextRangeAttribute' type='@' />
  <constant name='NSAccessibilitySelectedTextRangesAttribute' type='@' />
  <constant name='NSAccessibilityServesAsTitleForUIElementsAttribute' type='@' />
  <constant name='NSAccessibilityShadowTextAttribute' type='@' />
  <constant name='NSAccessibilitySharedCharacterRangeAttribute' type='@' />
  <constant name='NSAccessibilitySharedTextUIElementsAttribute' type='@' />
  <constant name='NSAccessibilitySheetCreatedNotification' type='@' />
  <constant name='NSAccessibilitySheetRole' type='@' />
  <constant name='NSAccessibilityShowMenuAction' type='@' />
  <constant name='NSAccessibilityShownMenuAttribute' type='@' />
  <constant name='NSAccessibilitySizeAttribute' type='@' />
  <constant name='NSAccessibilitySliderRole' type='@' />
  <constant name='NSAccessibilitySortButtonRole' type='@' />
  <constant name='NSAccessibilitySortDirectionAttribute' type='@' />
  <constant name='NSAccessibilitySplitGroupRole' type='@' />
  <constant name='NSAccessibilitySplitterRole' type='@' />
  <constant name='NSAccessibilitySplittersAttribute' type='@' />
  <constant name='NSAccessibilityStandardWindowSubrole' type='@' />
  <constant name='NSAccessibilityStaticTextRole' type='@' />
  <constant name='NSAccessibilityStrikethroughColorTextAttribute' type='@' />
  <constant name='NSAccessibilityStrikethroughTextAttribute' type='@' />
  <constant name='NSAccessibilityStringForRangeParameterizedAttribute' type='@' />
  <constant name='NSAccessibilityStyleRangeForIndexParameterizedAttribute' type='@' />
  <constant name='NSAccessibilitySubroleAttribute' type='@' />
  <constant name='NSAccessibilitySuperscriptTextAttribute' type='@' />
  <constant name='NSAccessibilitySystemDialogSubrole' type='@' />
  <constant name='NSAccessibilitySystemFloatingWindowSubrole' type='@' />
  <constant name='NSAccessibilitySystemWideRole' type='@' />
  <constant name='NSAccessibilityTabGroupRole' type='@' />
  <constant name='NSAccessibilityTableRole' type='@' />
  <constant name='NSAccessibilityTableRowSubrole' type='@' />
  <constant name='NSAccessibilityTabsAttribute' type='@' />
  <constant name='NSAccessibilityTailIndentMarkerTypeValue' type='@' />
  <constant name='NSAccessibilityTextAreaRole' type='@' />
  <constant name='NSAccessibilityTextAttachmentSubrole' type='@' />
  <constant name='NSAccessibilityTextFieldRole' type='@' />
  <constant name='NSAccessibilityTextLinkSubrole' type='@' />
  <constant name='NSAccessibilityTimelineSubrole' type='@' />
  <constant name='NSAccessibilityTitleAttribute' type='@' />
  <constant name='NSAccessibilityTitleChangedNotification' type='@' />
  <constant name='NSAccessibilityTitleUIElementAttribute' type='@' />
  <constant name='NSAccessibilityToolbarButtonAttribute' type='@' />
  <constant name='NSAccessibilityToolbarButtonSubrole' type='@' />
  <constant name='NSAccessibilityToolbarRole' type='@' />
  <constant name='NSAccessibilityTopLevelUIElementAttribute' type='@' />
  <constant name='NSAccessibilityUIElementDestroyedNotification' type='@' />
  <constant name='NSAccessibilityURLAttribute' type='@' />
  <constant name='NSAccessibilityUnderlineColorTextAttribute' type='@' />
  <constant name='NSAccessibilityUnderlineTextAttribute' type='@' />
  <constant name='NSAccessibilityUnitDescriptionAttribute' type='@' />
  <constant name='NSAccessibilityUnitsAttribute' type='@' />
  <constant name='NSAccessibilityUnknownMarkerTypeValue' type='@' />
  <constant name='NSAccessibilityUnknownRole' type='@' />
  <constant name='NSAccessibilityUnknownSortDirectionValue' type='@' />
  <constant name='NSAccessibilityUnknownSubrole' type='@' />
  <constant name='NSAccessibilityUnknownUnitValue' type='@' />
  <constant name='NSAccessibilityValueAttribute' type='@' />
  <constant name='NSAccessibilityValueChangedNotification' type='@' />
  <constant name='NSAccessibilityValueDescriptionAttribute' type='@' />
  <constant name='NSAccessibilityValueIndicatorRole' type='@' />
  <constant name='NSAccessibilityVerticalOrientationValue' type='@' />
  <constant name='NSAccessibilityVerticalScrollBarAttribute' type='@' />
  <constant name='NSAccessibilityVisibleCharacterRangeAttribute' type='@' />
  <constant name='NSAccessibilityVisibleChildrenAttribute' type='@' />
  <constant name='NSAccessibilityVisibleColumnsAttribute' type='@' />
  <constant name='NSAccessibilityVisibleNameKey' type='@' />
  <constant name='NSAccessibilityVisibleRowsAttribute' type='@' />
  <constant name='NSAccessibilityWindowAttribute' type='@' />
  <constant name='NSAccessibilityWindowCreatedNotification' type='@' />
  <constant name='NSAccessibilityWindowDeminiaturizedNotification' type='@' />
  <constant name='NSAccessibilityWindowMiniaturizedNotification' type='@' />
  <constant name='NSAccessibilityWindowMovedNotification' type='@' />
  <constant name='NSAccessibilityWindowResizedNotification' type='@' />
  <constant name='NSAccessibilityWindowRole' type='@' />
  <constant name='NSAccessibilityWindowsAttribute' type='@' />
  <constant name='NSAccessibilityZoomButtonAttribute' type='@' />
  <constant name='NSAccessibilityZoomButtonSubrole' type='@' />
  <constant name='NSAlignmentBinding' type='@' />
  <constant name='NSAllRomanInputSourcesLocaleIdentifier' type='@' />
  <constant name='NSAllowsEditingMultipleValuesSelectionBindingOption' type='@' />
  <constant name='NSAllowsNullArgumentBindingOption' type='@' />
  <constant name='NSAlternateImageBinding' type='@' />
  <constant name='NSAlternateTitleBinding' type='@' />
  <constant name='NSAlwaysPresentsApplicationModalAlertsBindingOption' type='@' />
  <constant name='NSAnimateBinding' type='@' />
  <constant name='NSAnimationDelayBinding' type='@' />
  <constant name='NSAnimationProgressMark' type='@' />
  <constant name='NSAnimationProgressMarkNotification' type='@' />
  <constant name='NSAnimationTriggerOrderIn' type='@' />
  <constant name='NSAnimationTriggerOrderOut' type='@' />
  <constant name='NSAntialiasThresholdChangedNotification' type='@' />
  <constant name='NSAppKitIgnoredException' type='@' />
  <constant name='NSAppKitVersionNumber' type='d' />
  <constant name='NSAppKitVirtualMemoryException' type='@' />
  <constant name='NSApplicationDidBecomeActiveNotification' type='@' />
  <constant name='NSApplicationDidChangeScreenParametersNotification' type='@' />
  <constant name='NSApplicationDidFinishLaunchingNotification' type='@' />
  <constant name='NSApplicationDidHideNotification' type='@' />
  <constant name='NSApplicationDidResignActiveNotification' type='@' />
  <constant name='NSApplicationDidUnhideNotification' type='@' />
  <constant name='NSApplicationDidUpdateNotification' type='@' />
  <constant name='NSApplicationFileType' type='@' />
  <constant name='NSApplicationWillBecomeActiveNotification' type='@' />
  <constant name='NSApplicationWillFinishLaunchingNotification' type='@' />
  <constant name='NSApplicationWillHideNotification' type='@' />
  <constant name='NSApplicationWillResignActiveNotification' type='@' />
  <constant name='NSApplicationWillTerminateNotification' type='@' />
  <constant name='NSApplicationWillUnhideNotification' type='@' />
  <constant name='NSApplicationWillUpdateNotification' type='@' />
  <constant name='NSArgumentBinding' type='@' />
  <constant name='NSAttachmentAttributeName' type='@' />
  <constant name='NSAttributedStringBinding' type='@' />
  <constant name='NSAuthorDocumentAttribute' type='@' />
  <constant name='NSBackgroundColorAttributeName' type='@' />
  <constant name='NSBackgroundColorDocumentAttribute' type='@' />
  <constant name='NSBadBitmapParametersException' type='@' />
  <constant name='NSBadComparisonException' type='@' />
  <constant name='NSBadRTFColorTableException' type='@' />
  <constant name='NSBadRTFDirectiveException' type='@' />
  <constant name='NSBadRTFFontTableException' type='@' />
  <constant name='NSBadRTFStyleSheetException' type='@' />
  <constant name='NSBaseURLDocumentOption' type='@' />
  <constant name='NSBaselineOffsetAttributeName' type='@' />
  <constant name='NSBlack' type='f' type64='d' />
  <constant name='NSBottomMarginDocumentAttribute' type='@' />
  <constant name='NSBrowserColumnConfigurationDidChangeNotification' type='@' />
  <constant name='NSBrowserIllegalDelegateException' type='@' />
  <constant name='NSCalibratedBlackColorSpace' type='@' />
  <constant name='NSCalibratedRGBColorSpace' type='@' />
  <constant name='NSCalibratedWhiteColorSpace' type='@' />
  <constant name='NSCharacterEncodingDocumentAttribute' type='@' />
  <constant name='NSCharacterEncodingDocumentOption' type='@' />
  <constant name='NSCharacterShapeAttributeName' type='@' />
  <constant name='NSCocoaVersionDocumentAttribute' type='@' />
  <constant name='NSColorListDidChangeNotification' type='@' />
  <constant name='NSColorListIOException' type='@' />
  <constant name='NSColorListNotEditableException' type='@' />
  <constant name='NSColorPanelColorDidChangeNotification' type='@' />
  <constant name='NSColorPboardType' type='@' />
  <constant name='NSComboBoxSelectionDidChangeNotification' type='@' />
  <constant name='NSComboBoxSelectionIsChangingNotification' type='@' />
  <constant name='NSComboBoxWillDismissNotification' type='@' />
  <constant name='NSComboBoxWillPopUpNotification' type='@' />
  <constant name='NSCommentDocumentAttribute' type='@' />
  <constant name='NSCompanyDocumentAttribute' type='@' />
  <constant name='NSConditionallySetsEditableBindingOption' type='@' />
  <constant name='NSConditionallySetsEnabledBindingOption' type='@' />
  <constant name='NSConditionallySetsHiddenBindingOption' type='@' />
  <constant name='NSContentArrayBinding' type='@' />
  <constant name='NSContentArrayForMultipleSelectionBinding' type='@' />
  <constant name='NSContentBinding' type='@' />
  <constant name='NSContentDictionaryBinding' type='@' />
  <constant name='NSContentHeightBinding' type='@' />
  <constant name='NSContentObjectBinding' type='@' />
  <constant name='NSContentObjectsBinding' type='@' />
  <constant name='NSContentPlacementTagBindingOption' type='@' />
  <constant name='NSContentSetBinding' type='@' />
  <constant name='NSContentValuesBinding' type='@' />
  <constant name='NSContentWidthBinding' type='@' />
  <constant name='NSContextHelpModeDidActivateNotification' type='@' />
  <constant name='NSContextHelpModeDidDeactivateNotification' type='@' />
  <constant name='NSContinuouslyUpdatesValueBindingOption' type='@' />
  <constant name='NSControlTextDidBeginEditingNotification' type='@' />
  <constant name='NSControlTextDidChangeNotification' type='@' />
  <constant name='NSControlTextDidEndEditingNotification' type='@' />
  <constant name='NSControlTintDidChangeNotification' type='@' />
  <constant name='NSConvertedDocumentAttribute' type='@' />
  <constant name='NSCopyrightDocumentAttribute' type='@' />
  <constant name='NSCreatesSortDescriptorBindingOption' type='@' />
  <constant name='NSCreationTimeDocumentAttribute' type='@' />
  <constant name='NSCriticalValueBinding' type='@' />
  <constant name='NSCursorAttributeName' type='@' />
  <constant name='NSCustomColorSpace' type='@' />
  <constant name='NSDarkGray' type='f' type64='d' />
  <constant name='NSDataBinding' type='@' />
  <constant name='NSDefaultAttributesDocumentOption' type='@' />
  <constant name='NSDefaultTabIntervalDocumentAttribute' type='@' />
  <constant name='NSDeletesObjectsOnRemoveBindingsOption' type='@' />
  <constant name='NSDeviceBitsPerSample' type='@' />
  <constant name='NSDeviceBlackColorSpace' type='@' />
  <constant name='NSDeviceCMYKColorSpace' type='@' />
  <constant name='NSDeviceColorSpaceName' type='@' />
  <constant name='NSDeviceIsPrinter' type='@' />
  <constant name='NSDeviceIsScreen' type='@' />
  <constant name='NSDeviceRGBColorSpace' type='@' />
  <constant name='NSDeviceResolution' type='@' />
  <constant name='NSDeviceSize' type='@' />
  <constant name='NSDeviceWhiteColorSpace' type='@' />
  <constant name='NSDirectoryFileType' type='@' />
  <constant name='NSDisplayNameBindingOption' type='@' />
  <constant name='NSDisplayPatternBindingOption' type='@' />
  <constant name='NSDisplayPatternTitleBinding' type='@' />
  <constant name='NSDisplayPatternValueBinding' type='@' />
  <constant name='NSDocFormatTextDocumentType' type='@' />
  <constant name='NSDocumentEditedBinding' type='@' />
  <constant name='NSDocumentTypeDocumentAttribute' type='@' />
  <constant name='NSDocumentTypeDocumentOption' type='@' />
  <constant name='NSDoubleClickArgumentBinding' type='@' />
  <constant name='NSDoubleClickTargetBinding' type='@' />
  <constant name='NSDragPboard' type='@' />
  <constant name='NSDraggingException' type='@' />
  <constant name='NSDrawerDidCloseNotification' type='@' />
  <constant name='NSDrawerDidOpenNotification' type='@' />
  <constant name='NSDrawerWillCloseNotification' type='@' />
  <constant name='NSDrawerWillOpenNotification' type='@' />
  <constant name='NSEditableBinding' type='@' />
  <constant name='NSEditorDocumentAttribute' type='@' />
  <constant name='NSEnabledBinding' type='@' />
  <constant name='NSEventTrackingRunLoopMode' type='@' />
  <constant name='NSExcludedElementsDocumentAttribute' type='@' />
  <constant name='NSExcludedKeysBinding' type='@' />
  <constant name='NSExpansionAttributeName' type='@' />
  <constant name='NSFileContentsPboardType' type='@' />
  <constant name='NSFilenamesPboardType' type='@' />
  <constant name='NSFilesPromisePboardType' type='@' />
  <constant name='NSFilesystemFileType' type='@' />
  <constant name='NSFilterPredicateBinding' type='@' />
  <constant name='NSFindPanelCaseInsensitiveSearch' type='@' />
  <constant name='NSFindPanelSearchOptionsPboardType' type='@' />
  <constant name='NSFindPanelSubstringMatch' type='@' />
  <constant name='NSFindPboard' type='@' />
  <constant name='NSFontAttributeName' type='@' />
  <constant name='NSFontBinding' type='@' />
  <constant name='NSFontBoldBinding' type='@' />
  <constant name='NSFontCascadeListAttribute' type='@' />
  <constant name='NSFontCharacterSetAttribute' type='@' />
  <constant name='NSFontColorAttribute' type='@' />
  <constant name='NSFontFaceAttribute' type='@' />
  <constant name='NSFontFamilyAttribute' type='@' />
  <constant name='NSFontFamilyNameBinding' type='@' />
  <constant name='NSFontFeatureSelectorIdentifierKey' type='@' />
  <constant name='NSFontFeatureSettingsAttribute' type='@' />
  <constant name='NSFontFeatureTypeIdentifierKey' type='@' />
  <constant name='NSFontFixedAdvanceAttribute' type='@' />
  <constant name='NSFontIdentityMatrix' type='^f' type64='^d' />
  <constant name='NSFontItalicBinding' type='@' />
  <constant name='NSFontMatrixAttribute' type='@' />
  <constant name='NSFontNameAttribute' type='@' />
  <constant name='NSFontNameBinding' type='@' />
  <constant name='NSFontPboard' type='@' />
  <constant name='NSFontPboardType' type='@' />
  <constant name='NSFontSetChangedNotification' type='@' />
  <constant name='NSFontSizeAttribute' type='@' />
  <constant name='NSFontSizeBinding' type='@' />
  <constant name='NSFontSlantTrait' type='@' />
  <constant name='NSFontSymbolicTrait' type='@' />
  <constant name='NSFontTraitsAttribute' type='@' />
  <constant name='NSFontUnavailableException' type='@' />
  <constant name='NSFontVariationAttribute' type='@' />
  <constant name='NSFontVariationAxisDefaultValueKey' type='@' />
  <constant name='NSFontVariationAxisIdentifierKey' type='@' />
  <constant name='NSFontVariationAxisMaximumValueKey' type='@' />
  <constant name='NSFontVariationAxisMinimumValueKey' type='@' />
  <constant name='NSFontVariationAxisNameKey' type='@' />
  <constant name='NSFontVisibleNameAttribute' type='@' />
  <constant name='NSFontWeightTrait' type='@' />
  <constant name='NSFontWidthTrait' type='@' />
  <constant name='NSForegroundColorAttributeName' type='@' />
  <constant name='NSFullScreenModeAllScreens' type='@' />
  <constant name='NSFullScreenModeSetting' type='@' />
  <constant name='NSFullScreenModeWindowLevel' type='@' />
  <constant name='NSGeneralPboard' type='@' />
  <constant name='NSGlyphInfoAttributeName' type='@' />
  <constant name='NSGraphicsContextDestinationAttributeName' type='@' />
  <constant name='NSGraphicsContextPDFFormat' type='@' />
  <constant name='NSGraphicsContextPSFormat' type='@' />
  <constant name='NSGraphicsContextRepresentationFormatAttributeName' type='@' />
  <constant name='NSHTMLPboardType' type='@' />
  <constant name='NSHTMLTextDocumentType' type='@' />
  <constant name='NSHandlesContentAsCompoundValueBindingOption' type='@' />
  <constant name='NSHeaderTitleBinding' type='@' />
  <constant name='NSHiddenBinding' type='@' />
  <constant name='NSHyphenationFactorDocumentAttribute' type='@' />
  <constant name='NSIllegalSelectorException' type='@' />
  <constant name='NSImageBinding' type='@' />
  <constant name='NSImageCacheException' type='@' />
  <constant name='NSImageColorSyncProfileData' type='@' />
  <constant name='NSImageCompressionFactor' type='@' />
  <constant name='NSImageCompressionMethod' type='@' />
  <constant name='NSImageCurrentFrame' type='@' />
  <constant name='NSImageCurrentFrameDuration' type='@' />
  <constant name='NSImageDitherTransparency' type='@' />
  <constant name='NSImageEXIFData' type='@' />
  <constant name='NSImageFallbackBackgroundColor' type='@' />
  <constant name='NSImageFrameCount' type='@' />
  <constant name='NSImageGamma' type='@' />
  <constant name='NSImageInterlaced' type='@' />
  <constant name='NSImageLoopCount' type='@' />
  <constant name='NSImageNameActionTemplate' type='@' />
  <constant name='NSImageNameAddTemplate' type='@' />
  <constant name='NSImageNameAdvanced' type='@' />
  <constant name='NSImageNameBluetoothTemplate' type='@' />
  <constant name='NSImageNameBonjour' type='@' />
  <constant name='NSImageNameColorPanel' type='@' />
  <constant name='NSImageNameColumnViewTemplate' type='@' />
  <constant name='NSImageNameComputer' type='@' />
  <constant name='NSImageNameDotMac' type='@' />
  <constant name='NSImageNameEnterFullScreenTemplate' type='@' />
  <constant name='NSImageNameEveryone' type='@' />
  <constant name='NSImageNameExitFullScreenTemplate' type='@' />
  <constant name='NSImageNameFlowViewTemplate' type='@' />
  <constant name='NSImageNameFolderBurnable' type='@' />
  <constant name='NSImageNameFolderSmart' type='@' />
  <constant name='NSImageNameFollowLinkFreestandingTemplate' type='@' />
  <constant name='NSImageNameFontPanel' type='@' />
  <constant name='NSImageNameGoLeftTemplate' type='@' />
  <constant name='NSImageNameGoRightTemplate' type='@' />
  <constant name='NSImageNameIChatTheaterTemplate' type='@' />
  <constant name='NSImageNameIconViewTemplate' type='@' />
  <constant name='NSImageNameInfo' type='@' />
  <constant name='NSImageNameInvalidDataFreestandingTemplate' type='@' />
  <constant name='NSImageNameLeftFacingTriangleTemplate' type='@' />
  <constant name='NSImageNameListViewTemplate' type='@' />
  <constant name='NSImageNameLockLockedTemplate' type='@' />
  <constant name='NSImageNameLockUnlockedTemplate' type='@' />
  <constant name='NSImageNameMultipleDocuments' type='@' />
  <constant name='NSImageNameNetwork' type='@' />
  <constant name='NSImageNamePathTemplate' type='@' />
  <constant name='NSImageNamePreferencesGeneral' type='@' />
  <constant name='NSImageNameQuickLookTemplate' type='@' />
  <constant name='NSImageNameRefreshFreestandingTemplate' type='@' />
  <constant name='NSImageNameRefreshTemplate' type='@' />
  <constant name='NSImageNameRemoveTemplate' type='@' />
  <constant name='NSImageNameRevealFreestandingTemplate' type='@' />
  <constant name='NSImageNameRightFacingTriangleTemplate' type='@' />
  <constant name='NSImageNameSlideshowTemplate' type='@' />
  <constant name='NSImageNameSmartBadgeTemplate' type='@' />
  <constant name='NSImageNameStopProgressFreestandingTemplate' type='@' />
  <constant name='NSImageNameStopProgressTemplate' type='@' />
  <constant name='NSImageNameUser' type='@' />
  <constant name='NSImageNameUserAccounts' type='@' />
  <constant name='NSImageNameUserGroup' type='@' />
  <constant name='NSImageProgressive' type='@' />
  <constant name='NSImageRGBColorTable' type='@' />
  <constant name='NSImageRepRegistryDidChangeNotification' type='@' />
  <constant name='NSIncludedKeysBinding' type='@' />
  <constant name='NSInitialKeyBinding' type='@' />
  <constant name='NSInitialValueBinding' type='@' />
  <constant name='NSInkTextPboardType' type='@' />
  <constant name='NSInsertsNullPlaceholderBindingOption' type='@' />
  <constant name='NSInterfaceStyleDefault' type='@' />
  <constant name='NSInvokesSeparatelyWithArrayObjectsBindingOption' type='@' />
  <constant name='NSIsIndeterminateBinding' type='@' />
  <constant name='NSKernAttributeName' type='@' />
  <constant name='NSKeywordsDocumentAttribute' type='@' />
  <constant name='NSLabelBinding' type='@' />
  <constant name='NSLeftMarginDocumentAttribute' type='@' />
  <constant name='NSLigatureAttributeName' type='@' />
  <constant name='NSLightGray' type='f' type64='d' />
  <constant name='NSLinkAttributeName' type='@' />
  <constant name='NSLocalizedKeyDictionaryBinding' type='@' />
  <constant name='NSMacSimpleTextDocumentType' type='@' />
  <constant name='NSManagedObjectContextBinding' type='@' />
  <constant name='NSMarkedClauseSegmentAttributeName' type='@' />
  <constant name='NSMaxValueBinding' type='@' />
  <constant name='NSMaxWidthBinding' type='@' />
  <constant name='NSMaximumRecentsBinding' type='@' />
  <constant name='NSMenuDidAddItemNotification' type='@' />
  <constant name='NSMenuDidBeginTrackingNotification' type='@' />
  <constant name='NSMenuDidChangeItemNotification' type='@' />
  <constant name='NSMenuDidEndTrackingNotification' type='@' />
  <constant name='NSMenuDidRemoveItemNotification' type='@' />
  <constant name='NSMenuDidSendActionNotification' type='@' />
  <constant name='NSMenuWillSendActionNotification' type='@' />
  <constant name='NSMinValueBinding' type='@' />
  <constant name='NSMinWidthBinding' type='@' />
  <constant name='NSMixedStateImageBinding' type='@' />
  <constant name='NSModalPanelRunLoopMode' type='@' />
  <constant name='NSModificationTimeDocumentAttribute' type='@' />
  <constant name='NSMultipleTextSelectionPboardType' type='@' />
  <constant name='NSMultipleValuesMarker' type='@' />
  <constant name='NSMultipleValuesPlaceholderBindingOption' type='@' />
  <constant name='NSNamedColorSpace' type='@' />
  <constant name='NSNibLoadingException' type='@' />
  <constant name='NSNibOwner' type='@' />
  <constant name='NSNibTopLevelObjects' type='@' />
  <constant name='NSNoSelectionMarker' type='@' />
  <constant name='NSNoSelectionPlaceholderBindingOption' type='@' />
  <constant name='NSNotApplicableMarker' type='@' />
  <constant name='NSNotApplicablePlaceholderBindingOption' type='@' />
  <constant name='NSNullPlaceholderBindingOption' type='@' />
  <constant name='NSObliquenessAttributeName' type='@' />
  <constant name='NSObservedKeyPathKey' type='@' />
  <constant name='NSObservedObjectKey' type='@' />
  <constant name='NSOffStateImageBinding' type='@' />
  <constant name='NSOfficeOpenXMLTextDocumentType' type='@' />
  <constant name='NSOnStateImageBinding' type='@' />
  <constant name='NSOpenDocumentTextDocumentType' type='@' />
  <constant name='NSOptionsKey' type='@' />
  <constant name='NSOutlineViewColumnDidMoveNotification' type='@' />
  <constant name='NSOutlineViewColumnDidResizeNotification' type='@' />
  <constant name='NSOutlineViewItemDidCollapseNotification' type='@' />
  <constant name='NSOutlineViewItemDidExpandNotification' type='@' />
  <constant name='NSOutlineViewItemWillCollapseNotification' type='@' />
  <constant name='NSOutlineViewItemWillExpandNotification' type='@' />
  <constant name='NSOutlineViewSelectionDidChangeNotification' type='@' />
  <constant name='NSOutlineViewSelectionIsChangingNotification' type='@' />
  <constant name='NSPDFPboardType' type='@' />
  <constant name='NSPICTPboardType' type='@' />
  <constant name='NSPPDIncludeNotFoundException' type='@' />
  <constant name='NSPPDIncludeStackOverflowException' type='@' />
  <constant name='NSPPDIncludeStackUnderflowException' type='@' />
  <constant name='NSPPDParseException' type='@' />
  <constant name='NSPaperSizeDocumentAttribute' type='@' />
  <constant name='NSParagraphStyleAttributeName' type='@' />
  <constant name='NSPasteboardCommunicationException' type='@' />
  <constant name='NSPatternColorSpace' type='@' />
  <constant name='NSPlainFileType' type='@' />
  <constant name='NSPlainTextDocumentType' type='@' />
  <constant name='NSPopUpButtonCellWillPopUpNotification' type='@' />
  <constant name='NSPopUpButtonWillPopUpNotification' type='@' />
  <constant name='NSPostScriptPboardType' type='@' />
  <constant name='NSPredicateBinding' type='@' />
  <constant name='NSPredicateFormatBindingOption' type='@' />
  <constant name='NSPrefixSpacesDocumentAttribute' type='@' />
  <constant name='NSPrintAllPages' type='@' />
  <constant name='NSPrintBottomMargin' type='@' />
  <constant name='NSPrintCancelJob' type='@' />
  <constant name='NSPrintCopies' type='@' />
  <constant name='NSPrintDetailedErrorReporting' type='@' />
  <constant name='NSPrintFaxCoverSheetName' type='@' />
  <constant name='NSPrintFaxHighResolution' type='@' />
  <constant name='NSPrintFaxJob' type='@' />
  <constant name='NSPrintFaxModem' type='@' />
  <constant name='NSPrintFaxNumber' type='@' />
  <constant name='NSPrintFaxReceiverNames' type='@' />
  <constant name='NSPrintFaxReceiverNumbers' type='@' />
  <constant name='NSPrintFaxReturnReceipt' type='@' />
  <constant name='NSPrintFaxSendTime' type='@' />
  <constant name='NSPrintFaxTrimPageEnds' type='@' />
  <constant name='NSPrintFaxUseCoverSheet' type='@' />
  <constant name='NSPrintFirstPage' type='@' />
  <constant name='NSPrintFormName' type='@' />
  <constant name='NSPrintHeaderAndFooter' type='@' />
  <constant name='NSPrintHorizontalPagination' type='@' />
  <constant name='NSPrintHorizontallyCentered' type='@' />
  <constant name='NSPrintJobDisposition' type='@' />
  <constant name='NSPrintJobFeatures' type='@' />
  <constant name='NSPrintLastPage' type='@' />
  <constant name='NSPrintLeftMargin' type='@' />
  <constant name='NSPrintManualFeed' type='@' />
  <constant name='NSPrintMustCollate' type='@' />
  <constant name='NSPrintOperationExistsException' type='@' />
  <constant name='NSPrintOrientation' type='@' />
  <constant name='NSPrintPackageException' type='@' />
  <constant name='NSPrintPagesAcross' type='@' />
  <constant name='NSPrintPagesDown' type='@' />
  <constant name='NSPrintPagesPerSheet' type='@' />
  <constant name='NSPrintPanelAccessorySummaryItemDescriptionKey' type='@' />
  <constant name='NSPrintPanelAccessorySummaryItemNameKey' type='@' />
  <constant name='NSPrintPaperFeed' type='@' />
  <constant name='NSPrintPaperName' type='@' />
  <constant name='NSPrintPaperSize' type='@' />
  <constant name='NSPrintPhotoJobStyleHint' type='@' />
  <constant name='NSPrintPreviewJob' type='@' />
  <constant name='NSPrintPrinter' type='@' />
  <constant name='NSPrintPrinterName' type='@' />
  <constant name='NSPrintReversePageOrder' type='@' />
  <constant name='NSPrintRightMargin' type='@' />
  <constant name='NSPrintSaveJob' type='@' />
  <constant name='NSPrintSavePath' type='@' />
  <constant name='NSPrintScalingFactor' type='@' />
  <constant name='NSPrintSpoolJob' type='@' />
  <constant name='NSPrintTime' type='@' />
  <constant name='NSPrintTopMargin' type='@' />
  <constant name='NSPrintVerticalPagination' type='@' />
  <constant name='NSPrintVerticallyCentered' type='@' />
  <constant name='NSPrintingCommunicationException' type='@' />
  <constant name='NSRTFDPboardType' type='@' />
  <constant name='NSRTFDTextDocumentType' type='@' />
  <constant name='NSRTFPboardType' type='@' />
  <constant name='NSRTFPropertyStackOverflowException' type='@' />
  <constant name='NSRTFTextDocumentType' type='@' />
  <constant name='NSRaisesForNotApplicableKeysBindingOption' type='@' />
  <constant name='NSReadOnlyDocumentAttribute' type='@' />
  <constant name='NSRecentSearchesBinding' type='@' />
  <constant name='NSRepresentedFilenameBinding' type='@' />
  <constant name='NSRightMarginDocumentAttribute' type='@' />
  <constant name='NSRowHeightBinding' type='@' />
  <constant name='NSRuleEditorPredicateComparisonModifier' type='@' />
  <constant name='NSRuleEditorPredicateCompoundType' type='@' />
  <constant name='NSRuleEditorPredicateCustomSelector' type='@' />
  <constant name='NSRuleEditorPredicateLeftExpression' type='@' />
  <constant name='NSRuleEditorPredicateOperatorType' type='@' />
  <constant name='NSRuleEditorPredicateOptions' type='@' />
  <constant name='NSRuleEditorPredicateRightExpression' type='@' />
  <constant name='NSRuleEditorRowsDidChangeNotification' type='@' />
  <constant name='NSRulerPboard' type='@' />
  <constant name='NSRulerPboardType' type='@' />
  <constant name='NSSelectedIdentifierBinding' type='@' />
  <constant name='NSSelectedIndexBinding' type='@' />
  <constant name='NSSelectedLabelBinding' type='@' />
  <constant name='NSSelectedObjectBinding' type='@' />
  <constant name='NSSelectedObjectsBinding' type='@' />
  <constant name='NSSelectedTagBinding' type='@' />
  <constant name='NSSelectedValueBinding' type='@' />
  <constant name='NSSelectedValuesBinding' type='@' />
  <constant name='NSSelectionIndexPathsBinding' type='@' />
  <constant name='NSSelectionIndexesBinding' type='@' />
  <constant name='NSSelectorNameBindingOption' type='@' />
  <constant name='NSSelectsAllWhenSettingContentBindingOption' type='@' />
  <constant name='NSShadowAttributeName' type='@' />
  <constant name='NSShellCommandFileType' type='@' />
  <constant name='NSSortDescriptorsBinding' type='@' />
  <constant name='NSSoundPboardType' type='@' />
  <constant name='NSSpeechCharacterModeProperty' type='@' />
  <constant name='NSSpeechCommandDelimiterProperty' type='@' />
  <constant name='NSSpeechCommandPrefix' type='@' />
  <constant name='NSSpeechCommandSuffix' type='@' />
  <constant name='NSSpeechCurrentVoiceProperty' type='@' />
  <constant name='NSSpeechDictionaryAbbreviations' type='@' />
  <constant name='NSSpeechDictionaryEntryPhonemes' type='@' />
  <constant name='NSSpeechDictionaryEntrySpelling' type='@' />
  <constant name='NSSpeechDictionaryLocaleIdentifier' type='@' />
  <constant name='NSSpeechDictionaryModificationDate' type='@' />
  <constant name='NSSpeechDictionaryPronunciations' type='@' />
  <constant name='NSSpeechErrorCount' type='@' />
  <constant name='NSSpeechErrorNewestCharacterOffset' type='@' />
  <constant name='NSSpeechErrorNewestCode' type='@' />
  <constant name='NSSpeechErrorOldestCharacterOffset' type='@' />
  <constant name='NSSpeechErrorOldestCode' type='@' />
  <constant name='NSSpeechErrorsProperty' type='@' />
  <constant name='NSSpeechInputModeProperty' type='@' />
  <constant name='NSSpeechModeLiteral' type='@' />
  <constant name='NSSpeechModeNormal' type='@' />
  <constant name='NSSpeechModePhoneme' type='@' />
  <constant name='NSSpeechModeText' type='@' />
  <constant name='NSSpeechNumberModeProperty' type='@' />
  <constant name='NSSpeechOutputToFileURLProperty' type='@' />
  <constant name='NSSpeechPhonemeInfoExample' type='@' />
  <constant name='NSSpeechPhonemeInfoHiliteEnd' type='@' />
  <constant name='NSSpeechPhonemeInfoHiliteStart' type='@' />
  <constant name='NSSpeechPhonemeInfoOpcode' type='@' />
  <constant name='NSSpeechPhonemeInfoSymbol' type='@' />
  <constant name='NSSpeechPhonemeSymbolsProperty' type='@' />
  <constant name='NSSpeechPitchBaseProperty' type='@' />
  <constant name='NSSpeechPitchModProperty' type='@' />
  <constant name='NSSpeechRateProperty' type='@' />
  <constant name='NSSpeechRecentSyncProperty' type='@' />
  <constant name='NSSpeechResetProperty' type='@' />
  <constant name='NSSpeechStatusNumberOfCharactersLeft' type='@' />
  <constant name='NSSpeechStatusOutputBusy' type='@' />
  <constant name='NSSpeechStatusOutputPaused' type='@' />
  <constant name='NSSpeechStatusPhonemeCode' type='@' />
  <constant name='NSSpeechStatusProperty' type='@' />
  <constant name='NSSpeechSynthesizerInfoIdentifier' type='@' />
  <constant name='NSSpeechSynthesizerInfoProperty' type='@' />
  <constant name='NSSpeechSynthesizerInfoVersion' type='@' />
  <constant name='NSSpeechVolumeProperty' type='@' />
  <constant name='NSSpellingStateAttributeName' type='@' />
  <constant name='NSSplitViewDidResizeSubviewsNotification' type='@' />
  <constant name='NSSplitViewWillResizeSubviewsNotification' type='@' />
  <constant name='NSStrikethroughColorAttributeName' type='@' />
  <constant name='NSStrikethroughStyleAttributeName' type='@' />
  <constant name='NSStringPboardType' type='@' />
  <constant name='NSStrokeColorAttributeName' type='@' />
  <constant name='NSStrokeWidthAttributeName' type='@' />
  <constant name='NSSubjectDocumentAttribute' type='@' />
  <constant name='NSSuperscriptAttributeName' type='@' />
  <constant name='NSSystemColorsDidChangeNotification' type='@' />
  <constant name='NSTIFFException' type='@' />
  <constant name='NSTIFFPboardType' type='@' />
  <constant name='NSTabColumnTerminatorsAttributeName' type='@' />
  <constant name='NSTableViewColumnDidMoveNotification' type='@' />
  <constant name='NSTableViewColumnDidResizeNotification' type='@' />
  <constant name='NSTableViewSelectionDidChangeNotification' type='@' />
  <constant name='NSTableViewSelectionIsChangingNotification' type='@' />
  <constant name='NSTabularTextPboardType' type='@' />
  <constant name='NSTargetBinding' type='@' />
  <constant name='NSTextColorBinding' type='@' />
  <constant name='NSTextDidBeginEditingNotification' type='@' />
  <constant name='NSTextDidChangeNotification' type='@' />
  <constant name='NSTextDidEndEditingNotification' type='@' />
  <constant name='NSTextEncodingNameDocumentAttribute' type='@' />
  <constant name='NSTextEncodingNameDocumentOption' type='@' />
  <constant name='NSTextLineTooLongException' type='@' />
  <constant name='NSTextNoSelectionException' type='@' />
  <constant name='NSTextReadException' type='@' />
  <constant name='NSTextSizeMultiplierDocumentOption' type='@' />
  <constant name='NSTextStorageDidProcessEditingNotification' type='@' />
  <constant name='NSTextStorageWillProcessEditingNotification' type='@' />
  <constant name='NSTextViewDidChangeSelectionNotification' type='@' />
  <constant name='NSTextViewDidChangeTypingAttributesNotification' type='@' />
  <constant name='NSTextViewWillChangeNotifyingTextViewNotification' type='@' />
  <constant name='NSTextWriteException' type='@' />
  <constant name='NSTimeoutDocumentOption' type='@' />
  <constant name='NSTitleBinding' type='@' />
  <constant name='NSTitleDocumentAttribute' type='@' />
  <constant name='NSToolTipAttributeName' type='@' />
  <constant name='NSToolTipBinding' type='@' />
  <constant name='NSToolbarCustomizeToolbarItemIdentifier' type='@' />
  <constant name='NSToolbarDidRemoveItemNotification' type='@' />
  <constant name='NSToolbarFlexibleSpaceItemIdentifier' type='@' />
  <constant name='NSToolbarPrintItemIdentifier' type='@' />
  <constant name='NSToolbarSeparatorItemIdentifier' type='@' />
  <constant name='NSToolbarShowColorsItemIdentifier' type='@' />
  <constant name='NSToolbarShowFontsItemIdentifier' type='@' />
  <constant name='NSToolbarSpaceItemIdentifier' type='@' />
  <constant name='NSToolbarWillAddItemNotification' type='@' />
  <constant name='NSTopMarginDocumentAttribute' type='@' />
  <constant name='NSTransparentBinding' type='@' />
  <constant name='NSTypedStreamVersionException' type='@' />
  <constant name='NSURLPboardType' type='@' />
  <constant name='NSUnderlineByWordMask' type='I' type64='Q' />
  <constant name='NSUnderlineColorAttributeName' type='@' />
  <constant name='NSUnderlineStrikethroughMask' type='I' type64='Q' />
  <constant name='NSUnderlineStyleAttributeName' type='@' />
  <constant name='NSVCardPboardType' type='@' />
  <constant name='NSValidatesImmediatelyBindingOption' type='@' />
  <constant name='NSValueBinding' type='@' />
  <constant name='NSValuePathBinding' type='@' />
  <constant name='NSValueTransformerBindingOption' type='@' />
  <constant name='NSValueTransformerNameBindingOption' type='@' />
  <constant name='NSValueURLBinding' type='@' />
  <constant name='NSViewAnimationEffectKey' type='@' />
  <constant name='NSViewAnimationEndFrameKey' type='@' />
  <constant name='NSViewAnimationFadeInEffect' type='@' />
  <constant name='NSViewAnimationFadeOutEffect' type='@' />
  <constant name='NSViewAnimationStartFrameKey' type='@' />
  <constant name='NSViewAnimationTargetKey' type='@' />
  <constant name='NSViewBoundsDidChangeNotification' type='@' />
  <constant name='NSViewDidUpdateTrackingAreasNotification' type='@' />
  <constant name='NSViewFocusDidChangeNotification' type='@' />
  <constant name='NSViewFrameDidChangeNotification' type='@' />
  <constant name='NSViewGlobalFrameDidChangeNotification' type='@' />
  <constant name='NSViewModeDocumentAttribute' type='@' />
  <constant name='NSViewSizeDocumentAttribute' type='@' />
  <constant name='NSViewZoomDocumentAttribute' type='@' />
  <constant name='NSVisibleBinding' type='@' />
  <constant name='NSVoiceAge' type='@' />
  <constant name='NSVoiceDemoText' type='@' />
  <constant name='NSVoiceGender' type='@' />
  <constant name='NSVoiceGenderFemale' type='@' />
  <constant name='NSVoiceGenderMale' type='@' />
  <constant name='NSVoiceGenderNeuter' type='@' />
  <constant name='NSVoiceIdentifier' type='@' />
  <constant name='NSVoiceIndividuallySpokenCharacters' type='@' />
  <constant name='NSVoiceLanguage' type='@' />
  <constant name='NSVoiceLocaleIdentifier' type='@' />
  <constant name='NSVoiceName' type='@' />
  <constant name='NSVoiceSupportedCharacters' type='@' />
  <constant name='NSWarningValueBinding' type='@' />
  <constant name='NSWebArchiveTextDocumentType' type='@' />
  <constant name='NSWebPreferencesDocumentOption' type='@' />
  <constant name='NSWebResourceLoadDelegateDocumentOption' type='@' />
  <constant name='NSWhite' type='f' type64='d' />
  <constant name='NSWidthBinding' type='@' />
  <constant name='NSWindowDidBecomeKeyNotification' type='@' />
  <constant name='NSWindowDidBecomeMainNotification' type='@' />
  <constant name='NSWindowDidChangeScreenNotification' type='@' />
  <constant name='NSWindowDidChangeScreenProfileNotification' type='@' />
  <constant name='NSWindowDidDeminiaturizeNotification' type='@' />
  <constant name='NSWindowDidEndSheetNotification' type='@' />
  <constant name='NSWindowDidExposeNotification' type='@' />
  <constant name='NSWindowDidMiniaturizeNotification' type='@' />
  <constant name='NSWindowDidMoveNotification' type='@' />
  <constant name='NSWindowDidResignKeyNotification' type='@' />
  <constant name='NSWindowDidResignMainNotification' type='@' />
  <constant name='NSWindowDidResizeNotification' type='@' />
  <constant name='NSWindowDidUpdateNotification' type='@' />
  <constant name='NSWindowServerCommunicationException' type='@' />
  <constant name='NSWindowWillBeginSheetNotification' type='@' />
  <constant name='NSWindowWillCloseNotification' type='@' />
  <constant name='NSWindowWillMiniaturizeNotification' type='@' />
  <constant name='NSWindowWillMoveNotification' type='@' />
  <constant name='NSWordMLTextDocumentType' type='@' />
  <constant name='NSWordTablesReadException' type='@' />
  <constant name='NSWordTablesWriteException' type='@' />
  <constant name='NSWorkspaceCompressOperation' type='@' />
  <constant name='NSWorkspaceCopyOperation' type='@' />
  <constant name='NSWorkspaceDecompressOperation' type='@' />
  <constant name='NSWorkspaceDecryptOperation' type='@' />
  <constant name='NSWorkspaceDestroyOperation' type='@' />
  <constant name='NSWorkspaceDidLaunchApplicationNotification' type='@' />
  <constant name='NSWorkspaceDidMountNotification' type='@' />
  <constant name='NSWorkspaceDidPerformFileOperationNotification' type='@' />
  <constant name='NSWorkspaceDidTerminateApplicationNotification' type='@' />
  <constant name='NSWorkspaceDidUnmountNotification' type='@' />
  <constant name='NSWorkspaceDidWakeNotification' type='@' />
  <constant name='NSWorkspaceDuplicateOperation' type='@' />
  <constant name='NSWorkspaceEncryptOperation' type='@' />
  <constant name='NSWorkspaceLinkOperation' type='@' />
  <constant name='NSWorkspaceMoveOperation' type='@' />
  <constant name='NSWorkspaceRecycleOperation' type='@' />
  <constant name='NSWorkspaceSessionDidBecomeActiveNotification' type='@' />
  <constant name='NSWorkspaceSessionDidResignActiveNotification' type='@' />
  <constant name='NSWorkspaceWillLaunchApplicationNotification' type='@' />
  <constant name='NSWorkspaceWillPowerOffNotification' type='@' />
  <constant name='NSWorkspaceWillSleepNotification' type='@' />
  <constant name='NSWorkspaceWillUnmountNotification' type='@' />
  <enum name='NSLayoutNotDone' value='0' />
  <enum name='NSLayoutDone' value='1' />
  <enum name='NSLayoutCantFit' value='2' />
  <enum name='NSLayoutOutOfGlyphs' value='3' />
  <enum name='NSGlyphLayoutAtAPoint' value='0' />
  <enum name='NSGlyphLayoutAgainstAPoint' value='1' />
  <enum name='NSGlyphLayoutWithPrevious' value='2' />
  <enum name='NSLayoutLeftToRight' value='0' />
  <enum name='NSLayoutRightToLeft' value='1' />
  <enum name='NSBaselineNotSet' value='-1.0' />
  <enum name='NumGlyphsToGetEachTime' value='20' />
  <enum name='NSOneByteGlyphPacking' value='0'/>
  <enum name='NSJapaneseEUCGlyphPacking' value='1'/>
  <enum name='NSAsciiWithDoubleByteEUCGlyphPacking' value='2'/>
  <enum name='NSTwoByteGlyphPacking' value='3'/>
  <enum name='NSFourByteGlyphPacking' value='4'/>
  <enum name='NSGlyphBelow' value='1'/>
  <enum name='NSGlyphAbove' value='2'/>
  <enum name='NSAWTEventType' value='16' />
  <enum name='NSAboveBottom' value='4' />
  <enum name='NSAboveTop' value='1' />
  <enum name='NSAddTraitFontAction' value='2' />
  <enum name='NSAdobeCNS1CharacterCollection' value='1' />
  <enum name='NSAdobeGB1CharacterCollection' value='2' />
  <enum name='NSAdobeJapan1CharacterCollection' value='3' />
  <enum name='NSAdobeJapan2CharacterCollection' value='4' />
  <enum name='NSAdobeKorea1CharacterCollection' value='5' />
  <enum name='NSAlertAlternateReturn' value='0' />
  <enum name='NSAlertDefaultReturn' value='1' />
  <enum name='NSAlertErrorReturn' value='-2' />
  <enum name='NSAlertFirstButtonReturn' value='1000' />
  <enum name='NSAlertOtherReturn' value='-1' />
  <enum name='NSAlertSecondButtonReturn' value='1001' />
  <enum name='NSAlertThirdButtonReturn' value='1002' />
  <enum name='NSAllScrollerParts' value='2' />
  <enum name='NSAlphaFirstBitmapFormat' value='1' />
  <enum name='NSAlphaNonpremultipliedBitmapFormat' value='2' />
  <enum name='NSAlphaShiftKeyMask' value='65536' />
  <enum name='NSAlternateKeyMask' value='524288' />
  <enum name='NSAnimationBlocking' value='0' />
  <enum name='NSAnimationEaseIn' value='1' />
  <enum name='NSAnimationEaseInOut' value='0' />
  <enum name='NSAnimationEaseOut' value='2' />
  <enum name='NSAnimationEffectDisappearingItemDefault' value='0' />
  <enum name='NSAnimationEffectPoof' value='10' />
  <enum name='NSAnimationLinear' value='3' />
  <enum name='NSAnimationNonblocking' value='1' />
  <enum name='NSAnimationNonblockingThreaded' value='2' />
  <enum name='NSAnyEventMask' value='-1' />
  <enum name='NSAnyType' value='0' />
  <enum name='NSAppKitDefined' value='13' />
  <enum name='NSAppKitDefinedMask' value='8192' />
  <enum name='NSAppKitVersionNumber10_0' value='577' />
  <enum name='NSAppKitVersionNumber10_1' value='620' />
  <enum name='NSAppKitVersionNumber10_2' value='663' />
  <enum name='NSAppKitVersionNumber10_2_3' value='663.60000000000002' />
  <enum name='NSAppKitVersionNumber10_3' value='743' />
  <enum name='NSAppKitVersionNumber10_3_2' value='743.13999999999999' />
  <enum name='NSAppKitVersionNumber10_3_3' value='743.20000000000005' />
  <enum name='NSAppKitVersionNumber10_3_5' value='743.24000000000001' />
  <enum name='NSAppKitVersionNumber10_3_7' value='743.33000000000004' />
  <enum name='NSAppKitVersionNumber10_3_9' value='743.36000000000001' />
  <enum name='NSAppKitVersionNumber10_4' value='824' />
  <enum name='NSAppKitVersionNumberWithColumnResizingBrowser' value='685.0' />
  <enum name='NSAppKitVersionNumberWithContinuousScrollingBrowser' value='680.0' />
  <enum name='NSAppKitVersionNumberWithCursorSizeSupport' value='682.0' />
  <enum name='NSAppKitVersionNumberWithCustomSheetPosition' value='686.0' />
  <enum name='NSAppKitVersionNumberWithDirectionalTabs' value='631.0' />
  <enum name='NSAppKitVersionNumberWithPatternColorLeakFix' value='641.0' />
  <enum name='NSApplicationActivatedEventType' value='1' />
  <enum name='NSApplicationDeactivatedEventType' value='2' />
  <enum name='NSApplicationDefined' value='15' />
  <enum name='NSApplicationDefinedMask' value='32768' />
  <enum name='NSApplicationDelegateReplyCancel' value='1' />
  <enum name='NSApplicationDelegateReplyFailure' value='2' />
  <enum name='NSApplicationDelegateReplySuccess' value='0' />
  <enum name='NSAscendingPageOrder' value='1' />
  <enum name='NSAtBottom' value='5' />
  <enum name='NSAtTop' value='2' />
  <string_constant name='NSAttachmentCharacter' nsstring='true' value='&#65532;' />
  <enum name='NSAutoPagination' value='0' />
  <enum name='NSAutosaveOperation' value='3' />
  <enum name='NSBMPFileType' value='1' />
  <enum name='NSBackTabCharacter' value='25' />
  <enum name='NSBackgroundStyleDark' value='1' />
  <enum name='NSBackgroundStyleLight' value='0' />
  <enum name='NSBackgroundStyleLowered' value='3' />
  <enum name='NSBackgroundStyleRaised' value='2' />
  <enum name='NSBackgroundTab' value='1' />
  <enum name='NSBackingStoreBuffered' value='2' />
  <enum name='NSBackingStoreNonretained' value='1' />
  <enum name='NSBackingStoreRetained' value='0' />
  <enum name='NSBackspaceCharacter' value='8' />
  <enum name='NSBacktabTextMovement' value='18' />
  <enum name='NSBelowBottom' value='6' />
  <enum name='NSBelowTop' value='3' />
  <enum name='NSBevelLineJoinStyle' value='2' />
  <enum name='NSBezelBorder' value='2' />
  <enum name='NSBlueControlTint' value='1' />
  <enum name='NSBoldFontMask' value='2' />
  <enum name='NSBorderlessWindowMask' value='0' />
  <enum name='NSBottomTabsBezelBorder' value='2' />
  <enum name='NSBoxCustom' value='4' />
  <enum name='NSBoxOldStyle' value='3' />
  <enum name='NSBoxPrimary' value='0' />
  <enum name='NSBoxSecondary' value='1' />
  <enum name='NSBoxSeparator' value='2' />
  <enum name='NSBrowserAutoColumnResizing' value='1' />
  <enum name='NSBrowserDropAbove' value='1' />
  <enum name='NSBrowserDropOn' value='0' />
  <enum name='NSBrowserNoColumnResizing' value='0' />
  <enum name='NSBrowserUserColumnResizing' value='2' />
  <enum name='NSButtLineCapStyle' value='0' />
  <enum name='NSCMYKColorSpaceModel' value='2' />
  <enum name='NSCMYKModeColorPanel' value='2' />
  <enum name='NSCancelButton' value='0' />
  <enum name='NSCancelTextMovement' value='23' />
  <enum name='NSCarriageReturnCharacter' value='13' />
  <enum name='NSCellAllowsMixedState' value='16' />
  <enum name='NSCellChangesContents' value='14' />
  <enum name='NSCellDisabled' value='0' />
  <enum name='NSCellEditable' value='3' />
  <enum name='NSCellHasImageHorizontal' value='12' />
  <enum name='NSCellHasImageOnLeftOrBottom' value='13' />
  <enum name='NSCellHasOverlappingImage' value='11' />
  <enum name='NSCellHighlighted' value='5' />
  <enum name='NSCellHitContentArea' value='1' />
  <enum name='NSCellHitEditableTextArea' value='2' />
  <enum name='NSCellHitNone' value='0' />
  <enum name='NSCellHitTrackableArea' value='4' />
  <enum name='NSCellIsBordered' value='10' />
  <enum name='NSCellIsInsetButton' value='15' />
  <enum name='NSCellLightsByBackground' value='9' />
  <enum name='NSCellLightsByContents' value='6' />
  <enum name='NSCellLightsByGray' value='7' />
  <enum name='NSCellState' value='1' />
  <enum name='NSCenterTabStopType' value='2' />
  <enum name='NSCenterTextAlignment' value='2' />
  <enum name='NSChangeAutosaved' value='4' />
  <enum name='NSChangeBackgroundCell' value='8' />
  <enum name='NSChangeBackgroundCellMask' value='8' />
  <enum name='NSChangeCleared' value='2' />
  <enum name='NSChangeDone' value='0' />
  <enum name='NSChangeGrayCell' value='4' />
  <enum name='NSChangeGrayCellMask' value='4' />
  <enum name='NSChangeReadOtherContents' value='3' />
  <enum name='NSChangeRedone' value='5' />
  <enum name='NSChangeUndone' value='1' />
  <enum name='NSCircularBezelStyle' value='7' />
  <enum name='NSCircularSlider' value='1' />
  <enum name='NSClearControlTint' value='7' />
  <enum name='NSClipPagination' value='2' />
  <enum name='NSClockAndCalendarDatePickerStyle' value='1' />
  <enum name='NSClosableWindowMask' value='2' />
  <enum name='NSClosePathBezierPathElement' value='3' />
  <enum name='NSColorListModeColorPanel' value='5' />
  <enum name='NSColorPanelAllModesMask' value='65535' />
  <enum name='NSColorPanelCMYKModeMask' value='4' />
  <enum name='NSColorPanelColorListModeMask' value='32' />
  <enum name='NSColorPanelCrayonModeMask' value='128' />
  <enum name='NSColorPanelCustomPaletteModeMask' value='16' />
  <enum name='NSColorPanelGrayModeMask' value='1' />
  <enum name='NSColorPanelHSBModeMask' value='8' />
  <enum name='NSColorPanelRGBModeMask' value='2' />
  <enum name='NSColorPanelWheelModeMask' value='64' />
  <enum name='NSColorRenderingIntentAbsoluteColorimetric' value='1' />
  <enum name='NSColorRenderingIntentDefault' value='0' />
  <enum name='NSColorRenderingIntentPerceptual' value='3' />
  <enum name='NSColorRenderingIntentRelativeColorimetric' value='2' />
  <enum name='NSColorRenderingIntentSaturation' value='4' />
  <enum name='NSCommandKeyMask' value='1048576' />
  <enum name='NSCompositeClear' value='0' />
  <enum name='NSCompositeCopy' value='1' />
  <enum name='NSCompositeDestinationAtop' value='9' />
  <enum name='NSCompositeDestinationIn' value='7' />
  <enum name='NSCompositeDestinationOut' value='8' />
  <enum name='NSCompositeDestinationOver' value='6' />
  <enum name='NSCompositeHighlight' value='12' />
  <enum name='NSCompositePlusDarker' value='11' />
  <enum name='NSCompositePlusLighter' value='13' />
  <enum name='NSCompositeSourceAtop' value='5' />
  <enum name='NSCompositeSourceIn' value='3' />
  <enum name='NSCompositeSourceOut' value='4' />
  <enum name='NSCompositeSourceOver' value='2' />
  <enum name='NSCompositeXOR' value='10' />
  <enum name='NSCompressedFontMask' value='512' />
  <enum name='NSCondensedFontMask' value='64' />
  <enum name='NSContentsCellMask' value='1' />
  <enum name='NSContinuousCapacityLevelIndicatorStyle' value='1' />
  <enum name='NSControlGlyph' value='16777215' />
  <enum name='NSControlKeyMask' value='262144' />
  <enum name='NSCrayonModeColorPanel' value='7' />
  <enum name='NSCriticalAlertStyle' value='2' />
  <enum name='NSCriticalRequest' value='0' />
  <enum name='NSCursorPointingDevice' value='2' />
  <enum name='NSCursorUpdate' value='17' />
  <enum name='NSCursorUpdateMask' value='131072' />
  <enum name='NSCurveToBezierPathElement' value='2' />
  <enum name='NSCustomPaletteModeColorPanel' value='4' />
  <enum name='NSDecimalTabStopType' value='3' />
  <enum name='NSDefaultControlTint' value='0' />
  <enum name='NSDefaultTokenStyle' value='0' />
  <enum name='NSDeleteCharacter' value='127' />
  <enum name='NSDescendingPageOrder' value='-1' />
  <enum name='NSDeviceIndependentModifierFlagsMask' value='-65536' />
  <enum name='NSDeviceNColorSpaceModel' value='4' />
  <enum name='NSDirectSelection' value='0' />
  <enum name='NSDisclosureBezelStyle' value='5' />
  <enum name='NSDiscreteCapacityLevelIndicatorStyle' value='2' />
  <enum name='NSDisplayWindowRunLoopOrdering' value='600000' />
  <enum name='NSDocModalWindowMask' value='64' />
  <enum name='NSDockWindowLevel' value='20' />
  <enum name='NSDoubleType' value='6' />
  <enum name='NSDownTextMovement' value='22' />
  <enum name='NSDragOperationAll' value='15' />
  <enum name='NSDragOperationAll_Obsolete' value='15' />
  <enum name='NSDragOperationCopy' value='1' />
  <enum name='NSDragOperationDelete' value='32' />
  <enum name='NSDragOperationEvery' value='-1' />
  <enum name='NSDragOperationGeneric' value='4' />
  <enum name='NSDragOperationLink' value='2' />
  <enum name='NSDragOperationMove' value='16' />
  <enum name='NSDragOperationNone' value='0' />
  <enum name='NSDragOperationPrivate' value='8' />
  <enum name='NSDrawerClosedState' value='0' />
  <enum name='NSDrawerClosingState' value='3' />
  <enum name='NSDrawerOpenState' value='2' />
  <enum name='NSDrawerOpeningState' value='1' />
  <enum name='NSEnterCharacter' value='3' />
  <enum name='NSEraDatePickerElementFlag' value='256' />
  <enum name='NSEraserPointingDevice' value='3' />
  <enum name='NSEvenOddWindingRule' value='1' />
  <enum name='NSExclude10_4ElementsIconCreationOption' value='4' />
  <enum name='NSExcludeQuickDrawElementsIconCreationOption' value='2' />
  <enum name='NSExpandedFontMask' value='32' />
  <enum name='NSFPCurrentField' value='134' />
  <enum name='NSFPPreviewButton' value='131' />
  <enum name='NSFPPreviewField' value='128' />
  <enum name='NSFPRevertButton' value='130' />
  <enum name='NSFPSetButton' value='132' />
  <enum name='NSFPSizeField' value='129' />
  <enum name='NSFPSizeTitle' value='133' />
  <enum name='NSFileHandlingPanelCancelButton' value='0' />
  <enum name='NSFileHandlingPanelOKButton' value='1' />
  <enum name='NSFindPanelActionNext' value='2' />
  <enum name='NSFindPanelActionPrevious' value='3' />
  <enum name='NSFindPanelActionReplace' value='5' />
  <enum name='NSFindPanelActionReplaceAll' value='4' />
  <enum name='NSFindPanelActionReplaceAllInSelection' value='8' />
  <enum name='NSFindPanelActionReplaceAndFind' value='6' />
  <enum name='NSFindPanelActionSelectAll' value='9' />
  <enum name='NSFindPanelActionSelectAllInSelection' value='10' />
  <enum name='NSFindPanelActionSetFindString' value='7' />
  <enum name='NSFindPanelActionShowFindPanel' value='1' />
  <enum name='NSFindPanelSubstringMatchTypeContains' value='0' />
  <enum name='NSFindPanelSubstringMatchTypeEndsWith' value='3' />
  <enum name='NSFindPanelSubstringMatchTypeFullWord' value='2' />
  <enum name='NSFindPanelSubstringMatchTypeStartsWith' value='1' />
  <enum name='NSFitPagination' value='1' />
  <enum name='NSFixedPitchFontMask' value='1024' />
  <enum name='NSFlagsChanged' value='12' />
  <enum name='NSFlagsChangedMask' value='4096' />
  <enum name='NSFloatType' value='3' />
  <enum name='NSFloatingPointSamplesBitmapFormat' value='4' />
  <enum name='NSFloatingWindowLevel' value='3' />
  <enum name='NSFocusRingAbove' value='2' />
  <enum name='NSFocusRingBelow' value='1' />
  <enum name='NSFocusRingOnly' value='0' />
  <enum name='NSFocusRingTypeDefault' value='0' />
  <enum name='NSFocusRingTypeExterior' value='2' />
  <enum name='NSFocusRingTypeNone' value='1' />
  <enum name='NSFontAntialiasedIntegerAdvancementsRenderingMode' value='3' />
  <enum name='NSFontAntialiasedRenderingMode' value='1' />
  <enum name='NSFontBoldTrait' value='2' />
  <enum name='NSFontClarendonSerifsClass' value='1073741824' />
  <enum name='NSFontCollectionApplicationOnlyMask' value='1' />
  <enum name='NSFontCondensedTrait' value='64' />
  <enum name='NSFontDefaultRenderingMode' value='0' />
  <enum name='NSFontExpandedTrait' value='32' />
  <enum name='NSFontFamilyClassMask' value='-268435456' />
  <enum name='NSFontFreeformSerifsClass' value='1879048192' />
  <enum name='NSFontIntegerAdvancementsRenderingMode' value='2' />
  <enum name='NSFontItalicTrait' value='1' />
  <enum name='NSFontModernSerifsClass' value='805306368' />
  <enum name='NSFontMonoSpaceTrait' value='1024' />
  <enum name='NSFontOldStyleSerifsClass' value='268435456' />
  <enum name='NSFontOrnamentalsClass' value='-1879048192' />
  <enum name='NSFontPanelAllEffectsModeMask' value='1048320' />
  <enum name='NSFontPanelAllModesMask' value='-1' />
  <enum name='NSFontPanelCollectionModeMask' value='4' />
  <enum name='NSFontPanelDocumentColorEffectModeMask' value='2048' />
  <enum name='NSFontPanelFaceModeMask' value='1' />
  <enum name='NSFontPanelShadowEffectModeMask' value='4096' />
  <enum name='NSFontPanelSizeModeMask' value='2' />
  <enum name='NSFontPanelStandardModesMask' value='65535' />
  <enum name='NSFontPanelStrikethroughEffectModeMask' value='512' />
  <enum name='NSFontPanelTextColorEffectModeMask' value='1024' />
  <enum name='NSFontPanelUnderlineEffectModeMask' value='256' />
  <enum name='NSFontSansSerifClass' value='-2147483648' />
  <enum name='NSFontScriptsClass' value='-1610612736' />
  <enum name='NSFontSlabSerifsClass' value='1342177280' />
  <enum name='NSFontSymbolicClass' value='-1073741824' />
  <enum name='NSFontTransitionalSerifsClass' value='536870912' />
  <enum name='NSFontUIOptimizedTrait' value='4096' />
  <enum name='NSFontUnknownClass' value='0' />
  <enum name='NSFontVerticalTrait' value='2048' />
  <enum name='NSFormFeedCharacter' value='12' />
  <enum name='NSFunctionKeyMask' value='8388608' />
  <enum name='NSGIFFileType' value='2' />
  <enum name='NSGlyphAttributeBidiLevel' value='2' />
  <enum name='NSGlyphAttributeElastic' value='1' />
  <enum name='NSGlyphAttributeInscribe' value='5' />
  <enum name='NSGlyphAttributeSoft' value='0' />
  <enum name='NSGlyphInscribeAbove' value='2' />
  <enum name='NSGlyphInscribeBase' value='0' />
  <enum name='NSGlyphInscribeBelow' value='1' />
  <enum name='NSGlyphInscribeOverBelow' value='4' />
  <enum name='NSGlyphInscribeOverstrike' value='3' />
  <enum name='NSGradientConcaveStrong' value='2' />
  <enum name='NSGradientConcaveWeak' value='1' />
  <enum name='NSGradientConvexStrong' value='4' />
  <enum name='NSGradientConvexWeak' value='3' />
  <enum name='NSGradientDrawsAfterEndingLocation' value='2' />
  <enum name='NSGradientDrawsBeforeStartingLocation' value='1' />
  <enum name='NSGradientNone' value='0' />
  <enum name='NSGraphiteControlTint' value='6' />
  <enum name='NSGrayColorSpaceModel' value='0' />
  <enum name='NSGrayModeColorPanel' value='0' />
  <enum name='NSGrooveBorder' value='3' />
  <enum name='NSHSBModeColorPanel' value='3' />
  <enum name='NSHUDWindowMask' value='8192' />
  <enum name='NSHeavierFontAction' value='5' />
  <enum name='NSHelpButtonBezelStyle' value='9' />
  <enum name='NSHelpKeyMask' value='4194304' />
  <enum name='NSHighlightModeMatrix' value='1' />
  <enum name='NSHorizontalRuler' value='0' />
  <enum name='NSHourMinuteDatePickerElementFlag' value='12' />
  <enum name='NSHourMinuteSecondDatePickerElementFlag' value='14' />
  <enum name='NSIdentityMappingCharacterCollection' value='0' />
  <enum name='NSIllegalTextMovement' value='0' />
  <enum name='NSImageAbove' value='5' />
  <enum name='NSImageAlignBottom' value='5' />
  <enum name='NSImageAlignBottomLeft' value='6' />
  <enum name='NSImageAlignBottomRight' value='7' />
  <enum name='NSImageAlignCenter' value='0' />
  <enum name='NSImageAlignLeft' value='4' />
  <enum name='NSImageAlignRight' value='8' />
  <enum name='NSImageAlignTop' value='1' />
  <enum name='NSImageAlignTopLeft' value='2' />
  <enum name='NSImageAlignTopRight' value='3' />
  <enum name='NSImageBelow' value='4' />
  <enum name='NSImageCacheAlways' value='1' />
  <enum name='NSImageCacheBySize' value='2' />
  <enum name='NSImageCacheDefault' value='0' />
  <enum name='NSImageCacheNever' value='3' />
  <enum name='NSImageCellType' value='2' />
  <enum name='NSImageFrameButton' value='4' />
  <enum name='NSImageFrameGrayBezel' value='2' />
  <enum name='NSImageFrameGroove' value='3' />
  <enum name='NSImageFrameNone' value='0' />
  <enum name='NSImageFramePhoto' value='1' />
  <enum name='NSImageInterpolationDefault' value='0' />
  <enum name='NSImageInterpolationHigh' value='3' />
  <enum name='NSImageInterpolationLow' value='2' />
  <enum name='NSImageInterpolationNone' value='1' />
  <enum name='NSImageLeft' value='2' />
  <enum name='NSImageLoadStatusCancelled' value='1' />
  <enum name='NSImageLoadStatusCompleted' value='0' />
  <enum name='NSImageLoadStatusInvalidData' value='2' />
  <enum name='NSImageLoadStatusReadError' value='4' />
  <enum name='NSImageLoadStatusUnexpectedEOF' value='3' />
  <enum name='NSImageOnly' value='1' />
  <enum name='NSImageOverlaps' value='6' />
  <enum name='NSImageRepLoadStatusCompleted' value='-6' />
  <enum name='NSImageRepLoadStatusInvalidData' value='-4' />
  <enum name='NSImageRepLoadStatusReadingHeader' value='-2' />
  <enum name='NSImageRepLoadStatusUnexpectedEOF' value='-5' />
  <enum name='NSImageRepLoadStatusUnknownType' value='-1' />
  <enum name='NSImageRepLoadStatusWillNeedAllData' value='-3' />
  <enum name='NSImageRepMatchesDevice' value='0' />
  <enum name='NSImageRight' value='3' />
  <enum name='NSImageScaleAxesIndependently' value='1' />
  <enum name='NSImageScaleNone' value='2' />
  <enum name='NSImageScaleProportionallyDown' value='0' />
  <enum name='NSImageScaleProportionallyUpOrDown' value='3' />
  <enum name='NSIndexedColorSpaceModel' value='5' />
  <enum name='NSInformationalAlertStyle' value='1' />
  <enum name='NSInformationalRequest' value='10' />
  <enum name='NSIntType' value='1' />
  <enum name='NSItalicFontMask' value='1' />
  <enum name='NSJPEG2000FileType' value='5' />
  <enum name='NSJPEGFileType' value='3' />
  <enum name='NSJustifiedTextAlignment' value='3' />
  <enum name='NSKeyDown' value='10' />
  <enum name='NSKeyDownMask' value='1024' />
  <enum name='NSKeyUp' value='11' />
  <enum name='NSKeyUpMask' value='2048' />
  <enum name='NSLABColorSpaceModel' value='3' />
  <enum name='NSLandscapeOrientation' value='1' />
  <enum name='NSLeftMouseDown' value='1' />
  <enum name='NSLeftMouseDownMask' value='2' />
  <enum name='NSLeftMouseDragged' value='6' />
  <enum name='NSLeftMouseDraggedMask' value='64' />
  <enum name='NSLeftMouseUp' value='2' />
  <enum name='NSLeftMouseUpMask' value='4' />
  <enum name='NSLeftTabStopType' value='0' />
  <enum name='NSLeftTabsBezelBorder' value='1' />
  <enum name='NSLeftTextAlignment' value='0' />
  <enum name='NSLeftTextMovement' value='19' />
  <enum name='NSLighterFontAction' value='6' />
  <enum name='NSLineBorder' value='1' />
  <enum name='NSLineBreakByCharWrapping' value='1' />
  <enum name='NSLineBreakByClipping' value='2' />
  <enum name='NSLineBreakByTruncatingHead' value='3' />
  <enum name='NSLineBreakByTruncatingMiddle' value='5' />
  <enum name='NSLineBreakByTruncatingTail' value='4' />
  <enum name='NSLineBreakByWordWrapping' value='0' />
  <enum name='NSLineDoesntMove' value='0' />
  <enum name='NSLineMovesDown' value='3' />
  <enum name='NSLineMovesLeft' value='1' />
  <enum name='NSLineMovesRight' value='2' />
  <enum name='NSLineMovesUp' value='4' />
  <enum name='NSLineSeparatorCharacter' value='8232' />
  <enum name='NSLineSweepDown' value='2' />
  <enum name='NSLineSweepLeft' value='0' />
  <enum name='NSLineSweepRight' value='1' />
  <enum name='NSLineSweepUp' value='3' />
  <enum name='NSLineToBezierPathElement' value='1' />
  <enum name='NSLinearSlider' value='0' />
  <enum name='NSListModeMatrix' value='2' />
  <enum name='NSMacintoshInterfaceStyle' value='3' />
  <enum name='NSMainMenuWindowLevel' value='24' />
  <enum name='NSMiniControlSize' value='2' />
  <enum name='NSMiniaturizableWindowMask' value='4' />
  <enum name='NSMiterLineJoinStyle' value='0' />
  <enum name='NSMixedState' value='-1' />
  <enum name='NSModalPanelWindowLevel' value='8' />
  <enum name='NSMomentaryChangeButton' value='5' />
  <enum name='NSMomentaryLight' value='7' />
  <enum name='NSMomentaryLightButton' value='0' />
  <enum name='NSMomentaryPushButton' value='0' />
  <enum name='NSMomentaryPushInButton' value='7' />
  <enum name='NSMouseEntered' value='8' />
  <enum name='NSMouseEnteredMask' value='256' />
  <enum name='NSMouseEventSubtype' value='0' />
  <enum name='NSMouseExited' value='9' />
  <enum name='NSMouseExitedMask' value='512' />
  <enum name='NSMouseMoved' value='5' />
  <enum name='NSMouseMovedMask' value='32' />
  <enum name='NSMoveToBezierPathElement' value='0' />
  <enum name='NSNarrowFontMask' value='16' />
  <enum name='NSNativeShortGlyphPacking' value='5' />
  <enum name='NSNaturalTextAlignment' value='4' />
  <enum name='NSNewlineCharacter' value='10' />
  <enum name='NSNextStepInterfaceStyle' value='1' />
  <enum name='NSNoBorder' value='0' />
  <enum name='NSNoCellMask' value='0' />
  <enum name='NSNoFontChangeAction' value='0' />
  <enum name='NSNoImage' value='0' />
  <enum name='NSNoInterfaceStyle' value='0' />
  <enum name='NSNoModeColorPanel' value='-1' />
  <enum name='NSNoScrollerParts' value='0' />
  <enum name='NSNoTabsBezelBorder' value='4' />
  <enum name='NSNoTabsLineBorder' value='5' />
  <enum name='NSNoTabsNoBorder' value='6' />
  <enum name='NSNoTitle' value='0' />
  <enum name='NSNoUnderlineStyle' value='0' />
  <enum name='NSNonStandardCharacterSetFontMask' value='8' />
  <enum name='NSNonZeroWindingRule' value='0' />
  <enum name='NSNonactivatingPanelMask' value='128' />
  <enum name='NSNormalWindowLevel' value='0' />
  <enum name='NSNullCellType' value='0' />
  <enum name='NSNullGlyph' value='0' />
  <enum name='NSNumericPadKeyMask' value='2097152' />
  <enum name='NSOKButton' value='1' />
  <enum name='NSOPENGL_CURRENT_VERSION' value='1' />
  <enum name='NSOffState' value='0' />
  <enum name='NSOnOffButton' value='6' />
  <enum name='NSOnState' value='1' />
  <enum name='NSOnlyScrollerArrows' value='1' />
  <enum name='NSOpenGLCPRasterizationEnable' value='221' />
  <enum name='NSOpenGLCPStateValidation' value='301' />
  <enum name='NSOpenGLCPSurfaceOpacity' value='236' />
  <enum name='NSOpenGLCPSurfaceOrder' value='235' />
  <enum name='NSOpenGLCPSwapInterval' value='222' />
  <enum name='NSOpenGLCPSwapRectangle' value='200' />
  <enum name='NSOpenGLCPSwapRectangleEnable' value='201' />
  <enum name='NSOpenGLGOClearFormatCache' value='502' />
  <enum name='NSOpenGLGOFormatCacheSize' value='501' />
  <enum name='NSOpenGLGOResetLibrary' value='504' />
  <enum name='NSOpenGLGORetainRenderers' value='503' />
  <enum name='NSOpenGLPFAAccelerated' value='73' />
  <enum name='NSOpenGLPFAAccumSize' value='14' />
  <enum name='NSOpenGLPFAAllRenderers' value='1' />
  <enum name='NSOpenGLPFAAllowOfflineRenderers' value='96' />
  <enum name='NSOpenGLPFAAlphaSize' value='11' />
  <enum name='NSOpenGLPFAAuxBuffers' value='7' />
  <enum name='NSOpenGLPFAAuxDepthStencil' value='57' />
  <enum name='NSOpenGLPFABackingStore' value='76' />
  <enum name='NSOpenGLPFAClosestPolicy' value='74' />
  <enum name='NSOpenGLPFAColorFloat' value='58' />
  <enum name='NSOpenGLPFAColorSize' value='8' />
  <enum name='NSOpenGLPFACompliant' value='83' />
  <enum name='NSOpenGLPFADepthSize' value='12' />
  <enum name='NSOpenGLPFADoubleBuffer' value='5' />
  <enum name='NSOpenGLPFAFullScreen' value='54' />
  <enum name='NSOpenGLPFAMPSafe' value='78' />
  <enum name='NSOpenGLPFAMaximumPolicy' value='52' />
  <enum name='NSOpenGLPFAMinimumPolicy' value='51' />
  <enum name='NSOpenGLPFAMultiScreen' value='81' />
  <enum name='NSOpenGLPFAMultisample' value='59' />
  <enum name='NSOpenGLPFANoRecovery' value='72' />
  <enum name='NSOpenGLPFAOffScreen' value='53' />
  <enum name='NSOpenGLPFAPixelBuffer' value='90' />
  <enum name='NSOpenGLPFARendererID' value='70' />
  <enum name='NSOpenGLPFARobust' value='75' />
  <enum name='NSOpenGLPFASampleAlpha' value='61' />
  <enum name='NSOpenGLPFASampleBuffers' value='55' />
  <enum name='NSOpenGLPFASamples' value='56' />
  <enum name='NSOpenGLPFAScreenMask' value='84' />
  <enum name='NSOpenGLPFASingleRenderer' value='71' />
  <enum name='NSOpenGLPFAStencilSize' value='13' />
  <enum name='NSOpenGLPFAStereo' value='6' />
  <enum name='NSOpenGLPFASupersample' value='60' />
  <enum name='NSOpenGLPFAVirtualScreenCount' value='128' />
  <enum name='NSOpenGLPFAWindow' value='80' />
  <enum name='NSOtherMouseDown' value='25' />
  <enum name='NSOtherMouseDownMask' value='33554432' />
  <enum name='NSOtherMouseDragged' value='27' />
  <enum name='NSOtherMouseDraggedMask' value='134217728' />
  <enum name='NSOtherMouseUp' value='26' />
  <enum name='NSOtherMouseUpMask' value='67108864' />
  <enum name='NSOtherTextMovement' value='0' />
  <enum name='NSOutlineViewDropOnItemIndex' value='-1' />
  <enum name='NSPNGFileType' value='4' />
  <enum name='NSParagraphSeparatorCharacter' value='8233' />
  <enum name='NSPathStyleNavigationBar' value='1' />
  <enum name='NSPathStylePopUp' value='2' />
  <enum name='NSPathStyleStandard' value='0' />
  <enum name='NSPatternColorSpaceModel' value='6' />
  <enum name='NSPenLowerSideMask' value='2' />
  <enum name='NSPenPointingDevice' value='1' />
  <enum name='NSPenTipMask' value='1' />
  <enum name='NSPenUpperSideMask' value='4' />
  <enum name='NSPeriodic' value='16' />
  <enum name='NSPeriodicMask' value='65536' />
  <enum name='NSPlainTextTokenStyle' value='1' />
  <enum name='NSPopUpArrowAtBottom' value='2' />
  <enum name='NSPopUpArrowAtCenter' value='1' />
  <enum name='NSPopUpMenuWindowLevel' value='101' />
  <enum name='NSPopUpNoArrow' value='0' />
  <enum name='NSPortraitOrientation' value='0' />
  <enum name='NSPositiveDoubleType' value='7' />
  <enum name='NSPositiveFloatType' value='4' />
  <enum name='NSPositiveIntType' value='2' />
  <enum name='NSPosterFontMask' value='256' />
  <enum name='NSPowerOffEventType' value='1' />
  <enum name='NSPressedTab' value='2' />
  <enum name='NSPrintPanelShowsCopies' value='1' />
  <enum name='NSPrintPanelShowsOrientation' value='8' />
  <enum name='NSPrintPanelShowsPageRange' value='2' />
  <enum name='NSPrintPanelShowsPageSetupAccessory' value='256' />
  <enum name='NSPrintPanelShowsPaperSize' value='4' />
  <enum name='NSPrintPanelShowsPreview' value='131072' />
  <enum name='NSPrintPanelShowsScaling' value='16' />
  <enum name='NSPrinterTableError' value='2' />
  <enum name='NSPrinterTableNotFound' value='1' />
  <enum name='NSPrinterTableOK' value='0' />
  <enum name='NSPrintingCancelled' value='0' />
  <enum name='NSPrintingFailure' value='3' />
  <enum name='NSPrintingReplyLater' value='2' />
  <enum name='NSPrintingSuccess' value='1' />
  <enum name='NSProgressIndicatorBarStyle' value='0' />
  <enum name='NSProgressIndicatorPreferredAquaThickness' value='12' />
  <enum name='NSProgressIndicatorPreferredLargeThickness' value='18' />
  <enum name='NSProgressIndicatorPreferredSmallThickness' value='10' />
  <enum name='NSProgressIndicatorPreferredThickness' value='14' />
  <enum name='NSProgressIndicatorSpinningStyle' value='1' />
  <enum name='NSPushInCell' value='2' />
  <enum name='NSPushInCellMask' value='2' />
  <enum name='NSPushOnPushOffButton' value='1' />
  <enum name='NSQTMovieLoopingBackAndForthPlayback' value='2' />
  <enum name='NSQTMovieLoopingPlayback' value='1' />
  <enum name='NSQTMovieNormalPlayback' value='0' />
  <enum name='NSRGBColorSpaceModel' value='1' />
  <enum name='NSRGBModeColorPanel' value='1' />
  <enum name='NSRadioButton' value='4' />
  <enum name='NSRadioModeMatrix' value='0' />
  <enum name='NSRangeDateMode' value='1' />
  <enum name='NSRatingLevelIndicatorStyle' value='3' />
  <enum name='NSRecessedBezelStyle' value='13' />
  <enum name='NSRegularControlSize' value='0' />
  <enum name='NSRegularSquareBezelStyle' value='2' />
  <enum name='NSRelevancyLevelIndicatorStyle' value='0' />
  <enum name='NSRemoveTraitFontAction' value='7' />
  <enum name='NSResetCursorRectsRunLoopOrdering' value='700000' />
  <enum name='NSResizableWindowMask' value='8' />
  <enum name='NSReturnTextMovement' value='16' />
  <enum name='NSRightMouseDown' value='3' />
  <enum name='NSRightMouseDownMask' value='8' />
  <enum name='NSRightMouseDragged' value='7' />
  <enum name='NSRightMouseDraggedMask' value='128' />
  <enum name='NSRightMouseUp' value='4' />
  <enum name='NSRightMouseUpMask' value='16' />
  <enum name='NSRightTabStopType' value='1' />
  <enum name='NSRightTabsBezelBorder' value='3' />
  <enum name='NSRightTextAlignment' value='1' />
  <enum name='NSRightTextMovement' value='20' />
  <enum name='NSRoundLineCapStyle' value='1' />
  <enum name='NSRoundLineJoinStyle' value='1' />
  <enum name='NSRoundRectBezelStyle' value='12' />
  <enum name='NSRoundedBezelStyle' value='1' />
  <enum name='NSRoundedDisclosureBezelStyle' value='14' />
  <enum name='NSRoundedTokenStyle' value='2' />
  <enum name='NSRuleEditorNestingModeCompound' value='2' />
  <enum name='NSRuleEditorNestingModeList' value='1' />
  <enum name='NSRuleEditorNestingModeSimple' value='3' />
  <enum name='NSRuleEditorNestingModeSingle' value='0' />
  <enum name='NSRuleEditorRowTypeCompound' value='1' />
  <enum name='NSRuleEditorRowTypeSimple' value='0' />
  <enum name='NSRunAbortedResponse' value='-1001' />
  <enum name='NSRunContinuesResponse' value='-1002' />
  <enum name='NSRunStoppedResponse' value='-1000' />
  <enum name='NSSaveAsOperation' value='1' />
  <enum name='NSSaveOperation' value='0' />
  <enum name='NSSaveToOperation' value='2' />
  <enum name='NSScaleNone' value='2' />
  <enum name='NSScaleProportionally' value='0' />
  <enum name='NSScaleToFit' value='1' />
  <enum name='NSScreenChangedEventType' value='8' />
  <enum name='NSScreenSaverWindowLevel' value='1000' />
  <enum name='NSScrollWheel' value='22' />
  <enum name='NSScrollWheelMask' value='4194304' />
  <enum name='NSScrollerArrowsDefaultSetting' value='0' />
  <enum name='NSScrollerArrowsMaxEnd' value='0' />
  <enum name='NSScrollerArrowsMinEnd' value='1' />
  <enum name='NSScrollerArrowsNone' value='2' />
  <enum name='NSScrollerDecrementArrow' value='1' />
  <enum name='NSScrollerDecrementLine' value='4' />
  <enum name='NSScrollerDecrementPage' value='1' />
  <enum name='NSScrollerIncrementArrow' value='0' />
  <enum name='NSScrollerIncrementLine' value='5' />
  <enum name='NSScrollerIncrementPage' value='3' />
  <enum name='NSScrollerKnob' value='2' />
  <enum name='NSScrollerKnobSlot' value='6' />
  <enum name='NSScrollerNoPart' value='0' />
  <enum name='NSSearchFieldClearRecentsMenuItemTag' value='1002' />
  <enum name='NSSearchFieldNoRecentsMenuItemTag' value='1003' />
  <enum name='NSSearchFieldRecentsMenuItemTag' value='1001' />
  <enum name='NSSearchFieldRecentsTitleMenuItemTag' value='1000' />
  <enum name='NSSegmentStyleAutomatic' value='0' />
  <enum name='NSSegmentStyleCapsule' value='5' />
  <enum name='NSSegmentStyleRoundRect' value='3' />
  <enum name='NSSegmentStyleRounded' value='1' />
  <enum name='NSSegmentStyleSmallSquare' value='6' />
  <enum name='NSSegmentStyleTexturedRounded' value='2' />
  <enum name='NSSegmentStyleTexturedSquare' value='4' />
  <enum name='NSSegmentSwitchTrackingMomentary' value='2' />
  <enum name='NSSegmentSwitchTrackingSelectAny' value='1' />
  <enum name='NSSegmentSwitchTrackingSelectOne' value='0' />
  <enum name='NSSelectByCharacter' value='0' />
  <enum name='NSSelectByParagraph' value='2' />
  <enum name='NSSelectByWord' value='1' />
  <enum name='NSSelectedTab' value='0' />
  <enum name='NSSelectingNext' value='1' />
  <enum name='NSSelectingPrevious' value='2' />
  <enum name='NSSelectionAffinityDownstream' value='1' />
  <enum name='NSSelectionAffinityUpstream' value='0' />
  <enum name='NSServiceApplicationLaunchFailedError' value='66561' />
  <enum name='NSServiceApplicationNotFoundError' value='66560' />
  <enum name='NSServiceErrorMaximum' value='66817' />
  <enum name='NSServiceErrorMinimum' value='66560' />
  <enum name='NSServiceInvalidPasteboardDataError' value='66563' />
  <enum name='NSServiceMalformedServiceDictionaryError' value='66564' />
  <enum name='NSServiceMiscellaneousError' value='66800' />
  <enum name='NSServiceRequestTimedOutError' value='66562' />
  <enum name='NSShadowlessSquareBezelStyle' value='6' />
  <enum name='NSShiftKeyMask' value='131072' />
  <enum name='NSShowControlGlyphs' value='1' />
  <enum name='NSShowInvisibleGlyphs' value='2' />
  <enum name='NSSingleDateMode' value='0' />
  <enum name='NSSingleUnderlineStyle' value='1' />
  <enum name='NSSizeDownFontAction' value='4' />
  <enum name='NSSizeUpFontAction' value='3' />
  <enum name='NSSmallCapsFontMask' value='128' />
  <enum name='NSSmallControlSize' value='1' />
  <enum name='NSSmallIconButtonBezelStyle' value='2' />
  <enum name='NSSmallSquareBezelStyle' value='10' />
  <enum name='NSSpecialPageOrder' value='0' />
  <enum name='NSSpeechImmediateBoundary' value='0' />
  <enum name='NSSpeechSentenceBoundary' value='2' />
  <enum name='NSSpeechWordBoundary' value='1' />
  <enum name='NSSpellingStateGrammarFlag' value='2' />
  <enum name='NSSpellingStateSpellingFlag' value='1' />
  <enum name='NSSplitViewDividerStyleThick' value='1' />
  <enum name='NSSplitViewDividerStyleThin' value='2' />
  <enum name='NSSquareLineCapStyle' value='2' />
  <enum name='NSSquareStatusItemLength' value='-2' />
  <enum name='NSStatusWindowLevel' value='25' />
  <enum name='NSStringDrawingDisableScreenFontSubstitution' value='4' />
  <enum name='NSStringDrawingOneShot' value='16' />
  <enum name='NSStringDrawingTruncatesLastVisibleLine' value='32' />
  <enum name='NSStringDrawingUsesDeviceMetrics' value='8' />
  <enum name='NSStringDrawingUsesFontLeading' value='2' />
  <enum name='NSStringDrawingUsesLineFragmentOrigin' value='1' />
  <enum name='NSSubmenuWindowLevel' value='3' />
  <enum name='NSSwitchButton' value='3' />
  <enum name='NSSystemDefined' value='14' />
  <enum name='NSSystemDefinedMask' value='16384' />
  <enum name='NSTIFFCompressionCCITTFAX3' value='3' />
  <enum name='NSTIFFCompressionCCITTFAX4' value='4' />
  <enum name='NSTIFFCompressionJPEG' value='6' />
  <enum name='NSTIFFCompressionLZW' value='5' />
  <enum name='NSTIFFCompressionNEXT' value='32766' />
  <enum name='NSTIFFCompressionNone' value='1' />
  <enum name='NSTIFFCompressionOldJPEG' value='32865' />
  <enum name='NSTIFFCompressionPackBits' value='32773' />
  <enum name='NSTIFFFileType' value='0' />
  <enum name='NSTabCharacter' value='9' />
  <enum name='NSTabTextMovement' value='17' />
  <enum name='NSTableColumnAutoresizingMask' value='1' />
  <enum name='NSTableColumnNoResizing' value='0' />
  <enum name='NSTableColumnUserResizingMask' value='2' />
  <enum name='NSTableViewDropAbove' value='1' />
  <enum name='NSTableViewDropOn' value='0' />
  <enum name='NSTableViewFirstColumnOnlyAutoresizingStyle' value='5' />
  <enum name='NSTableViewGridNone' value='0' />
  <enum name='NSTableViewLastColumnOnlyAutoresizingStyle' value='4' />
  <enum name='NSTableViewNoColumnAutoresizing' value='0' />
  <enum name='NSTableViewReverseSequentialColumnAutoresizingStyle' value='3' />
  <enum name='NSTableViewSelectionHighlightStyleRegular' value='0' />
  <enum name='NSTableViewSelectionHighlightStyleSourceList' value='1' />
  <enum name='NSTableViewSequentialColumnAutoresizingStyle' value='2' />
  <enum name='NSTableViewSolidHorizontalGridLineMask' value='2' />
  <enum name='NSTableViewSolidVerticalGridLineMask' value='1' />
  <enum name='NSTableViewUniformColumnAutoresizingStyle' value='1' />
  <enum name='NSTabletPoint' value='23' />
  <enum name='NSTabletPointEventSubtype' value='1' />
  <enum name='NSTabletPointMask' value='8388608' />
  <enum name='NSTabletProximity' value='24' />
  <enum name='NSTabletProximityEventSubtype' value='2' />
  <enum name='NSTabletProximityMask' value='16777216' />
  <enum name='NSTerminateCancel' value='0' />
  <enum name='NSTerminateLater' value='2' />
  <enum name='NSTerminateNow' value='1' />
  <enum name='NSTextBlockAbsoluteValueType' value='0' />
  <enum name='NSTextBlockBaselineAlignment' value='3' />
  <enum name='NSTextBlockBorder' value='0' />
  <enum name='NSTextBlockBottomAlignment' value='2' />
  <enum name='NSTextBlockHeight' value='4' />
  <enum name='NSTextBlockMargin' value='1' />
  <enum name='NSTextBlockMaximumHeight' value='6' />
  <enum name='NSTextBlockMaximumWidth' value='2' />
  <enum name='NSTextBlockMiddleAlignment' value='1' />
  <enum name='NSTextBlockMinimumHeight' value='5' />
  <enum name='NSTextBlockMinimumWidth' value='1' />
  <enum name='NSTextBlockPadding' value='-1' />
  <enum name='NSTextBlockPercentageValueType' value='1' />
  <enum name='NSTextBlockTopAlignment' value='0' />
  <enum name='NSTextBlockWidth' value='0' />
  <enum name='NSTextCellType' value='1' />
  <enum name='NSTextFieldAndStepperDatePickerStyle' value='0' />
  <enum name='NSTextFieldDatePickerStyle' value='2' />
  <enum name='NSTextFieldRoundedBezel' value='1' />
  <enum name='NSTextFieldSquareBezel' value='0' />
  <enum name='NSTextListPrependEnclosingMarker' value='1' />
  <enum name='NSTextReadInapplicableDocumentTypeError' value='65806' />
  <enum name='NSTextReadWriteErrorMaximum' value='66303' />
  <enum name='NSTextReadWriteErrorMinimum' value='65792' />
  <enum name='NSTextStorageEditedAttributes' value='1' />
  <enum name='NSTextStorageEditedCharacters' value='2' />
  <enum name='NSTextTableAutomaticLayoutAlgorithm' value='0' />
  <enum name='NSTextTableFixedLayoutAlgorithm' value='1' />
  <enum name='NSTextWriteInapplicableDocumentTypeError' value='66062' />
  <enum name='NSTexturedBackgroundWindowMask' value='256' />
  <enum name='NSTexturedRoundedBezelStyle' value='11' />
  <enum name='NSTexturedSquareBezelStyle' value='8' />
  <enum name='NSThickSquareBezelStyle' value='3' />
  <enum name='NSThickerSquareBezelStyle' value='4' />
  <enum name='NSTickMarkAbove' value='1' />
  <enum name='NSTickMarkBelow' value='0' />
  <enum name='NSTickMarkLeft' value='1' />
  <enum name='NSTickMarkRight' value='0' />
  <enum name='NSTimeZoneDatePickerElementFlag' value='16' />
  <enum name='NSTitledWindowMask' value='1' />
  <enum name='NSToggleButton' value='2' />
  <enum name='NSToolbarDisplayModeDefault' value='0' />
  <enum name='NSToolbarDisplayModeIconAndLabel' value='1' />
  <enum name='NSToolbarDisplayModeIconOnly' value='2' />
  <enum name='NSToolbarDisplayModeLabelOnly' value='3' />
  <enum name='NSToolbarItemVisibilityPriorityHigh' value='1000' />
  <enum name='NSToolbarItemVisibilityPriorityLow' value='-1000' />
  <enum name='NSToolbarItemVisibilityPriorityStandard' value='0' />
  <enum name='NSToolbarItemVisibilityPriorityUser' value='2000' />
  <enum name='NSToolbarSizeModeDefault' value='0' />
  <enum name='NSToolbarSizeModeRegular' value='1' />
  <enum name='NSToolbarSizeModeSmall' value='2' />
  <enum name='NSTopTabsBezelBorder' value='0' />
  <enum name='NSTornOffMenuWindowLevel' value='3' />
  <enum name='NSTrackModeMatrix' value='3' />
  <enum name='NSTrackingActiveAlways' value='128' />
  <enum name='NSTrackingActiveInActiveApp' value='64' />
  <enum name='NSTrackingActiveInKeyWindow' value='32' />
  <enum name='NSTrackingActiveWhenFirstResponder' value='16' />
  <enum name='NSTrackingAssumeInside' value='256' />
  <enum name='NSTrackingCursorUpdate' value='4' />
  <enum name='NSTrackingEnabledDuringMouseDrag' value='1024' />
  <enum name='NSTrackingInVisibleRect' value='512' />
  <enum name='NSTrackingMouseEnteredAndExited' value='1' />
  <enum name='NSTrackingMouseMoved' value='2' />
  <enum name='NSTypesetterBehavior_10_2' value='2' />
  <enum name='NSTypesetterBehavior_10_2_WithCompatibility' value='1' />
  <enum name='NSTypesetterBehavior_10_3' value='3' />
  <enum name='NSTypesetterBehavior_10_4' value='4' />
  <enum name='NSTypesetterContainerBreakAction' value='32' />
  <enum name='NSTypesetterHorizontalTabAction' value='4' />
  <enum name='NSTypesetterLatestBehavior' value='-1' />
  <enum name='NSTypesetterLineBreakAction' value='8' />
  <enum name='NSTypesetterOriginalBehavior' value='0' />
  <enum name='NSTypesetterParagraphBreakAction' value='16' />
  <enum name='NSTypesetterWhitespaceAction' value='2' />
  <enum name='NSTypesetterZeroAdvancementAction' value='1' />
  <enum name='NSUnboldFontMask' value='4' />
  <enum name='NSUnderlinePatternDash' value='512' />
  <enum name='NSUnderlinePatternDashDot' value='768' />
  <enum name='NSUnderlinePatternDashDotDot' value='1024' />
  <enum name='NSUnderlinePatternDot' value='256' />
  <enum name='NSUnderlinePatternSolid' value='0' />
  <enum name='NSUnderlineStyleDouble' value='9' />
  <enum name='NSUnderlineStyleNone' value='0' />
  <enum name='NSUnderlineStyleSingle' value='1' />
  <enum name='NSUnderlineStyleThick' value='2' />
  <enum name='NSUnifiedTitleAndToolbarWindowMask' value='4096' />
  <enum name='NSUnitalicFontMask' value='16777216' />
  <enum name='NSUnknownColorSpaceModel' value='-1' />
  <enum name='NSUnknownPageOrder' value='2' />
  <enum name='NSUnknownPointingDevice' value='0' />
  <enum name='NSUnscaledWindowMask' value='2048' />
  <enum name='NSUpTextMovement' value='21' />
  <enum name='NSUpdateWindowsRunLoopOrdering' value='500000' />
  <enum name='NSUtilityWindowMask' value='16' />
  <enum name='NSVariableStatusItemLength' value='-1' />
  <enum name='NSVerticalRuler' value='1' />
  <enum name='NSViaPanelFontAction' value='1' />
  <enum name='NSViewHeightSizable' value='16' />
  <enum name='NSViewMaxXMargin' value='4' />
  <enum name='NSViewMaxYMargin' value='32' />
  <enum name='NSViewMinXMargin' value='1' />
  <enum name='NSViewMinYMargin' value='8' />
  <enum name='NSViewNotSizable' value='0' />
  <enum name='NSViewWidthSizable' value='2' />
  <enum name='NSWantsBidiLevels' value='4' />
  <enum name='NSWarningAlertStyle' value='0' />
  <enum name='NSWheelModeColorPanel' value='6' />
  <enum name='NSWindowAbove' value='1' />
  <enum name='NSWindowBackingLocationDefault' value='0' />
  <enum name='NSWindowBackingLocationMainMemory' value='2' />
  <enum name='NSWindowBackingLocationVideoMemory' value='1' />
  <enum name='NSWindowBelow' value='-1' />
  <enum name='NSWindowCloseButton' value='0' />
  <enum name='NSWindowCollectionBehaviorCanJoinAllSpaces' value='1' />
  <enum name='NSWindowCollectionBehaviorDefault' value='0' />
  <enum name='NSWindowCollectionBehaviorMoveToActiveSpace' value='2' />
  <enum name='NSWindowDocumentIconButton' value='4' />
  <enum name='NSWindowExposedEventType' value='0' />
  <enum name='NSWindowMiniaturizeButton' value='1' />
  <enum name='NSWindowMovedEventType' value='4' />
  <enum name='NSWindowOut' value='0' />
  <enum name='NSWindowSharingNone' value='0' />
  <enum name='NSWindowSharingReadOnly' value='1' />
  <enum name='NSWindowSharingReadWrite' value='2' />
  <enum name='NSWindowToolbarButton' value='3' />
  <enum name='NSWindowZoomButton' value='2' />
  <enum name='NSWindows95InterfaceStyle' value='2' />
  <enum name='NSWorkspaceLaunchAllowingClassicStartup' value='131072' />
  <enum name='NSWorkspaceLaunchAndHide' value='1048576' />
  <enum name='NSWorkspaceLaunchAndHideOthers' value='2097152' />
  <enum name='NSWorkspaceLaunchAndPrint' value='2' />
  <enum name='NSWorkspaceLaunchAsync' value='65536' />
  <enum name='NSWorkspaceLaunchDefault' value='196608' />
  <enum name='NSWorkspaceLaunchInhibitingBackgroundOnly' value='128' />
  <enum name='NSWorkspaceLaunchNewInstance' value='524288' />
  <enum name='NSWorkspaceLaunchPreferringClassic' value='262144' />
  <enum name='NSWorkspaceLaunchWithoutActivation' value='512' />
  <enum name='NSWorkspaceLaunchWithoutAddingToRecents' value='256' />
  <enum name='NSWritingDirectionLeftToRight' value='0' />
  <enum name='NSWritingDirectionNatural' value='-1' />
  <enum name='NSWritingDirectionRightToLeft' value='1' />
  <enum name='NSYearMonthDatePickerElementFlag' value='192' />
  <enum name='NSYearMonthDayDatePickerElementFlag' value='224' />
  <string_constant name='NSBeginFunctionKey' nsstring='true' value='&#63274;' />
  <string_constant name='NSBreakFunctionKey' nsstring='true' value='&#63282;' />
  <string_constant name='NSClearDisplayFunctionKey' nsstring='true' value='&#63290;' />
  <string_constant name='NSClearLineFunctionKey' nsstring='true' value='&#63289;' />
  <string_constant name='NSDeleteCharFunctionKey' nsstring='true' value='&#63294;' />
  <string_constant name='NSDeleteFunctionKey' nsstring='true' value='&#63272;' />
  <string_constant name='NSDeleteLineFunctionKey' nsstring='true' value='&#63292;' />
  <string_constant name='NSDownArrowFunctionKey' nsstring='true' value='&#63233;' />
  <string_constant name='NSEndFunctionKey' nsstring='true' value='&#63275;' />
  <string_constant name='NSExecuteFunctionKey' nsstring='true' value='&#63298;' />
  <string_constant name='NSF10FunctionKey' nsstring='true' value='&#63245;' />
  <string_constant name='NSF11FunctionKey' nsstring='true' value='&#63246;' />
  <string_constant name='NSF12FunctionKey' nsstring='true' value='&#63247;' />
  <string_constant name='NSF13FunctionKey' nsstring='true' value='&#63248;' />
  <string_constant name='NSF14FunctionKey' nsstring='true' value='&#63249;' />
  <string_constant name='NSF15FunctionKey' nsstring='true' value='&#63250;' />
  <string_constant name='NSF16FunctionKey' nsstring='true' value='&#63251;' />
  <string_constant name='NSF17FunctionKey' nsstring='true' value='&#63252;' />
  <string_constant name='NSF18FunctionKey' nsstring='true' value='&#63253;' />
  <string_constant name='NSF19FunctionKey' nsstring='true' value='&#63254;' />
  <string_constant name='NSF1FunctionKey' nsstring='true' value='&#63236;' />
  <string_constant name='NSF20FunctionKey' nsstring='true' value='&#63255;' />
  <string_constant name='NSF21FunctionKey' nsstring='true' value='&#63256;' />
  <string_constant name='NSF22FunctionKey' nsstring='true' value='&#63257;' />
  <string_constant name='NSF23FunctionKey' nsstring='true' value='&#63258;' />
  <string_constant name='NSF24FunctionKey' nsstring='true' value='&#63259;' />
  <string_constant name='NSF25FunctionKey' nsstring='true' value='&#63260;' />
  <string_constant name='NSF26FunctionKey' nsstring='true' value='&#63261;' />
  <string_constant name='NSF27FunctionKey' nsstring='true' value='&#63262;' />
  <string_constant name='NSF28FunctionKey' nsstring='true' value='&#63263;' />
  <string_constant name='NSF29FunctionKey' nsstring='true' value='&#63264;' />
  <string_constant name='NSF2FunctionKey' nsstring='true' value='&#63237;' />
  <string_constant name='NSF30FunctionKey' nsstring='true' value='&#63265;' />
  <string_constant name='NSF31FunctionKey' nsstring='true' value='&#63266;' />
  <string_constant name='NSF32FunctionKey' nsstring='true' value='&#63267;' />
  <string_constant name='NSF33FunctionKey' nsstring='true' value='&#63268;' />
  <string_constant name='NSF34FunctionKey' nsstring='true' value='&#63269;' />
  <string_constant name='NSF35FunctionKey' nsstring='true' value='&#63270;' />
  <string_constant name='NSF3FunctionKey' nsstring='true' value='&#63238;' />
  <string_constant name='NSF4FunctionKey' nsstring='true' value='&#63239;' />
  <string_constant name='NSF5FunctionKey' nsstring='true' value='&#63240;' />
  <string_constant name='NSF6FunctionKey' nsstring='true' value='&#63241;' />
  <string_constant name='NSF7FunctionKey' nsstring='true' value='&#63242;' />
  <string_constant name='NSF8FunctionKey' nsstring='true' value='&#63243;' />
  <string_constant name='NSF9FunctionKey' nsstring='true' value='&#63244;' />
  <string_constant name='NSFindFunctionKey' nsstring='true' value='&#63301;' />
  <string_constant name='NSHelpFunctionKey' nsstring='true' value='&#63302;' />
  <string_constant name='NSHomeFunctionKey' nsstring='true' value='&#63273;' />
  <string_constant name='NSImageRepRegistryChangedNotification' nsstring='true' value='NSImageRepRegistryDidChangeNotification' />
  <string_constant name='NSInsertCharFunctionKey' nsstring='true' value='&#63293;' />
  <string_constant name='NSInsertFunctionKey' nsstring='true' value='&#63271;' />
  <string_constant name='NSInsertLineFunctionKey' nsstring='true' value='&#63291;' />
  <string_constant name='NSLeftArrowFunctionKey' nsstring='true' value='&#63234;' />
  <string_constant name='NSMenuFunctionKey' nsstring='true' value='&#63285;' />
  <string_constant name='NSModeSwitchFunctionKey' nsstring='true' value='&#63303;' />
  <string_constant name='NSNextFunctionKey' nsstring='true' value='&#63296;' />
  <string_constant name='NSPageDownFunctionKey' nsstring='true' value='&#63277;' />
  <string_constant name='NSPageUpFunctionKey' nsstring='true' value='&#63276;' />
  <string_constant name='NSPauseFunctionKey' nsstring='true' value='&#63280;' />
  <string_constant name='NSPrevFunctionKey' nsstring='true' value='&#63295;' />
  <string_constant name='NSPrintFunctionKey' nsstring='true' value='&#63288;' />
  <string_constant name='NSPrintScreenFunctionKey' nsstring='true' value='&#63278;' />
  <string_constant name='NSRedoFunctionKey' nsstring='true' value='&#63300;' />
  <string_constant name='NSResetFunctionKey' nsstring='true' value='&#63283;' />
  <string_constant name='NSRightArrowFunctionKey' nsstring='true' value='&#63235;' />
  <string_constant name='NSScrollLockFunctionKey' nsstring='true' value='&#63279;' />
  <string_constant name='NSSelectFunctionKey' nsstring='true' value='&#63297;' />
  <string_constant name='NSStopFunctionKey' nsstring='true' value='&#63284;' />
  <string_constant name='NSSysReqFunctionKey' nsstring='true' value='&#63281;' />
  <string_constant name='NSSystemFunctionKey' nsstring='true' value='&#63287;' />
  <string_constant name='NSUndoFunctionKey' nsstring='true' value='&#63299;' />
  <string_constant name='NSUpArrowFunctionKey' nsstring='true' value='&#63232;' />
  <string_constant name='NSUserFunctionKey' nsstring='true' value='&#63286;' />
  <function name='NSAccessibilityActionDescription'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSAccessibilityPostNotification'>
    <retval type='v' type64='v' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSAccessibilityRaiseBadArgumentException'>
    <retval type='v' type64='v' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSAccessibilityRoleDescription'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSAccessibilityRoleDescriptionForUIElement'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSAccessibilityUnignoredAncestor'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSAccessibilityUnignoredChildren'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSAccessibilityUnignoredChildrenForOnlyChild'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSAccessibilityUnignoredDescendant'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSApplicationLoad'>
    <retval type='B' type64='B' />
  </function>
  <function name='NSAvailableWindowDepths'>
    <retval c_array_delimited_by_null='true' type='^i' />
  </function>
  <function name='NSBeep'>
    <retval type='v' type64='v' />
  </function>
  <function name='NSBeginAlertSheet' variadic='true'>
    <retval type='v' type64='v' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg sel_of_type='v@:@i^v' type=':' />
    <arg sel_of_type='v@:@i^v' type=':' type64=':' />
    <arg type='^v' type64='^v' />
    <arg type='@' type64='@' printf_format='true' />
  </function>
  <function name='NSBeginCriticalAlertSheet' variadic='true'>
    <retval type='v' type64='v' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg sel_of_type='v@:@i^v' type=':' />
    <arg sel_of_type='v@:@i^v' type=':' type64=':' />
    <arg type='^v' type64='^v' />
    <arg type='@' type64='@' printf_format='true' />
  </function>
  <function name='NSBeginInformationalAlertSheet' variadic='true'>
    <retval type='v' type64='v' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg sel_of_type='v@:@i^v' type=':' />
    <arg sel_of_type='v@:@i^v' type=':' type64=':' />
    <arg type='^v' type64='^v' />
    <arg type='@' type64='@' printf_format='true' />
  </function>
  <function name='NSBestDepth'>
    <retval type='i' type64='i' />
    <arg type='@' type64='@' />
    <arg type='i' type64='q' />
    <arg type='i' type64='q' />
    <arg type='B' type64='B' />
    <arg type='^B' type64='^B' type_modifier='o' />
  </function>
  <function name='NSBitsPerPixelFromDepth'>
    <retval type='i' type64='q' />
    <arg type='i' type64='i' />
  </function>
  <function name='NSBitsPerSampleFromDepth'>
    <retval type='i' type64='q' />
    <arg type='i' type64='i' />
  </function>
  <function name='NSColorSpaceFromDepth'>
    <retval type='@' type64='@' />
    <arg type='i' type64='i' />
  </function>
  <function name='NSConvertGlyphsToPackedGlyphs'>
    <retval type='i' type64='q' />
    <arg c_array_length_in_arg='1' type='^I' type_modifier='n' />
    <arg type='i' type64='q' />
    <arg type='I' />
    <arg c_array_of_variable_length='true' type='^v' type64='^v' type_modifier='o' />
  </function>
  <function name='NSCopyBits'>
    <retval type='v' type64='v' />
    <arg type='i' type64='q' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
  </function>
  <function name='NSCountWindows'>
    <retval type='v' type64='v' />
    <arg type='^i' type64='^i' type_modifier='o' />
  </function>
  <function name='NSCountWindowsForContext'>
    <retval type='v' type64='v' />
    <arg type='i' type64='q' />
    <arg type='^i' type64='^i' type_modifier='o' />
  </function>
  <function name='NSCreateFileContentsPboardType'>
    <retval already_cfretained='true' type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSCreateFilenamePboardType'>
    <retval already_cfretained='true' type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSDisableScreenUpdates'>
    <retval type='v' type64='v' />
  </function>
  <function name='NSDottedFrameRect'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSDrawBitmap'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='i' type64='q' />
    <arg type='i' type64='q' />
    <arg type='i' type64='q' />
    <arg type='i' type64='q' />
    <arg type='i' type64='q' />
    <arg type='i' type64='q' />
    <arg type='B' type64='B' />
    <arg type='B' type64='B' />
    <arg type='@' type64='@' />
    <arg type='[5*]' type64='[5*]' />
  </function>
  <function name='NSDrawButton'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSDrawColorTiledRects'>
    <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg c_array_length_in_arg='4' type='^i' type64='^i' type_modifier='n' />
    <arg c_array_length_in_arg='4' type='^@' type_modifier='n' />
    <arg type='i' type64='q' />
  </function>
  <function name='NSDrawDarkBezel'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSDrawGrayBezel'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSDrawGroove'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSDrawLightBezel'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSDrawNinePartImage'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='I' />
    <arg type='f' type64='d' />
    <arg type='B' type64='B' />
  </function>
  <function name='NSDrawThreePartImage'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='B' type64='B' />
    <arg type='I' />
    <arg type='f' type64='d' />
    <arg type='B' type64='B' />
  </function>
  <function name='NSDrawTiledRects'>
    <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg c_array_length_in_arg='4' type='^i' type64='^i' type_modifier='n' />
    <arg c_array_length_in_arg='4' type='^f' type64='^d' type_modifier='n' />
    <arg type='i' type64='q' />
  </function>
  <function name='NSDrawWhiteBezel'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSDrawWindowBackground'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSEnableScreenUpdates'>
    <retval type='v' type64='v' />
  </function>
  <function name='NSEraseRect'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSFrameRect'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSFrameRectWithWidth'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='f' type64='d' />
  </function>
  <function name='NSFrameRectWithWidthUsingOperation'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='f' type64='d' />
    <arg type='I' />
  </function>
  <function name='NSGetAlertPanel' variadic='true'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSGetCriticalAlertPanel' variadic='true'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSGetFileType'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSGetFileTypes'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSGetInformationalAlertPanel' variadic='true'>
    <retval type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSGetWindowServerMemory'>
    <retval type='i' type64='q' />
    <arg type='i' type64='q' />
    <arg type='^i' type64='^i' type_modifier='o' />
    <arg type='^i' type64='^i' type_modifier='o' />
    <arg type='^@' type_modifier='o' />
  </function>
  <function name='NSHighlightRect'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSInterfaceStyleForKey'>
    <retval type='I' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSIsControllerMarker'>
    <retval type='B' type64='B' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSNumberOfColorComponents'>
    <retval type='i' type64='q' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSOpenGLGetOption'>
    <retval type='v' type64='v' />
    <arg type='i' type64='i' />
    <arg type='^i' type_modifier='o' />
  </function>
  <function name='NSOpenGLGetVersion'>
    <retval type='v' type64='v' />
    <arg type='^i' type_modifier='o' />
    <arg type='^i' type_modifier='o' />
  </function>
  <function name='NSOpenGLSetOption'>
    <retval type='v' type64='v' />
    <arg type='i' type64='i' />
    <arg type='i' type64='i' />
  </function>
  <function name='NSPerformService'>
    <retval type='B' type64='B' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSPlanarFromDepth'>
    <retval type='B' type64='B' />
    <arg type='i' type64='i' />
  </function>
  <function name='NSReadPixel'>
    <retval type='@' type64='@' />
    <arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
  </function>
  <function name='NSRectClip'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSRectClipList'>
    <retval type='v' type64='v' />
    <arg c_array_length_in_arg='1' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type_modifier='n' />
    <arg type='i' type64='q' />
  </function>
  <function name='NSRectFill'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </function>
  <function name='NSRectFillList'>
    <retval type='v' type64='v' />
    <arg c_array_length_in_arg='1' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type_modifier='n' />
    <arg type='i' type64='q' />
  </function>
  <function name='NSRectFillListUsingOperation'>
    <retval type='v' type64='v' />
    <arg c_array_length_in_arg='1' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type_modifier='n' />
    <arg type='i' type64='q' />
    <arg type='I' />
  </function>
  <function name='NSRectFillListWithColors'>
    <retval type='v' type64='v' />
    <arg c_array_length_in_arg='2' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type_modifier='n' />
    <arg c_array_length_in_arg='2' type='^@' type_modifier='n' />
    <arg type='i' type64='q' />
  </function>
  <function name='NSRectFillListWithColorsUsingOperation'>
    <retval type='v' type64='v' />
    <arg c_array_length_in_arg='2' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type_modifier='n' />
    <arg c_array_length_in_arg='2' type='^@' type_modifier='n' />
    <arg type='i' type64='q' />
    <arg type='I' />
  </function>
  <function name='NSRectFillListWithGrays'>
    <retval type='v' type64='v' />
    <arg c_array_length_in_arg='2' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type_modifier='n' />
    <arg c_array_length_in_arg='2' type='^f' type64='^d' type_modifier='n' />
    <arg type='i' type64='q' />
  </function>
  <function name='NSRectFillUsingOperation'>
    <retval type='v' type64='v' />
    <arg type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <arg type='I' />
  </function>
  <function name='NSRegisterServicesProvider'>
    <retval type='v' type64='v' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSReleaseAlertPanel'>
    <retval type='v' type64='v' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSRunAlertPanel' variadic='true'>
    <retval type='i' type64='q' />
    <arg type='@' type64='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSRunAlertPanelRelativeToWindow' variadic='true'>
    <retval type='i' type64='q' />
    <arg type='@' type64='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSRunCriticalAlertPanel' variadic='true'>
    <retval type='i' type64='q' />
    <arg type='@' type64='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSRunCriticalAlertPanelRelativeToWindow' variadic='true'>
    <retval type='i' type64='q' />
    <arg type='@' type64='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSRunInformationalAlertPanel' variadic='true'>
    <retval type='i' type64='q' />
    <arg type='@' type64='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSRunInformationalAlertPanelRelativeToWindow' variadic='true'>
    <retval type='i' type64='q' />
    <arg type='@' type64='@' />
    <arg printf_format='true' type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSSetFocusRingStyle'>
    <retval type='v' type64='v' />
    <arg type='I' />
  </function>
  <function name='NSSetShowsServicesMenuItem'>
    <retval type='i' type64='q' />
    <arg type='@' type64='@' />
    <arg type='B' type64='B' />
  </function>
  <function name='NSShowAnimationEffect'>
    <retval type='v' type64='v' />
    <arg type='I' />
    <arg type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    <arg type='{_NSSize=ff}' type64='{CGSize=dd}' />
    <arg type='@' type64='@' />
    <arg sel_of_type='v@:^v' type=':' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NSShowsServicesMenuItem'>
    <retval type='B' type64='B' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSUnregisterServicesProvider'>
    <retval type='v' type64='v' />
    <arg type='@' type64='@' />
  </function>
  <function name='NSUpdateDynamicServices'>
    <retval type='v' type64='v' />
  </function>
  <function name='NSWindowList'>
    <retval type='v' type64='v' />
    <arg type='i' type64='q' />
    <arg c_array_length_in_arg='0' type='^i' type64='^i' type_modifier='o' />
  </function>
  <function name='NSWindowListForContext'>
    <retval type='v' type64='v' />
    <arg type='i' type64='q' />
    <arg type='i' type64='q' />
    <arg c_array_length_in_arg='1' type='^i' type64='^i' type_modifier='o' />
  </function>
  <function inline='true' name='NSEventMaskFromType'>
    <retval type='I' type64='Q' />
    <arg type='I' />
  </function>
  <informal_protocol name='NSAccessibility'>
    <method selector='accessibilityActionDescription:' type='@@:@' />
    <method selector='accessibilityActionNames' type='@@:' />
    <method selector='accessibilityAttributeNames' type='@@:' />
    <method selector='accessibilityAttributeValue:' type='@@:@' />
    <method selector='accessibilityAttributeValue:forParameter:' type='@@:@@' />
    <method selector='accessibilityFocusedUIElement' type='@@:' />
    <method selector='accessibilityHitTest:' type='@@:{_NSPoint=ff}' type64='@@:{CGPoint=dd}' />
    <method selector='accessibilityIsAttributeSettable:' type='B@:@' />
    <method selector='accessibilityIsIgnored' type='B@:' />
    <method selector='accessibilityParameterizedAttributeNames' type='@@:' />
    <method selector='accessibilityPerformAction:' type='v@:@' />
    <method selector='accessibilitySetValue:forAttribute:' type='v@:@@' />
  </informal_protocol>
  <informal_protocol name='NSAccessibilityAdditions'>
    <method selector='accessibilitySetOverrideValue:forAttribute:' type='B@:@@' />
  </informal_protocol>
  <informal_protocol name='NSAlertDelegate'>
    <method selector='alertShowHelp:' type='B@:@' />
  </informal_protocol>
  <informal_protocol name='NSAnimationDelegate'>
    <method selector='animation:didReachProgressMark:' type='v@:@f' />
    <method selector='animation:valueForProgress:' type='f@:@f' />
    <method selector='animationDidEnd:' type='v@:@' />
    <method selector='animationDidStop:' type='v@:@' />
    <method selector='animationShouldStart:' type='B@:@' />
  </informal_protocol>
  <informal_protocol name='NSApplicationDelegate'>
    <method selector='application:openFile:' type='B@:@@' />
    <method selector='application:openFileWithoutUI:' type='B@:@@' />
    <method selector='application:openFiles:' type='v@:@@' />
    <method selector='application:openTempFile:' type='B@:@@' />
    <method selector='application:printFile:' type='B@:@@' />
    <method selector='application:printFiles:' type='v@:@@' />
    <method selector='application:printFiles:withSettings:showPrintPanels:' type='I@:@@@B' />
    <method selector='application:willPresentError:' type='@@:@@' />
    <method selector='applicationDockMenu:' type='@@:@' />
    <method selector='applicationOpenUntitledFile:' type='B@:@' />
    <method selector='applicationShouldHandleReopen:hasVisibleWindows:' type='B@:@B' />
    <method selector='applicationShouldOpenUntitledFile:' type='B@:@' />
    <method selector='applicationShouldTerminate:' type='I@:@' />
    <method selector='applicationShouldTerminateAfterLastWindowClosed:' type='B@:@' />
  </informal_protocol>
  <informal_protocol name='NSApplicationNotifications'>
    <method selector='applicationDidBecomeActive:' type='v@:@' />
    <method selector='applicationDidChangeScreenParameters:' type='v@:@' />
    <method selector='applicationDidFinishLaunching:' type='v@:@' />
    <method selector='applicationDidHide:' type='v@:@' />
    <method selector='applicationDidResignActive:' type='v@:@' />
    <method selector='applicationDidUnhide:' type='v@:@' />
    <method selector='applicationDidUpdate:' type='v@:@' />
    <method selector='applicationWillBecomeActive:' type='v@:@' />
    <method selector='applicationWillFinishLaunching:' type='v@:@' />
    <method selector='applicationWillHide:' type='v@:@' />
    <method selector='applicationWillResignActive:' type='v@:@' />
    <method selector='applicationWillTerminate:' type='v@:@' />
    <method selector='applicationWillUnhide:' type='v@:@' />
    <method selector='applicationWillUpdate:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSApplicationScriptingDelegation'>
    <method selector='application:delegateHandlesKey:' type='B@:@@' />
  </informal_protocol>
  <informal_protocol name='NSBrowserDelegate'>
    <method selector='browser:acceptDrop:atRow:column:dropOperation:' type='B@:@@iiI' />
    <method selector='browser:canDragRowsWithIndexes:inColumn:withEvent:' type='B@:@@i@' type64='B@:@@q@' />
    <method selector='browser:createRowsForColumn:inMatrix:' type='v@:@i@' type64='v@:@q@' />
    <method selector='browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:' type='@@:@@i@^{_NSPoint=ff}' type64='@@:@@q@^{CGPoint=dd}' />
    <method selector='browser:isColumnValid:' type='B@:@i' type64='B@:@q' />
    <method selector='browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:' type='@@:@@@i' type64='@@:@@@q' />
    <method selector='browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:' type='i@:@iii@' type64='q@:@qqq@' />
    <method selector='browser:numberOfRowsInColumn:' type='i@:@i' type64='q@:@q' />
    <method selector='browser:selectCellWithString:inColumn:' type='B@:@@i' type64='B@:@@q' />
    <method selector='browser:selectRow:inColumn:' type='B@:@ii' type64='B@:@qq' />
    <method selector='browser:shouldShowCellExpansionForRow:column:' type='B@:@ii' type64='B@:@qq' />
    <method selector='browser:shouldSizeColumn:forUserResize:toWidth:' type='f@:@iBf' type64='d@:@qBd' />
    <method selector='browser:shouldTypeSelectForEvent:withCurrentSearchString:' type='B@:@@@' />
    <method selector='browser:sizeToFitWidthOfColumn:' type='f@:@i' type64='d@:@q' />
    <method selector='browser:titleOfColumn:' type='@@:@i' type64='@@:@q' />
    <method selector='browser:typeSelectStringForRow:inColumn:' type='@@:@ii' type64='@@:@qq' />
    <method selector='browser:validateDrop:proposedRow:column:dropOperation:' type='I@:@@^i^i^I' />
    <method selector='browser:willDisplayCell:atRow:column:' type='v@:@@ii' type64='v@:@@qq' />
    <method selector='browser:writeRowsWithIndexes:inColumn:toPasteboard:' type='B@:@@i@' type64='B@:@@q@' />
    <method selector='browserColumnConfigurationDidChange:' type='v@:@' />
    <method selector='browserDidScroll:' type='v@:@' />
    <method selector='browserWillScroll:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSColorPanelResponderMethod'>
    <method selector='changeColor:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSComboBoxCellDataSource'>
    <method selector='comboBoxCell:completedString:' type='@@:@@' />
    <method selector='comboBoxCell:indexOfItemWithStringValue:' type='I@:@@' type64='Q@:@@' />
    <method selector='comboBoxCell:objectValueForItemAtIndex:' type='@@:@i' type64='@@:@q' />
    <method selector='numberOfItemsInComboBoxCell:' type='i@:@' type64='q@:@' />
  </informal_protocol>
  <informal_protocol name='NSComboBoxDataSource'>
    <method selector='comboBox:completedString:' type='@@:@@' />
    <method selector='comboBox:indexOfItemWithStringValue:' type='I@:@@' type64='Q@:@@' />
    <method selector='comboBox:objectValueForItemAtIndex:' type='@@:@i' type64='@@:@q' />
    <method selector='numberOfItemsInComboBox:' type='i@:@' type64='q@:@' />
  </informal_protocol>
  <informal_protocol name='NSComboBoxNotifications'>
    <method selector='comboBoxSelectionDidChange:' type='v@:@' />
    <method selector='comboBoxSelectionIsChanging:' type='v@:@' />
    <method selector='comboBoxWillDismiss:' type='v@:@' />
    <method selector='comboBoxWillPopUp:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSControlSubclassDelegate'>
    <method selector='control:didFailToFormatString:errorDescription:' type='B@:@@@' />
    <method selector='control:didFailToValidatePartialString:errorDescription:' type='v@:@@@' />
    <method selector='control:isValidObject:' type='B@:@@' />
    <method selector='control:textShouldBeginEditing:' type='B@:@@' />
    <method selector='control:textShouldEndEditing:' type='B@:@@' />
    <method selector='control:textView:completions:forPartialWordRange:indexOfSelectedItem:' type='@@:@@@{_NSRange=II}^i' type64='@@:@@@{_NSRange=QQ}^q' />
    <method selector='control:textView:doCommandBySelector:' type='B@:@@:' />
  </informal_protocol>
  <informal_protocol name='NSControlSubclassNotifications'>
    <method selector='controlTextDidBeginEditing:' type='v@:@' />
    <method selector='controlTextDidChange:' type='v@:@' />
    <method selector='controlTextDidEndEditing:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSDatePickerCellDelegate'>
    <method selector='datePickerCell:validateProposedDateValue:timeInterval:' type='v@:@^@^d' />
  </informal_protocol>
  <informal_protocol name='NSDictionaryControllerKeyValuePair'>
    <method selector='isExplicitlyIncluded' type='B@:' />
    <method selector='key' type='@@:' />
    <method selector='localizedKey' type='@@:' />
    <method selector='setKey:' type='v@:@' />
    <method selector='setLocalizedKey:' type='v@:@' />
    <method selector='setValue:' type='v@:@' />
    <method selector='value' type='@@:' />
  </informal_protocol>
  <informal_protocol name='NSDraggingDestination'>
    <method selector='concludeDragOperation:' type='v@:@' />
    <method selector='draggingEnded:' type='v@:@' />
    <method selector='draggingEntered:' type='I@:@' />
    <method selector='draggingExited:' type='v@:@' />
    <method selector='draggingUpdated:' type='I@:@' />
    <method selector='performDragOperation:' type='B@:@' />
    <method selector='prepareForDragOperation:' type='B@:@' />
    <method selector='wantsPeriodicDraggingUpdates' type='B@:' />
  </informal_protocol>
  <informal_protocol name='NSDraggingSource'>
    <method selector='draggedImage:beganAt:' type='v@:@{_NSPoint=ff}' type64='v@:@{CGPoint=dd}' />
    <method selector='draggedImage:endedAt:deposited:' type='v@:@{_NSPoint=ff}B' type64='v@:@{CGPoint=dd}B' />
    <method selector='draggedImage:endedAt:operation:' type='v@:@{_NSPoint=ff}I' type64='v@:@{CGPoint=dd}I' />
    <method selector='draggedImage:movedTo:' type='v@:@{_NSPoint=ff}' type64='v@:@{CGPoint=dd}' />
    <method selector='draggingSourceOperationMaskForLocal:' type='I@:B' />
    <method selector='ignoreModifierKeysWhileDragging' type='B@:' />
    <method selector='namesOfPromisedFilesDroppedAtDestination:' type='@@:@' />
  </informal_protocol>
  <informal_protocol name='NSDrawerDelegate'>
    <method selector='drawerShouldClose:' type='B@:@' />
    <method selector='drawerShouldOpen:' type='B@:@' />
    <method selector='drawerWillResizeContents:toSize:' type='{_NSSize=ff}@:@{_NSSize=ff}' type64='{CGSize=dd}@:@{CGSize=dd}' />
  </informal_protocol>
  <informal_protocol name='NSDrawerNotifications'>
    <method selector='drawerDidClose:' type='v@:@' />
    <method selector='drawerDidOpen:' type='v@:@' />
    <method selector='drawerWillClose:' type='v@:@' />
    <method selector='drawerWillOpen:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSEditor'>
    <method selector='commitEditing' type='B@:' />
    <method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:' type='v@:@:^v' />
    <method selector='discardEditing' type='v@:' />
  </informal_protocol>
  <informal_protocol name='NSEditorRegistration'>
    <method selector='objectDidBeginEditing:' type='v@:@' />
    <method selector='objectDidEndEditing:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSFontManagerDelegate'>
    <method selector='fontManager:willIncludeFont:' type='B@:@@' />
  </informal_protocol>
  <informal_protocol name='NSFontManagerResponderMethod'>
    <method selector='changeFont:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSFontPanelValidationAdditions'>
    <method selector='validModesForFontPanel:' type='I@:@' type64='Q@:@' />
  </informal_protocol>
  <informal_protocol name='NSImageDelegate'>
    <method selector='image:didLoadPartOfRepresentation:withValidRows:' type='v@:@@i' type64='v@:@@q' />
    <method selector='image:didLoadRepresentation:withStatus:' type='v@:@@I' />
    <method selector='image:didLoadRepresentationHeader:' type='v@:@@' />
    <method selector='image:willLoadRepresentation:' type='v@:@@' />
    <method selector='imageDidNotDraw:inRect:' type='@@:@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='@@:@{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </informal_protocol>
  <informal_protocol name='NSKeyValueBindingCreation'>
    <method selector='bind:toObject:withKeyPath:options:' type='v@:@@@@' />
    <method class_method='true' selector='exposeBinding:' type='v@:@' />
    <method selector='exposedBindings' type='@@:' />
    <method selector='infoForBinding:' type='@@:@' />
    <method selector='optionDescriptionsForBinding:' type='@@:@' />
    <method selector='unbind:' type='v@:@' />
    <method selector='valueClassForBinding:' type='#@:@' />
  </informal_protocol>
  <informal_protocol name='NSLayoutManagerDelegate'>
    <method selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:' type='v@:@@B' />
    <method selector='layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:' type='@@:@@BI^{_NSRange=II}' type64='@@:@@BQ^{_NSRange=QQ}' />
    <method selector='layoutManagerDidInvalidateLayout:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSMenuDelegate'>
    <method selector='menu:updateItem:atIndex:shouldCancel:' type='B@:@@iB' type64='B@:@@qB' />
    <method selector='menu:willHighlightItem:' type='v@:@@' />
    <method selector='menuDidClose:' type='v@:@' />
    <method selector='menuHasKeyEquivalent:forEvent:target:action:' type='B@:@@^@^:' />
    <method selector='menuNeedsUpdate:' type='v@:@' />
    <method selector='menuWillOpen:' type='v@:@' />
    <method selector='numberOfItemsInMenu:' type='i@:@' type64='q@:@' />
  </informal_protocol>
  <informal_protocol name='NSMenuValidation'>
    <method selector='validateMenuItem:' type='B@:@' />
  </informal_protocol>
  <informal_protocol name='NSNibAwaking'>
    <method selector='awakeFromNib' type='v@:' />
  </informal_protocol>
  <informal_protocol name='NSOutlineViewDataSource'>
    <method selector='outlineView:acceptDrop:item:childIndex:' type='B@:@@@i' type64='B@:@@@q' />
    <method selector='outlineView:child:ofItem:' type='@@:@i@' type64='@@:@q@' />
    <method selector='outlineView:isItemExpandable:' type='B@:@@' />
    <method selector='outlineView:itemForPersistentObject:' type='@@:@@' />
    <method selector='outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:' type='@@:@@@' />
    <method selector='outlineView:numberOfChildrenOfItem:' type='i@:@@' type64='q@:@@' />
    <method selector='outlineView:objectValueForTableColumn:byItem:' type='@@:@@@' />
    <method selector='outlineView:persistentObjectForItem:' type='@@:@@' />
    <method selector='outlineView:setObjectValue:forTableColumn:byItem:' type='v@:@@@@' />
    <method selector='outlineView:sortDescriptorsDidChange:' type='v@:@@' />
    <method selector='outlineView:validateDrop:proposedItem:proposedChildIndex:' type='I@:@@@i' />
    <method selector='outlineView:writeItems:toPasteboard:' type='B@:@@@' />
  </informal_protocol>
  <informal_protocol name='NSOutlineViewDelegate'>
    <method selector='outlineView:dataCellForTableColumn:item:' type='@@:@@@' />
    <method selector='outlineView:didClickTableColumn:' type='v@:@@' />
    <method selector='outlineView:didDragTableColumn:' type='v@:@@' />
    <method selector='outlineView:heightOfRowByItem:' type='f@:@@' type64='d@:@@' />
    <method selector='outlineView:isGroupItem:' type='B@:@@' />
    <method selector='outlineView:mouseDownInHeaderOfTableColumn:' type='v@:@@' />
    <method selector='outlineView:nextTypeSelectMatchFromItem:toItem:forString:' type='@@:@@@@' />
    <method selector='outlineView:selectionIndexesForProposedSelection:' type='@@:@@' />
    <method selector='outlineView:shouldCollapseItem:' type='B@:@@' />
    <method selector='outlineView:shouldEditTableColumn:item:' type='B@:@@@' />
    <method selector='outlineView:shouldExpandItem:' type='B@:@@' />
    <method selector='outlineView:shouldSelectItem:' type='B@:@@' />
    <method selector='outlineView:shouldSelectTableColumn:' type='B@:@@' />
    <method selector='outlineView:shouldShowCellExpansionForTableColumn:item:' type='B@:@@@' />
    <method selector='outlineView:shouldTrackCell:forTableColumn:item:' type='B@:@@@@' />
    <method selector='outlineView:shouldTypeSelectForEvent:withCurrentSearchString:' type='B@:@@@' />
    <method selector='outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:' type='@@:@@^{_NSRect={_NSPoint=ff}{_NSSize=ff}}@@{_NSPoint=ff}' type64='@@:@@^{CGRect={CGPoint=dd}{CGSize=dd}}@@{CGPoint=dd}' />
    <method selector='outlineView:typeSelectStringForTableColumn:item:' type='@@:@@@' />
    <method selector='outlineView:willDisplayCell:forTableColumn:item:' type='v@:@@@@' />
    <method selector='outlineView:willDisplayOutlineCell:forTableColumn:item:' type='v@:@@@@' />
    <method selector='selectionShouldChangeInOutlineView:' type='B@:@' />
  </informal_protocol>
  <informal_protocol name='NSOutlineViewNotifications'>
    <method selector='outlineViewColumnDidMove:' type='v@:@' />
    <method selector='outlineViewColumnDidResize:' type='v@:@' />
    <method selector='outlineViewItemDidCollapse:' type='v@:@' />
    <method selector='outlineViewItemDidExpand:' type='v@:@' />
    <method selector='outlineViewItemWillCollapse:' type='v@:@' />
    <method selector='outlineViewItemWillExpand:' type='v@:@' />
    <method selector='outlineViewSelectionDidChange:' type='v@:@' />
    <method selector='outlineViewSelectionIsChanging:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSPasteboardOwner'>
    <method selector='pasteboard:provideDataForType:' type='v@:@@' />
    <method selector='pasteboardChangedOwner:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSPlaceholders'>
    <method class_method='true' selector='defaultPlaceholderForMarker:withBinding:' type='@@:@@' />
    <method class_method='true' selector='setDefaultPlaceholder:forMarker:withBinding:' type='v@:@@@' />
  </informal_protocol>
  <informal_protocol name='NSRuleEditorDelegateMethods'>
    <method selector='ruleEditor:child:forCriterion:withRowType:' type='@@:@i@I' />
    <method selector='ruleEditor:displayValueForCriterion:inRow:' type='@@:@@i' type64='@@:@@q' />
    <method selector='ruleEditor:numberOfChildrenForCriterion:withRowType:' type='i@:@@I' />
    <method selector='ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:' type='@@:@@@i' type64='@@:@@@q' />
    <method selector='ruleEditorRowsDidChange:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSSavePanelDelegate'>
    <method selector='panel:compareFilename:with:caseSensitive:' type='i@:@@@B' type64='q@:@@@B' />
    <method selector='panel:directoryDidChange:' type='v@:@@' />
    <method selector='panel:isValidFilename:' type='B@:@@' />
    <method selector='panel:shouldShowFilename:' type='B@:@@' />
    <method selector='panel:userEnteredFilename:confirmed:' type='@@:@@B' />
    <method selector='panel:willExpand:' type='v@:@B' />
    <method selector='panelSelectionDidChange:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSServicesRequests'>
    <method selector='readSelectionFromPasteboard:' type='B@:@' />
    <method selector='writeSelectionToPasteboard:types:' type='B@:@@' />
  </informal_protocol>
  <informal_protocol name='NSSoundDelegateMethods'>
    <method selector='sound:didFinishPlaying:' type='v@:@B' />
  </informal_protocol>
  <informal_protocol name='NSSpeechRecognizerDelegate'>
    <method selector='speechRecognizer:didRecognizeCommand:' type='v@:@@' />
  </informal_protocol>
  <informal_protocol name='NSSpeechSynthesizerDelegate'>
    <method selector='speechSynthesizer:didEncounterErrorAtIndex:ofString:message:' type='v@:@I@@' type64='v@:@Q@@' />
    <method selector='speechSynthesizer:didEncounterSyncMessage:' type='v@:@@' />
    <method selector='speechSynthesizer:didFinishSpeaking:' type='v@:@B' />
    <method selector='speechSynthesizer:willSpeakPhoneme:' type='v@:@s' />
    <method selector='speechSynthesizer:willSpeakWord:ofString:' type='v@:@{_NSRange=II}@' type64='v@:@{_NSRange=QQ}@' />
  </informal_protocol>
  <informal_protocol name='NSSplitViewDelegate'>
    <method selector='splitView:additionalEffectiveRectOfDividerAtIndex:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:@i' type64='{CGRect={CGPoint=dd}{CGSize=dd}}@:@q' />
    <method selector='splitView:canCollapseSubview:' type='B@:@@' />
    <method selector='splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:@{_NSRect={_NSPoint=ff}{_NSSize=ff}}{_NSRect={_NSPoint=ff}{_NSSize=ff}}i' type64='{CGRect={CGPoint=dd}{CGSize=dd}}@:@{CGRect={CGPoint=dd}{CGSize=dd}}{CGRect={CGPoint=dd}{CGSize=dd}}q' />
    <method selector='splitView:constrainMaxCoordinate:ofSubviewAt:' type='f@:@fi' type64='d@:@dq' />
    <method selector='splitView:constrainMinCoordinate:ofSubviewAt:' type='f@:@fi' type64='d@:@dq' />
    <method selector='splitView:constrainSplitPosition:ofSubviewAt:' type='f@:@fi' type64='d@:@dq' />
    <method selector='splitView:resizeSubviewsWithOldSize:' type='v@:@{_NSSize=ff}' type64='v@:@{CGSize=dd}' />
    <method selector='splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:' type='B@:@@i' type64='B@:@@q' />
    <method selector='splitView:shouldHideDividerAtIndex:' type='B@:@i' type64='B@:@q' />
    <method selector='splitViewDidResizeSubviews:' type='v@:@' />
    <method selector='splitViewWillResizeSubviews:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSTabViewDelegate'>
    <method selector='tabView:didSelectTabViewItem:' type='v@:@@' />
    <method selector='tabView:shouldSelectTabViewItem:' type='B@:@@' />
    <method selector='tabView:willSelectTabViewItem:' type='v@:@@' />
    <method selector='tabViewDidChangeNumberOfTabViewItems:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSTableDataSource'>
    <method selector='numberOfRowsInTableView:' type='i@:@' type64='q@:@' />
    <method selector='tableView:acceptDrop:row:dropOperation:' type='B@:@@iI' />
    <method selector='tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:' type='@@:@@@' />
    <method selector='tableView:objectValueForTableColumn:row:' type='@@:@@i' type64='@@:@@q' />
    <method selector='tableView:setObjectValue:forTableColumn:row:' type='v@:@@@i' type64='v@:@@@q' />
    <method selector='tableView:sortDescriptorsDidChange:' type='v@:@@' />
    <method selector='tableView:validateDrop:proposedRow:proposedDropOperation:' type='I@:@@iI' />
    <method selector='tableView:writeRows:toPasteboard:' type='B@:@@@' />
    <method selector='tableView:writeRowsWithIndexes:toPasteboard:' type='B@:@@@' />
  </informal_protocol>
  <informal_protocol name='NSTableViewDelegate'>
    <method selector='selectionShouldChangeInTableView:' type='B@:@' />
    <method selector='tableView:dataCellForTableColumn:row:' type='@@:@@i' type64='@@:@@q' />
    <method selector='tableView:didClickTableColumn:' type='v@:@@' />
    <method selector='tableView:didDragTableColumn:' type='v@:@@' />
    <method selector='tableView:heightOfRow:' type='f@:@i' type64='d@:@q' />
    <method selector='tableView:isGroupRow:' type='B@:@i' type64='B@:@q' />
    <method selector='tableView:mouseDownInHeaderOfTableColumn:' type='v@:@@' />
    <method selector='tableView:nextTypeSelectMatchFromRow:toRow:forString:' type='i@:@ii@' type64='q@:@qq@' />
    <method selector='tableView:selectionIndexesForProposedSelection:' type='@@:@@' />
    <method selector='tableView:shouldEditTableColumn:row:' type='B@:@@i' type64='B@:@@q' />
    <method selector='tableView:shouldSelectRow:' type='B@:@i' type64='B@:@q' />
    <method selector='tableView:shouldSelectTableColumn:' type='B@:@@' />
    <method selector='tableView:shouldShowCellExpansionForTableColumn:row:' type='B@:@@i' type64='B@:@@q' />
    <method selector='tableView:shouldTrackCell:forTableColumn:row:' type='B@:@@@i' type64='B@:@@@q' />
    <method selector='tableView:shouldTypeSelectForEvent:withCurrentSearchString:' type='B@:@@@' />
    <method selector='tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:' type='@@:@@^{_NSRect={_NSPoint=ff}{_NSSize=ff}}@i{_NSPoint=ff}' type64='@@:@@^{CGRect={CGPoint=dd}{CGSize=dd}}@q{CGPoint=dd}' />
    <method selector='tableView:typeSelectStringForTableColumn:row:' type='@@:@@i' type64='@@:@@q' />
    <method selector='tableView:willDisplayCell:forTableColumn:row:' type='v@:@@@i' type64='v@:@@@q' />
  </informal_protocol>
  <informal_protocol name='NSTableViewNotifications'>
    <method selector='tableViewColumnDidMove:' type='v@:@' />
    <method selector='tableViewColumnDidResize:' type='v@:@' />
    <method selector='tableViewSelectionDidChange:' type='v@:@' />
    <method selector='tableViewSelectionIsChanging:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSTextDelegate'>
    <method selector='textDidBeginEditing:' type='v@:@' />
    <method selector='textDidChange:' type='v@:@' />
    <method selector='textDidEndEditing:' type='v@:@' />
    <method selector='textShouldBeginEditing:' type='B@:@' />
    <method selector='textShouldEndEditing:' type='B@:@' />
  </informal_protocol>
  <informal_protocol name='NSTextStorageDelegate'>
    <method selector='textStorageDidProcessEditing:' type='v@:@' />
    <method selector='textStorageWillProcessEditing:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSTextViewDelegate'>
    <method selector='textView:clickedOnCell:inRect:' type='v@:@@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='v@:@@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='textView:clickedOnCell:inRect:atIndex:' type='v@:@@{_NSRect={_NSPoint=ff}{_NSSize=ff}}I' type64='v@:@@{CGRect={CGPoint=dd}{CGSize=dd}}Q' />
    <method selector='textView:clickedOnLink:' type='B@:@@' />
    <method selector='textView:clickedOnLink:atIndex:' type='B@:@@I' type64='B@:@@Q' />
    <method selector='textView:completions:forPartialWordRange:indexOfSelectedItem:' type='@@:@@{_NSRange=II}^i' type64='@@:@@{_NSRange=QQ}^q' />
    <method selector='textView:doCommandBySelector:' type='B@:@:' />
    <method selector='textView:doubleClickedOnCell:inRect:' type='v@:@@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='v@:@@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='textView:doubleClickedOnCell:inRect:atIndex:' type='v@:@@{_NSRect={_NSPoint=ff}{_NSSize=ff}}I' type64='v@:@@{CGRect={CGPoint=dd}{CGSize=dd}}Q' />
    <method selector='textView:draggedCell:inRect:event:' type='v@:@@{_NSRect={_NSPoint=ff}{_NSSize=ff}}@' type64='v@:@@{CGRect={CGPoint=dd}{CGSize=dd}}@' />
    <method selector='textView:draggedCell:inRect:event:atIndex:' type='v@:@@{_NSRect={_NSPoint=ff}{_NSSize=ff}}@I' type64='v@:@@{CGRect={CGPoint=dd}{CGSize=dd}}@Q' />
    <method selector='textView:menu:forEvent:atIndex:' type='@@:@@@I' type64='@@:@@@Q' />
    <method selector='textView:shouldChangeTextInRange:replacementString:' type='B@:@{_NSRange=II}@' type64='B@:@{_NSRange=QQ}@' />
    <method selector='textView:shouldChangeTextInRanges:replacementStrings:' type='B@:@@@' />
    <method selector='textView:shouldChangeTypingAttributes:toAttributes:' type='@@:@@@' />
    <method selector='textView:shouldSetSpellingState:range:' type='i@:@i{_NSRange=II}' type64='q@:@q{_NSRange=QQ}' />
    <method selector='textView:willChangeSelectionFromCharacterRange:toCharacterRange:' type='{_NSRange=II}@:@{_NSRange=II}{_NSRange=II}' type64='{_NSRange=QQ}@:@{_NSRange=QQ}{_NSRange=QQ}' />
    <method selector='textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:' type='@@:@@@' />
    <method selector='textView:willDisplayToolTip:forCharacterAtIndex:' type='@@:@@I' type64='@@:@@Q' />
    <method selector='textView:writablePasteboardTypesForCell:atIndex:' type='@@:@@I' type64='@@:@@Q' />
    <method selector='textView:writeCell:atIndex:toPasteboard:type:' type='B@:@@I@@' type64='B@:@@Q@@' />
    <method selector='textViewDidChangeSelection:' type='v@:@' />
    <method selector='textViewDidChangeTypingAttributes:' type='v@:@' />
    <method selector='undoManagerForTextView:' type='@@:@' />
  </informal_protocol>
  <informal_protocol name='NSTokenFieldCellDelegate'>
    <method selector='tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:' type='@@:@@i^i' type64='@@:@@q^q' />
    <method selector='tokenFieldCell:displayStringForRepresentedObject:' type='@@:@@' />
    <method selector='tokenFieldCell:editingStringForRepresentedObject:' type='@@:@@' />
    <method selector='tokenFieldCell:hasMenuForRepresentedObject:' type='B@:@@' />
    <method selector='tokenFieldCell:menuForRepresentedObject:' type='@@:@@' />
    <method selector='tokenFieldCell:readFromPasteboard:' type='@@:@@' />
    <method selector='tokenFieldCell:representedObjectForEditingString:' type='@@:@@' />
    <method selector='tokenFieldCell:shouldAddObjects:atIndex:' type='@@:@@I' type64='@@:@@Q' />
    <method selector='tokenFieldCell:styleForRepresentedObject:' type='I@:@@' />
    <method selector='tokenFieldCell:writeRepresentedObjects:toPasteboard:' type='B@:@@@' />
  </informal_protocol>
  <informal_protocol name='NSTokenFieldDelegate'>
    <method selector='tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:' type='@@:@@i^i' type64='@@:@@q^q' />
    <method selector='tokenField:displayStringForRepresentedObject:' type='@@:@@' />
    <method selector='tokenField:editingStringForRepresentedObject:' type='@@:@@' />
    <method selector='tokenField:hasMenuForRepresentedObject:' type='B@:@@' />
    <method selector='tokenField:menuForRepresentedObject:' type='@@:@@' />
    <method selector='tokenField:readFromPasteboard:' type='@@:@@' />
    <method selector='tokenField:representedObjectForEditingString:' type='@@:@@' />
    <method selector='tokenField:shouldAddObjects:atIndex:' type='@@:@@I' type64='@@:@@Q' />
    <method selector='tokenField:styleForRepresentedObject:' type='I@:@@' />
    <method selector='tokenField:writeRepresentedObjects:toPasteboard:' type='B@:@@@' />
  </informal_protocol>
  <informal_protocol name='NSToolTipOwner'>
    <method selector='view:stringForToolTip:point:userData:' type='@@:@i{_NSPoint=ff}^v' type64='@@:@i{CGPoint=dd}^v' />
  </informal_protocol>
  <informal_protocol name='NSToolbarDelegate'>
    <method selector='toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:' type='@@:@@B' />
    <method selector='toolbarAllowedItemIdentifiers:' type='@@:@' />
    <method selector='toolbarDefaultItemIdentifiers:' type='@@:@' />
    <method selector='toolbarSelectableItemIdentifiers:' type='@@:@' />
  </informal_protocol>
  <informal_protocol name='NSToolbarItemValidation'>
    <method selector='validateToolbarItem:' type='B@:@' />
  </informal_protocol>
  <informal_protocol name='NSToolbarNotifications'>
    <method selector='toolbarDidRemoveItem:' type='v@:@' />
    <method selector='toolbarWillAddItem:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='NSWindowDelegate'>
    <method selector='window:shouldDragDocumentWithEvent:from:withPasteboard:' type='B@:@@{_NSPoint=ff}@' type64='B@:@@{CGPoint=dd}@' />
    <method selector='window:shouldPopUpDocumentPathMenu:' type='B@:@@' />
    <method selector='window:willPositionSheet:usingRect:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:@@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}@:@@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='windowShouldClose:' type='B@:@' />
    <method selector='windowShouldZoom:toFrame:' type='B@:@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='B@:@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='windowWillResize:toSize:' type='{_NSSize=ff}@:@{_NSSize=ff}' type64='{CGSize=dd}@:@{CGSize=dd}' />
    <method selector='windowWillReturnFieldEditor:toObject:' type='@@:@@' />
    <method selector='windowWillReturnUndoManager:' type='@@:@' />
    <method selector='windowWillUseStandardFrame:defaultFrame:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}@:@{CGRect={CGPoint=dd}{CGSize=dd}}' />
  </informal_protocol>
  <informal_protocol name='NSWindowNotifications'>
    <method selector='windowDidBecomeKey:' type='v@:@' />
    <method selector='windowDidBecomeMain:' type='v@:@' />
    <method selector='windowDidChangeScreen:' type='v@:@' />
    <method selector='windowDidChangeScreenProfile:' type='v@:@' />
    <method selector='windowDidDeminiaturize:' type='v@:@' />
    <method selector='windowDidEndSheet:' type='v@:@' />
    <method selector='windowDidExpose:' type='v@:@' />
    <method selector='windowDidMiniaturize:' type='v@:@' />
    <method selector='windowDidMove:' type='v@:@' />
    <method selector='windowDidResignKey:' type='v@:@' />
    <method selector='windowDidResignMain:' type='v@:@' />
    <method selector='windowDidResize:' type='v@:@' />
    <method selector='windowDidUpdate:' type='v@:@' />
    <method selector='windowWillBeginSheet:' type='v@:@' />
    <method selector='windowWillClose:' type='v@:@' />
    <method selector='windowWillMiniaturize:' type='v@:@' />
    <method selector='windowWillMove:' type='v@:@' />
  </informal_protocol>
  <class name='CIColor'>
    <method selector='initWithColor:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='CIImage'>
    <method selector='drawAtPoint:fromRect:operation:fraction:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='I' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method selector='drawInRect:fromRect:operation:fraction:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='I' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method selector='initWithBitmapImageRep:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSATSTypesetter'>
    <method selector='attributedString'>
      <retval type='@' />
    </method>
    <method selector='bidiProcessingEnabled'>
      <retval type='B' />
    </method>
    <method selector='boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='3' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='4' type='I' type64='Q' />
    </method>
    <method selector='characterRangeForGlyphRange:actualGlyphRange:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='currentTextContainer'>
      <retval type='@' />
    </method>
    <method selector='deleteGlyphsInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg c_array_length_in_arg='0' index='1' type_modifier='o' type='o^S'/>
      <arg c_array_length_in_arg='0' index='2' type_modifier='o' type='o^I' type64='o^Q' />
      <arg c_array_length_in_arg='0' index='3' type_modifier='o' />
      <arg index='4' type='^B' c_array_length_in_arg='0' type_modifier='o' />
    </method>
    <method selector='getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='3' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='hyphenCharacterForGlyphAtIndex:'>
      <retval type='I' type64='I' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='hyphenationFactor'>
      <retval type='f' />
    </method>
    <method selector='hyphenationFactorForGlyphAtIndex:'>
      <retval type='f' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='insertGlyph:atGlyphIndex:characterIndex:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='layoutManager'>
      <retval type='@' />
    </method>
    <method selector='layoutParagraphAtPoint:'>
      <retval type='I' type64='Q' />
      <arg index='0' type_modifier='N' />
    </method>
    <method selector='lineFragmentPadding'>
      <retval type='f' type64='d' />
    </method>
    <method selector='lineFragmentRectForProposedRect:remainingRect:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
      <retval type='f' type64='d' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='paragraphGlyphRange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='paragraphSeparatorGlyphRange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
      <retval type='f' type64='d' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'>
      <retval type='f' type64='d' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='setAttachmentSize:forGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setAttributedString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBidiLevels:forGlyphRange:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type='^z' type_modifier='n' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setBidiProcessingEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDrawsOutsideLineFragment:forGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setHardInvalidation:forGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setHyphenationFactor:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
    <method selector='setLineFragmentPadding:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method selector='setLocation:withAdvancements:forStartOfGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type_modifier='n' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setNotShownAttribute:forGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setParagraphGlyphRange:separatorGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setTypesetterBehavior:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setUsesFontLeading:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='sharedTypesetter'>
      <retval type='@' />
    </method>
    <method selector='shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
      <retval type='B' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='shouldBreakLineByWordBeforeCharacterAtIndex:'>
      <retval type='B' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='substituteFontForFont:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='substituteGlyphsInRange:withGlyphs:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg c_array_length_in_arg='0' index='1' type_modifier='n' />
    </method>
    <method selector='textTabForGlyphLocation:writingDirection:maxLocation:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='i' />
      <arg index='2' type='f' type64='d' />
    </method>
    <method selector='typesetterBehavior'>
      <retval type='i' />
    </method>
    <method selector='usesFontLeading'>
      <retval type='B' />
    </method>
    <method selector='willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
      <retval type='v' />
      <arg index='0' type_modifier='N' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type_modifier='N' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='3' type_modifier='N' type='^f' type64='^d' />
    </method>
  </class>
  <class name='NSActionCell'>
    <method selector='action'>
      <retval type=':' />
    </method>
    <method selector='controlView'>
      <retval type='@' />
    </method>
    <method selector='doubleValue'>
      <retval type='d' />
    </method>
    <method selector='floatValue'>
      <retval type='f' />
    </method>
    <method selector='intValue'>
      <retval type='i' />
    </method>
    <method selector='integerValue'>
      <retval type='i' type64='q' />
    </method>
    <method selector='setAction:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setAlignment:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setBezeled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setBordered:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setControlView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setFloatingPointFormat:left:right:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='setFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setObjectValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTag:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setTarget:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='stringValue'>
      <retval type='@' />
    </method>
    <method selector='tag'>
      <retval type='i' type64='q' />
    </method>
    <method selector='target'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSAffineTransform'>
    <method selector='concat'>
      <retval type='v' />
    </method>
    <method selector='set'>
      <retval type='v' />
    </method>
    <method selector='transformBezierPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSAlert'>
    <method selector='accessoryView'>
      <retval type='@' />
    </method>
    <method selector='addButtonWithTitle:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='alertStyle'>
      <retval type='I' />
    </method>
    <method class_method='true' selector='alertWithError:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:' variadic='true'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' printf_format='true' type='@' />
    </method>
    <method selector='beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' sel_of_type='v@:@i^v' sel_of_type64='v@:@q^v' />
      <arg index='3' type='^v' />
    </method>
    <method selector='buttons'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='helpAnchor'>
      <retval type='@' />
    </method>
    <method selector='icon'>
      <retval type='@' />
    </method>
    <method selector='informativeText'>
      <retval type='@' />
    </method>
    <method selector='layout'>
      <retval type='v' />
    </method>
    <method selector='messageText'>
      <retval type='@' />
    </method>
    <method selector='runModal'>
      <retval type='i' type64='q' />
    </method>
    <method selector='setAccessoryView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAlertStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHelpAnchor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setIcon:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setInformativeText:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMessageText:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setShowsHelp:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setShowsSuppressionButton:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='showsHelp'>
      <retval type='B' />
    </method>
    <method selector='showsSuppressionButton'>
      <retval type='B' />
    </method>
    <method selector='suppressionButton'>
      <retval type='@' />
    </method>
    <method selector='window'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSAnimation'>
    <method selector='addProgressMark:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
    <method selector='animationBlockingMode'>
      <retval type='I' />
    </method>
    <method selector='animationCurve'>
      <retval type='I' />
    </method>
    <method selector='clearStartAnimation'>
      <retval type='v' />
    </method>
    <method selector='clearStopAnimation'>
      <retval type='v' />
    </method>
    <method selector='currentProgress'>
      <retval type='f' />
    </method>
    <method selector='currentValue'>
      <retval type='f' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='duration'>
      <retval type='d' />
    </method>
    <method selector='frameRate'>
      <retval type='f' />
    </method>
    <method selector='initWithDuration:animationCurve:'>
      <retval type='@' />
      <arg index='0' type='d' />
      <arg index='1' type='I' />
    </method>
    <method selector='isAnimating'>
      <retval type='B' />
    </method>
    <method selector='progressMarks'>
      <retval type='@' />
    </method>
    <method selector='removeProgressMark:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
    <method selector='runLoopModesForAnimating'>
      <retval type='@' />
    </method>
    <method selector='setAnimationBlockingMode:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setAnimationCurve:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setCurrentProgress:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDuration:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setFrameRate:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
    <method selector='setProgressMarks:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='startAnimation'>
      <retval type='v' />
    </method>
    <method selector='startWhenAnimation:reachesProgress:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='f' />
    </method>
    <method selector='stopAnimation'>
      <retval type='v' />
    </method>
    <method selector='stopWhenAnimation:reachesProgress:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='f' />
    </method>
  </class>
  <class name='NSAnimationContext'>
    <method class_method='true' selector='beginGrouping'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='currentContext'>
      <retval type='@' />
    </method>
    <method selector='duration'>
      <retval type='d' />
    </method>
    <method class_method='true' selector='endGrouping'>
      <retval type='v' />
    </method>
    <method selector='setDuration:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
  </class>
  <class name='NSAppleScript'>
    <method selector='richTextSource'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSApplication'>
    <method selector='abortModal'>
      <retval type='v' />
    </method>
    <method selector='activateContextHelpMode:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='activateIgnoringOtherApps:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='addWindowsItem:title:filename:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method selector='applicationIconImage'>
      <retval type='@' />
    </method>
    <method selector='arrangeInFront:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='beginModalSessionForWindow:'>
      <arg index='0' type='@' />
    </method>
    <method selector='beginModalSessionForWindow:relativeToWindow:'>
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' sel_of_type='v@:@i^v' sel_of_type64='v@:@q^v'/>
      <arg index='4' type='^v' />
    </method>
    <method selector='cancelUserAttentionRequest:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='changeWindowsItem:title:filename:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method selector='context'>
      <retval type='@' />
    </method>
    <method selector='currentEvent'>
      <retval type='@' />
    </method>
    <method selector='deactivate'>
      <retval type='v' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='detachDrawingThread:toTarget:withObject:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='discardEventsMatchingMask:beforeEvent:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
    </method>
    <method selector='dockTile'>
      <retval type='@' />
    </method>
    <method selector='endModalSession:'>
      <retval type='v' />
    </method>
    <method selector='endSheet:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='endSheet:returnCode:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='finishLaunching'>
      <retval type='v' />
    </method>
    <method selector='hide:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='hideOtherApplications:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='isActive'>
      <retval type='B' />
    </method>
    <method selector='isHidden'>
      <retval type='B' />
    </method>
    <method selector='isRunning'>
      <retval type='B' />
    </method>
    <method selector='keyWindow'>
      <retval type='@' />
    </method>
    <method selector='mainMenu'>
      <retval type='@' />
    </method>
    <method selector='mainWindow'>
      <retval type='@' />
    </method>
    <method selector='makeWindowsPerform:inOrder:'>
      <retval type='@' />
      <arg index='0' sel_of_type='v@:' />
      <arg index='1' type='B' />
    </method>
    <method selector='miniaturizeAll:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='modalWindow'>
      <retval type='@' />
    </method>
    <method selector='nextEventMatchingMask:untilDate:inMode:dequeue:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='B' />
    </method>
    <method selector='orderFrontCharacterPalette:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='orderFrontColorPanel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='orderFrontStandardAboutPanel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='orderFrontStandardAboutPanelWithOptions:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='orderedDocuments'>
      <retval type='@' />
    </method>
    <method selector='orderedWindows'>
      <retval type='@' />
    </method>
    <method selector='postEvent:atStart:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='preventWindowOrdering'>
      <retval type='v' />
    </method>
    <method selector='registerServicesMenuSendTypes:returnTypes:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='removeWindowsItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='replyToApplicationShouldTerminate:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='replyToOpenOrPrint:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='reportException:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='requestUserAttention:'>
      <retval type='i' type64='q' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='run'>
      <retval type='v' />
    </method>
    <method selector='runModalForWindow:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='runModalForWindow:relativeToWindow:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='runModalSession:'>
      <retval type='i' type64='q' />
    </method>
    <method selector='runPageLayout:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='sendAction:to:from:'>
      <retval type='B' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='sendEvent:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='servicesMenu'>
      <retval type='@' />
    </method>
    <method selector='servicesProvider'>
      <retval type='@' />
    </method>
    <method selector='setApplicationIconImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMainMenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setServicesMenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setServicesProvider:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setWindowsMenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setWindowsNeedUpdate:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='sharedApplication'>
      <retval type='@' />
    </method>
    <method selector='showHelp:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='stop:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='stopModal'>
      <retval type='v' />
    </method>
    <method selector='stopModalWithCode:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='targetForAction:'>
      <retval type='@' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='targetForAction:to:from:'>
      <retval type='@' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='terminate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tryToPerform:with:'>
      <retval type='B' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
    </method>
    <method selector='unhide:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='unhideAllApplications:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='unhideWithoutActivation'>
      <retval type='v' />
    </method>
    <method selector='updateWindows'>
      <retval type='v' />
    </method>
    <method selector='updateWindowsItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='validRequestorForSendType:returnType:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='windowWithWindowNumber:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='windows'>
      <retval type='@' />
    </method>
    <method selector='windowsMenu'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSArrayController'>
    <method selector='add:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addObjects:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addSelectedObjects:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='addSelectionIndexes:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='alwaysUsesMultipleValuesMarker'>
      <retval type='B' />
    </method>
    <method selector='arrangeObjects:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='arrangedObjects'>
      <retval type='@' />
    </method>
    <method selector='automaticRearrangementKeyPaths'>
      <retval type='@' />
    </method>
    <method selector='automaticallyRearrangesObjects'>
      <retval type='B' />
    </method>
    <method selector='avoidsEmptySelection'>
      <retval type='B' />
    </method>
    <method selector='canInsert'>
      <retval type='B' />
    </method>
    <method selector='canSelectNext'>
      <retval type='B' />
    </method>
    <method selector='canSelectPrevious'>
      <retval type='B' />
    </method>
    <method selector='clearsFilterPredicateOnInsertion'>
      <retval type='B' />
    </method>
    <method selector='didChangeArrangementCriteria'>
      <retval type='v' />
    </method>
    <method selector='filterPredicate'>
      <retval type='@' />
    </method>
    <method selector='insert:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertObject:atArrangedObjectIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='insertObjects:atArrangedObjectIndexes:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='preservesSelection'>
      <retval type='B' />
    </method>
    <method selector='rearrangeObjects'>
      <retval type='v' />
    </method>
    <method selector='remove:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeObjectAtArrangedObjectIndex:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='removeObjects:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeObjectsAtArrangedObjectIndexes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeSelectedObjects:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeSelectionIndexes:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectNext:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectPrevious:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectedObjects'>
      <retval type='@' />
    </method>
    <method selector='selectionIndex'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='selectionIndexes'>
      <retval type='@' />
    </method>
    <method selector='selectsInsertedObjects'>
      <retval type='B' />
    </method>
    <method selector='setAlwaysUsesMultipleValuesMarker:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAutomaticallyRearrangesObjects:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAvoidsEmptySelection:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setClearsFilterPredicateOnInsertion:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setFilterPredicate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPreservesSelection:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSelectedObjects:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSelectionIndex:'>
      <retval type='B' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setSelectionIndexes:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSelectsInsertedObjects:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSortDescriptors:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='sortDescriptors'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSAttributedString'>
    <method selector='RTFDFileWrapperFromRange:documentAttributes:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='RTFDFromRange:documentAttributes:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='RTFFromRange:documentAttributes:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='URLAtIndex:effectiveRange:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type_modifier='o' />
    </method>
    <method class_method='true' selector='attributedStringWithAttachment:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='boundingRectWithSize:options:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='1' type='i' />
    </method>
    <method selector='containsAttachments'>
      <retval type='B' />
    </method>
    <method selector='dataFromRange:documentAttributes:error:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='docFormatFromRange:documentAttributes:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='doubleClickAtIndex:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='drawAtPoint:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='drawInRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='drawWithRect:options:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='i' />
    </method>
    <method selector='fileWrapperFromRange:documentAttributes:error:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='fontAttributesInRange:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='initWithData:options:documentAttributes:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='initWithDocFormat:documentAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithHTML:baseURL:documentAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithHTML:documentAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithHTML:options:documentAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithPath:documentAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithRTF:documentAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithRTFD:documentAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithRTFDFileWrapper:documentAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithURL:documentAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='initWithURL:options:documentAttributes:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='itemNumberInTextList:atIndex:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='lineBreakBeforeIndex:withinRange:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='lineBreakByHyphenatingBeforeIndex:withinRange:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='nextWordFromIndex:forward:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='B' />
    </method>
    <method selector='rangeOfTextBlock:atIndex:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='rangeOfTextList:atIndex:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='rangeOfTextTable:atIndex:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='rulerAttributesInRange:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='size'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method class_method='true' selector='textFileTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='textPasteboardTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='textTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='textUnfilteredFileTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='textUnfilteredPasteboardTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='textUnfilteredTypes'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSBezierPath'>
    <method selector='addClip'>
      <retval type='v' />
    </method>
    <method selector='appendBezierPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='appendBezierPathWithArcFromPoint:toPoint:radius:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='f' type64='d' />
    </method>
    <method selector='appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='f' type64='d' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method selector='appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='f' type64='d' />
      <arg index='3' type='f' type64='d' />
      <arg index='4' type='B' />
    </method>
    <method selector='appendBezierPathWithGlyph:inFont:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='@' />
    </method>
    <method selector='appendBezierPathWithGlyphs:count:inFont:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='@' />
    </method>
    <method selector='appendBezierPathWithOvalInRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='appendBezierPathWithPackedGlyphs:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type='^v' type_modifier='n' />
    </method>
    <method selector='appendBezierPathWithPoints:count:'>
      <retval type='v' />
      <arg index='0' type_modifier='n' c_array_length_in_arg='1'/>
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='appendBezierPathWithRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='appendBezierPathWithRoundedRect:xRadius:yRadius:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='f' type64='d' />
    </method>
    <method class_method='true' selector='bezierPath'>
      <retval type='@' />
    </method>
    <method selector='bezierPathByFlatteningPath'>
      <retval type='@' />
    </method>
    <method selector='bezierPathByReversingPath'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='bezierPathWithOvalInRect:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method class_method='true' selector='bezierPathWithRect:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method class_method='true' selector='bezierPathWithRoundedRect:xRadius:yRadius:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='f' type64='d' />
    </method>
    <method selector='bounds'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='cachesBezierPath'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='clipRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='closePath'>
      <retval type='v' />
    </method>
    <method selector='containsPoint:'>
      <retval type='B' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='controlPointBounds'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='currentPoint'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='curveToPoint:controlPoint1:controlPoint2:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method class_method='true' selector='defaultFlatness'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='defaultLineCapStyle'>
      <retval type='I' />
    </method>
    <method class_method='true' selector='defaultLineJoinStyle'>
      <retval type='I' />
    </method>
    <method class_method='true' selector='defaultLineWidth'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='defaultMiterLimit'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='defaultWindingRule'>
      <retval type='I' />
    </method>
    <method class_method='true' selector='drawPackedGlyphs:atPoint:'>
      <retval type='v' />
      <arg index='0' type='^v' type_modifier='n' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='elementAtIndex:'>
      <retval type='I' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='elementAtIndex:associatedPoints:'>
      <retval type='I' />
      <arg index='0' type='i' type64='q' />
      <arg c_array_of_variable_length='true' index='1' type_modifier='o' />
    </method>
    <method selector='elementCount'>
      <retval type='i' type64='q' />
    </method>
    <method selector='fill'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='fillRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='flatness'>
      <retval type='f' type64='d' />
    </method>
    <method selector='getLineDash:count:phase:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='o' />
      <arg index='1' type_modifier='N' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='isEmpty'>
      <retval type='B' />
    </method>
    <method selector='lineCapStyle'>
      <retval type='I' />
    </method>
    <method selector='lineJoinStyle'>
      <retval type='I' />
    </method>
    <method selector='lineToPoint:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='lineWidth'>
      <retval type='f' type64='d' />
    </method>
    <method selector='miterLimit'>
      <retval type='f' type64='d' />
    </method>
    <method selector='moveToPoint:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='relativeCurveToPoint:controlPoint1:controlPoint2:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='relativeLineToPoint:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='relativeMoveToPoint:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='removeAllPoints'>
      <retval type='v' />
    </method>
    <method selector='setAssociatedPoints:atIndex:'>
      <retval type='v' />
      <arg c_array_of_variable_length='true' index='0' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setCachesBezierPath:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setClip'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='setDefaultFlatness:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method class_method='true' selector='setDefaultLineCapStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method class_method='true' selector='setDefaultLineJoinStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method class_method='true' selector='setDefaultLineWidth:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method class_method='true' selector='setDefaultMiterLimit:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method class_method='true' selector='setDefaultWindingRule:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setFlatness:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setLineCapStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setLineDash:count:phase:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='f' type64='d' />
    </method>
    <method selector='setLineJoinStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setLineWidth:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setMiterLimit:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setWindingRule:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='stroke'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='strokeLineFromPoint:toPoint:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method class_method='true' selector='strokeRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='transformUsingAffineTransform:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windingRule'>
      <retval type='I' />
    </method>
  </class>
  <class name='NSBitmapImageRep'>
    <method selector='TIFFRepresentation'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='TIFFRepresentationOfImageRepsInArray:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='TIFFRepresentationOfImageRepsInArray:usingCompression:factor:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='f' />
    </method>
    <method selector='TIFFRepresentationUsingCompression:factor:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='f' />
    </method>
    <method selector='bitmapData'>
      <retval c_array_of_variable_length='true' type='^v' />
    </method>
    <method selector='bitmapFormat'>
      <retval type='I' />
    </method>
    <method selector='bitsPerPixel'>
      <retval type='i' type64='q' />
    </method>
    <method selector='bytesPerPlane'>
      <retval type='i' type64='q' />
    </method>
    <method selector='bytesPerRow'>
      <retval type='i' type64='q' />
    </method>
    <method selector='canBeCompressedUsing:'>
      <retval type='B' />
      <arg index='0' type='I' />
    </method>
    <method selector='colorAtX:y:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='colorizeByMappingGray:toColor:blackMapping:whiteMapping:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='getBitmapDataPlanes:'>
      <retval type='v' />
      <arg index='0' type='^*' />
    </method>
    <method selector='getCompression:factor:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='getPixel:atX:y:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' c_array_of_variable_length='true' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method class_method='true' selector='getTIFFCompressionTypes:count:'>
      <retval type='v' />
      <arg index='0' type='^^I' type64='^^Q' />
      <arg index='1' type='^i' type64='^q' />
    </method>
    <method class_method='true' selector='imageRepWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='imageRepsWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='incrementalLoadFromData:complete:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='initForIncrementalLoad'>
      <retval type='@' />
    </method>
    <method selector='initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:'>
      <retval type='@' />
      <arg index='0' type='^*' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='i' type64='q' />
      <arg index='4' type='i' type64='q' />
      <arg index='5' type='B' />
      <arg index='6' type='B' />
      <arg index='7' type='@' />
      <arg index='8' type='I' />
      <arg index='9' type='i' type64='q' />
      <arg index='10' type='i' type64='q' />
    </method>
    <method selector='initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:'>
      <retval type='@' />
      <arg index='0' type='^*' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='i' type64='q' />
      <arg index='4' type='i' type64='q' />
      <arg index='5' type='B' />
      <arg index='6' type='B' />
      <arg index='7' type='@' />
      <arg index='8' type='i' type64='q' />
      <arg index='9' type='i' type64='q' />
    </method>
    <method selector='initWithCGImage:'>
      <retval type='@' />
      <arg index='0' type='^{CGImage=}' />
    </method>
    <method selector='initWithCIImage:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithFocusedViewRect:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='isPlanar'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='localizedNameForTIFFCompressionType:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method selector='numberOfPlanes'>
      <retval type='i' type64='q' />
    </method>
    <method class_method='true' selector='representationOfImageRepsInArray:usingType:properties:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='@' />
    </method>
    <method selector='representationUsingType:properties:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='@' />
    </method>
    <method selector='samplesPerPixel'>
      <retval type='i' type64='q' />
    </method>
    <method selector='setColor:atX:y:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='setCompression:factor:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='f' />
    </method>
    <method selector='setPixel:atX:y:'>
      <retval type='v' />
      <arg c_array_of_variable_length='true' index='0' type_modifier='n' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='setProperty:withValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='valueForProperty:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSBox'>
    <method selector='borderColor'>
      <retval type='@' />
    </method>
    <method selector='borderRect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='borderType'>
      <retval type='I' />
    </method>
    <method selector='borderWidth'>
      <retval type='f' type64='d' />
    </method>
    <method selector='boxType'>
      <retval type='I' />
    </method>
    <method selector='contentView'>
      <retval type='@' />
    </method>
    <method selector='contentViewMargins'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='cornerRadius'>
      <retval type='f' type64='d' />
    </method>
    <method selector='fillColor'>
      <retval type='@' />
    </method>
    <method selector='isTransparent'>
      <retval type='B' />
    </method>
    <method selector='setBorderColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBorderType:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setBorderWidth:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setBoxType:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setContentView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setContentViewMargins:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setCornerRadius:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setFillColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFrameFromContentFrame:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='setTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitlePosition:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setTitleWithMnemonic:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTransparent:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='sizeToFit'>
      <retval type='v' />
    </method>
    <method selector='title'>
      <retval type='@' />
    </method>
    <method selector='titleCell'>
      <retval type='@' />
    </method>
    <method selector='titleFont'>
      <retval type='@' />
    </method>
    <method selector='titlePosition'>
      <retval type='I' />
    </method>
    <method selector='titleRect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
  </class>
  <class name='NSBrowser'>
    <method selector='acceptsArrowKeys'>
      <retval type='B' />
    </method>
    <method selector='addColumn'>
      <retval type='v' />
    </method>
    <method selector='allowsBranchSelection'>
      <retval type='B' />
    </method>
    <method selector='allowsEmptySelection'>
      <retval type='B' />
    </method>
    <method selector='allowsMultipleSelection'>
      <retval type='B' />
    </method>
    <method selector='allowsTypeSelect'>
      <retval type='B' />
    </method>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='canDragRowsWithIndexes:inColumn:withEvent:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='cellClass'>
      <retval type='#' />
    </method>
    <method selector='cellPrototype'>
      <retval type='@' />
    </method>
    <method selector='columnContentWidthForColumnWidth:'>
      <retval type='f' type64='d' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='columnOfMatrix:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='columnResizingType'>
      <retval type='I' />
    </method>
    <method selector='columnWidthForColumnContentWidth:'>
      <retval type='f' type64='d' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='columnsAutosaveName'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='displayAllColumns'>
      <retval type='v' />
    </method>
    <method selector='displayColumn:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='doClick:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='doDoubleClick:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='doubleAction'>
      <retval type=':' />
    </method>
    <method selector='draggingImageForRowsWithIndexes:inColumn:withEvent:offset:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='@' />
      <arg index='3' type_modifier='N' />
    </method>
    <method selector='drawTitleOfColumn:inRect:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='firstVisibleColumn'>
      <retval type='i' type64='q' />
    </method>
    <method selector='frameOfColumn:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='frameOfInsideOfColumn:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='hasHorizontalScroller'>
      <retval type='B' />
    </method>
    <method selector='isLoaded'>
      <retval type='B' />
    </method>
    <method selector='isTitled'>
      <retval type='B' />
    </method>
    <method selector='lastColumn'>
      <retval type='i' type64='q' />
    </method>
    <method selector='lastVisibleColumn'>
      <retval type='i' type64='q' />
    </method>
    <method selector='loadColumnZero'>
      <retval type='v' />
    </method>
    <method selector='loadedCellAtRow:column:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='matrixClass'>
      <retval type='#' />
    </method>
    <method selector='matrixInColumn:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='maxVisibleColumns'>
      <retval type='i' type64='q' />
    </method>
    <method selector='minColumnWidth'>
      <retval type='f' type64='d' />
    </method>
    <method selector='numberOfVisibleColumns'>
      <retval type='i' type64='q' />
    </method>
    <method selector='path'>
      <retval type='@' />
    </method>
    <method selector='pathSeparator'>
      <retval type='@' />
    </method>
    <method selector='pathToColumn:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='prefersAllColumnUserResizing'>
      <retval type='B' />
    </method>
    <method selector='reloadColumn:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method class_method='true' selector='removeSavedColumnsWithAutosaveName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='reusesColumns'>
      <retval type='B' />
    </method>
    <method selector='scrollColumnToVisible:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='scrollColumnsLeftBy:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='scrollColumnsRightBy:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='scrollViaScroller:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectAll:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectRow:inColumn:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='selectRowIndexes:inColumn:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='selectedCell'>
      <retval type='@' />
    </method>
    <method selector='selectedCellInColumn:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectedCells'>
      <retval type='@' />
    </method>
    <method selector='selectedColumn'>
      <retval type='i' type64='q' />
    </method>
    <method selector='selectedRowInColumn:'>
      <retval type='i' type64='q' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectedRowIndexesInColumn:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='sendAction'>
      <retval type='B' />
    </method>
    <method selector='sendsActionOnArrowKeys'>
      <retval type='B' />
    </method>
    <method selector='separatesColumns'>
      <retval type='B' />
    </method>
    <method selector='setAcceptsArrowKeys:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAllowsBranchSelection:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAllowsEmptySelection:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAllowsMultipleSelection:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAllowsTypeSelect:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCellClass:'>
      <retval type='v' />
      <arg index='0' type='#' />
    </method>
    <method selector='setCellPrototype:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setColumnResizingType:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setColumnsAutosaveName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDoubleAction:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setDraggingSourceOperationMask:forLocal:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='B' />
    </method>
    <method selector='setHasHorizontalScroller:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setLastColumn:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setMatrixClass:'>
      <retval type='v' />
      <arg index='0' type='#' />
    </method>
    <method selector='setMaxVisibleColumns:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setMinColumnWidth:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPathSeparator:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPrefersAllColumnUserResizing:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setReusesColumns:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSendsActionOnArrowKeys:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSeparatesColumns:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setTakesTitleFromPreviousColumn:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setTitle:ofColumn:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setTitled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setWidth:ofColumn:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='takesTitleFromPreviousColumn'>
      <retval type='B' />
    </method>
    <method selector='tile'>
      <retval type='v' />
    </method>
    <method selector='titleFrameOfColumn:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='titleHeight'>
      <retval type='f' type64='d' />
    </method>
    <method selector='titleOfColumn:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='updateScroller'>
      <retval type='v' />
    </method>
    <method selector='validateVisibleColumns'>
      <retval type='v' />
    </method>
    <method selector='widthOfColumn:'>
      <retval type='f' type64='d' />
      <arg index='0' type='i' type64='q' />
    </method>
  </class>
  <class name='NSBrowserCell'>
    <method selector='alternateImage'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='branchImage'>
      <retval type='@' />
    </method>
    <method selector='highlightColorInView:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='highlightedBranchImage'>
      <retval type='@' />
    </method>
    <method selector='image'>
      <retval type='@' />
    </method>
    <method selector='isLeaf'>
      <retval type='B' />
    </method>
    <method selector='isLoaded'>
      <retval type='B' />
    </method>
    <method selector='reset'>
      <retval type='v' />
    </method>
    <method selector='set'>
      <retval type='v' />
    </method>
    <method selector='setAlternateImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLeaf:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setLoaded:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='NSBundle'>
    <method selector='contextHelpForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='loadNibFile:externalNameTable:withZone:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='loadNibFile:externalNameTable:withZone:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='loadNibNamed:owner:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='pathForImageResource:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='pathForSoundResource:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSButton'>
    <method selector='allowsMixedState'>
      <retval type='B' />
    </method>
    <method selector='alternateImage'>
      <retval type='@' />
    </method>
    <method selector='alternateTitle'>
      <retval type='@' />
    </method>
    <method selector='attributedAlternateTitle'>
      <retval type='@' />
    </method>
    <method selector='attributedTitle'>
      <retval type='@' />
    </method>
    <method selector='bezelStyle'>
      <retval type='I' />
    </method>
    <method selector='getPeriodicDelay:interval:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='highlight:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='image'>
      <retval type='@' />
    </method>
    <method selector='imagePosition'>
      <retval type='I' />
    </method>
    <method selector='isBordered'>
      <retval type='B' />
    </method>
    <method selector='isTransparent'>
      <retval type='B' />
    </method>
    <method selector='keyEquivalent'>
      <retval type='@' />
    </method>
    <method selector='keyEquivalentModifierMask'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='performKeyEquivalent:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAllowsMixedState:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAlternateImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAlternateTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAttributedAlternateTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAttributedTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBezelStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setBordered:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setButtonType:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setImagePosition:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setKeyEquivalent:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setKeyEquivalentModifierMask:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setNextState'>
      <retval type='v' />
    </method>
    <method selector='setPeriodicDelay:interval:'>
      <retval type='v' />
      <arg index='0' type='f' />
      <arg index='1' type='f' />
    </method>
    <method selector='setShowsBorderOnlyWhileMouseInside:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSound:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setState:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleWithMnemonic:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTransparent:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='showsBorderOnlyWhileMouseInside'>
      <retval type='B' />
    </method>
    <method selector='sound'>
      <retval type='@' />
    </method>
    <method selector='state'>
      <retval type='i' type64='q' />
    </method>
    <method selector='title'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSButtonCell'>
    <method selector='alternateImage'>
      <retval type='@' />
    </method>
    <method selector='alternateMnemonic'>
      <retval type='@' />
    </method>
    <method selector='alternateMnemonicLocation'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='alternateTitle'>
      <retval type='@' />
    </method>
    <method selector='attributedAlternateTitle'>
      <retval type='@' />
    </method>
    <method selector='attributedTitle'>
      <retval type='@' />
    </method>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='bezelStyle'>
      <retval type='I' />
    </method>
    <method selector='drawBezelWithFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='drawImage:withFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
    </method>
    <method selector='drawTitle:withFrame:inView:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
    </method>
    <method selector='getPeriodicDelay:interval:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='gradientType'>
      <retval type='I' />
    </method>
    <method selector='highlightsBy'>
      <retval type='i' type64='q' />
    </method>
    <method selector='imageDimsWhenDisabled'>
      <retval type='B' />
    </method>
    <method selector='imagePosition'>
      <retval type='I' />
    </method>
    <method selector='imageScaling'>
      <retval type='I' />
    </method>
    <method selector='isOpaque'>
      <retval type='B' />
    </method>
    <method selector='isTransparent'>
      <retval type='B' />
    </method>
    <method selector='keyEquivalent'>
      <retval type='@' />
    </method>
    <method selector='keyEquivalentFont'>
      <retval type='@' />
    </method>
    <method selector='keyEquivalentModifierMask'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='mouseEntered:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='mouseExited:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='performClick:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAlternateImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAlternateMnemonicLocation:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setAlternateTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAlternateTitleWithMnemonic:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAttributedAlternateTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAttributedTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBezelStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setButtonType:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setGradientType:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setHighlightsBy:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setImageDimsWhenDisabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setImagePosition:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setImageScaling:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setKeyEquivalent:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setKeyEquivalentFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setKeyEquivalentFont:size:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='f' type64='d' />
    </method>
    <method selector='setKeyEquivalentModifierMask:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setPeriodicDelay:interval:'>
      <retval type='v' />
      <arg index='0' type='f' />
      <arg index='1' type='f' />
    </method>
    <method selector='setShowsBorderOnlyWhileMouseInside:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setShowsStateBy:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setSound:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleWithMnemonic:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTransparent:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='showsBorderOnlyWhileMouseInside'>
      <retval type='B' />
    </method>
    <method selector='showsStateBy'>
      <retval type='i' type64='q' />
    </method>
    <method selector='sound'>
      <retval type='@' />
    </method>
    <method selector='title'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSCIImageRep'>
    <method selector='CIImage'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='imageRepWithCIImage:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithCIImage:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSCachedImageRep'>
    <method selector='initWithSize:depth:separate:alpha:'>
      <retval type='@' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='1' type='i' />
      <arg index='2' type='B' />
      <arg index='3' type='B' />
    </method>
    <method selector='initWithWindow:rect:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='rect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='window'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSCell'>
    <method selector='truncatesLastVisibleLine'>
      <retval type='B' />
    </method>
    <method selector='acceptsFirstResponder'>
      <retval type='B' />
    </method>
    <method selector='action'>
      <retval type=':' />
    </method>
    <method selector='alignment'>
      <retval type='I' />
    </method>
    <method selector='allowsEditingTextAttributes'>
      <retval type='B' />
    </method>
    <method selector='allowsMixedState'>
      <retval type='B' />
    </method>
    <method selector='allowsUndo'>
      <retval type='B' />
    </method>
    <method selector='attributedStringValue'>
      <retval type='@' />
    </method>
    <method selector='backgroundStyle'>
      <retval type='i' />
    </method>
    <method selector='baseWritingDirection'>
      <retval type='i' />
    </method>
    <method selector='calcDrawInfo:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='cellAttribute:'>
      <retval type='i' type64='q' />
      <arg index='0' type='I' />
    </method>
    <method selector='cellSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='cellSizeForBounds:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='compare:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='continueTracking:at:inView:'>
      <retval type='B' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='@' />
    </method>
    <method selector='controlSize'>
      <retval type='I' />
    </method>
    <method selector='controlTint'>
      <retval type='I' />
    </method>
    <method selector='controlView'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='defaultFocusRingType'>
      <retval type='I' />
    </method>
    <method class_method='true' selector='defaultMenu'>
      <retval type='@' />
    </method>
    <method selector='doubleValue'>
      <retval type='d' />
    </method>
    <method selector='drawInteriorWithFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='drawWithExpansionFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='drawWithFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='drawingRectForBounds:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='editWithFrame:inView:editor:delegate:event:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' type='@' />
    </method>
    <method selector='endEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='entryType'>
      <retval type='i' type64='q' />
    </method>
    <method selector='expansionFrameWithFrame:inView:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='floatValue'>
      <retval type='f' />
    </method>
    <method selector='focusRingType'>
      <retval type='I' />
    </method>
    <method selector='font'>
      <retval type='@' />
    </method>
    <method selector='formatter'>
      <retval type='@' />
    </method>
    <method selector='getPeriodicDelay:interval:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='hasValidObjectValue'>
      <retval type='B' />
    </method>
    <method selector='highlight:withFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
    </method>
    <method selector='highlightColorWithFrame:inView:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='hitTestForEvent:inRect:ofView:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
    </method>
    <method selector='image'>
      <retval type='@' />
    </method>
    <method selector='imageRectForBounds:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='importsGraphics'>
      <retval type='B' />
    </method>
    <method selector='initImageCell:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initTextCell:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='intValue'>
      <retval type='i' />
    </method>
    <method selector='integerValue'>
      <retval type='i' type64='q' />
    </method>
    <method selector='interiorBackgroundStyle'>
      <retval type='i' />
    </method>
    <method selector='isBezeled'>
      <retval type='B' />
    </method>
    <method selector='isBordered'>
      <retval type='B' />
    </method>
    <method selector='isContinuous'>
      <retval type='B' />
    </method>
    <method selector='isEditable'>
      <retval type='B' />
    </method>
    <method selector='isEnabled'>
      <retval type='B' />
    </method>
    <method selector='isEntryAcceptable:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isHighlighted'>
      <retval type='B' />
    </method>
    <method selector='isOpaque'>
      <retval type='B' />
    </method>
    <method selector='isScrollable'>
      <retval type='B' />
    </method>
    <method selector='isSelectable'>
      <retval type='B' />
    </method>
    <method selector='keyEquivalent'>
      <retval type='@' />
    </method>
    <method selector='lineBreakMode'>
      <retval type='I' />
    </method>
    <method selector='menu'>
      <retval type='@' />
    </method>
    <method selector='menuForEvent:inRect:ofView:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
    </method>
    <method selector='mnemonic'>
      <retval type='@' />
    </method>
    <method selector='mnemonicLocation'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='mouseDownFlags'>
      <retval type='i' type64='q' />
    </method>
    <method selector='nextState'>
      <retval type='i' type64='q' />
    </method>
    <method selector='objectValue'>
      <retval type='@' />
    </method>
    <method selector='performClick:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='prefersTrackingUntilMouseUp'>
      <retval type='B' />
    </method>
    <method selector='refusesFirstResponder'>
      <retval type='B' />
    </method>
    <method selector='representedObject'>
      <retval type='@' />
    </method>
    <method selector='resetCursorRect:inView:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='selectWithFrame:inView:editor:delegate:start:length:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' type='i' type64='q' />
      <arg index='5' type='i' type64='q' />
    </method>
    <method selector='sendActionOn:'>
      <retval type='i' type64='q' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='sendsActionOnEndEditing'>
      <retval type='B' />
    </method>
    <method selector='setAction:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setAlignment:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setAllowsEditingTextAttributes:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAllowsMixedState:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAllowsUndo:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAttributedStringValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBackgroundStyle:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setBaseWritingDirection:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setBezeled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setBordered:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setCellAttribute:to:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setContinuous:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setControlSize:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setControlTint:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setControlView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDoubleValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setEditable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setEntryType:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setFloatValue:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
    <method selector='setFloatingPointFormat:left:right:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='setFocusRingType:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFormatter:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHighlighted:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setImportsGraphics:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setIntValue:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setIntegerValue:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setLineBreakMode:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setMenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMnemonicLocation:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setNextState'>
      <retval type='v' />
    </method>
    <method selector='setObjectValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setRefusesFirstResponder:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setRepresentedObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setScrollable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSelectable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSendsActionOnEndEditing:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setShowsFirstResponder:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setState:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setStringValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTag:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setTarget:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleWithMnemonic:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTruncatesLastVisibleLine:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setType:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setUpFieldEditorAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='setWraps:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='showsFirstResponder'>
      <retval type='B' />
    </method>
    <method selector='startTrackingAt:inView:'>
      <retval type='B' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='@' />
    </method>
    <method selector='state'>
      <retval type='i' type64='q' />
    </method>
    <method selector='stopTracking:at:inView:mouseIsUp:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='@' />
      <arg index='3' type='B' />
    </method>
    <method selector='stringValue'>
      <retval type='@' />
    </method>
    <method selector='tag'>
      <retval type='i' type64='q' />
    </method>
    <method selector='takeDoubleValueFrom:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='takeFloatValueFrom:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='takeIntValueFrom:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='takeIntegerValueFrom:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='takeObjectValueFrom:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='takeStringValueFrom:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='target'>
      <retval type='@' />
    </method>
    <method selector='title'>
      <retval type='@' />
    </method>
    <method selector='titleRectForBounds:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='trackMouse:inRect:ofView:untilMouseUp:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
      <arg index='3' type='B' />
    </method>
    <method selector='type'>
      <retval type='I' />
    </method>
    <method selector='wantsNotificationForMarkedText'>
      <retval type='B' />
    </method>
    <method selector='wraps'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSClipView'>
    <method selector='autoscroll:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='copiesOnScroll'>
      <retval type='B' />
    </method>
    <method selector='documentCursor'>
      <retval type='@' />
    </method>
    <method selector='documentRect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='documentView'>
      <retval type='@' />
    </method>
    <method selector='documentVisibleRect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='drawsBackground'>
      <retval type='B' />
    </method>
    <method selector='onstrainScrollPoint:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='scrollToPoint:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCopiesOnScroll:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDocumentCursor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDocumentView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDrawsBackground:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='viewBoundsChanged:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='viewFrameChanged:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSCoder'>
    <method selector='decodeNXColor'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSCollectionView'>
    <method selector='allowsMultipleSelection'>
      <retval type='B' />
    </method>
    <method selector='backgroundColors'>
      <retval type='@' />
    </method>
    <method selector='content'>
      <retval type='@' />
    </method>
    <method selector='isFirstResponder'>
      <retval type='B' />
    </method>
    <method selector='isSelectable'>
      <retval type='B' />
    </method>
    <method selector='itemPrototype'>
      <retval type='@' />
    </method>
    <method selector='maxItemSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='maxNumberOfColumns'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='maxNumberOfRows'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='minItemSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='newItemForRepresentedObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectionIndexes'>
      <retval type='@' />
    </method>
    <method selector='setAllowsMultipleSelection:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setBackgroundColors:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setContent:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setItemPrototype:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMaxItemSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setMaxNumberOfColumns:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setMaxNumberOfRows:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setMinItemSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setSelectable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSelectionIndexes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSCollectionViewItem'>
    <method selector='collectionView'>
      <retval type='@' />
    </method>
    <method selector='isSelected'>
      <retval type='B' />
    </method>
    <method selector='representedObject'>
      <retval type='@' />
    </method>
    <method selector='setRepresentedObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSelected:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='view'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSColor'>
    <method selector='alphaComponent'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='alternateSelectedControlColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='alternateSelectedControlTextColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='blackColor'>
      <retval type='@' />
    </method>
    <method selector='blackComponent'>
      <retval type='f' type64='d' />
    </method>
    <method selector='blendedColorWithFraction:ofColor:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='blueColor'>
      <retval type='@' />
    </method>
    <method selector='blueComponent'>
      <retval type='f' type64='d' />
    </method>
    <method selector='brightnessComponent'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='brownColor'>
      <retval type='@' />
    </method>
    <method selector='catalogNameComponent'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='clearColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='colorForControlTint:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method class_method='true' selector='colorFromPasteboard:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='colorNameComponent'>
      <retval type='@' />
    </method>
    <method selector='colorSpace'>
      <retval type='@' />
    </method>
    <method selector='colorSpaceName'>
      <retval type='@' />
    </method>
    <method selector='colorUsingColorSpace:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='colorUsingColorSpaceName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='colorUsingColorSpaceName:device:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='colorWithAlphaComponent:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method class_method='true' selector='colorWithCIColor:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='colorWithCalibratedHue:saturation:brightness:alpha:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='f' type64='d' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method class_method='true' selector='colorWithCalibratedRed:green:blue:alpha:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='f' type64='d' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method class_method='true' selector='colorWithCalibratedWhite:alpha:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='f' type64='d' />
    </method>
    <method class_method='true' selector='colorWithCatalogName:colorName:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='colorWithColorSpace:components:count:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method class_method='true' selector='colorWithDeviceCyan:magenta:yellow:black:alpha:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='f' type64='d' />
      <arg index='3' type='f' type64='d' />
      <arg index='4' type='f' type64='d' />
    </method>
    <method class_method='true' selector='colorWithDeviceHue:saturation:brightness:alpha:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='f' type64='d' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method class_method='true' selector='colorWithDeviceRed:green:blue:alpha:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='f' type64='d' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method class_method='true' selector='colorWithDeviceWhite:alpha:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='f' type64='d' />
    </method>
    <method class_method='true' selector='colorWithPatternImage:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='controlAlternatingRowBackgroundColors'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='controlBackgroundColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='controlColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='controlDarkShadowColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='controlHighlightColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='controlLightHighlightColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='controlShadowColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='controlTextColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='currentControlTint'>
      <retval type='I' />
    </method>
    <method class_method='true' selector='cyanColor'>
      <retval type='@' />
    </method>
    <method selector='cyanComponent'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='darkGrayColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='disabledControlTextColor'>
      <retval type='@' />
    </method>
    <method selector='drawSwatchInRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='getComponents:'>
      <retval type='v' />
      <arg index='0' type='^f' type64='^d' type_modifier='o' c_array_of_variable_length='true' />
    </method>
    <method selector='getCyan:magenta:yellow:black:alpha:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
      <arg index='4' type_modifier='o' />
    </method>
    <method selector='getHue:saturation:brightness:alpha:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='getRed:green:blue:alpha:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='getWhite:alpha:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
    </method>
    <method class_method='true' selector='grayColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='greenColor'>
      <retval type='@' />
    </method>
    <method selector='greenComponent'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='gridColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='headerColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='headerTextColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='highlightColor'>
      <retval type='@' />
    </method>
    <method selector='highlightWithLevel:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='hueComponent'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='ignoresAlpha'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='keyboardFocusIndicatorColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='knobColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='lightGrayColor'>
      <retval type='@' />
    </method>
    <method selector='localizedCatalogNameComponent'>
      <retval type='@' />
    </method>
    <method selector='localizedColorNameComponent'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='magentaColor'>
      <retval type='@' />
    </method>
    <method selector='magentaComponent'>
      <retval type='f' type64='d' />
    </method>
    <method selector='numberOfComponents'>
      <retval type='i' type64='q' />
    </method>
    <method class_method='true' selector='orangeColor'>
      <retval type='@' />
    </method>
    <method selector='patternImage'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='purpleColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='redColor'>
      <retval type='@' />
    </method>
    <method selector='redComponent'>
      <retval type='f' type64='d' />
    </method>
    <method selector='saturationComponent'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='scrollBarColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='secondarySelectedControlColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='selectedControlColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='selectedControlTextColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='selectedKnobColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='selectedMenuItemColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='selectedMenuItemTextColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='selectedTextBackgroundColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='selectedTextColor'>
      <retval type='@' />
    </method>
    <method selector='set'>
      <retval type='v' />
    </method>
    <method selector='setFill'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='setIgnoresAlpha:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setStroke'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='shadowColor'>
      <retval type='@' />
    </method>
    <method selector='shadowWithLevel:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method class_method='true' selector='textBackgroundColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='textColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='whiteColor'>
      <retval type='@' />
    </method>
    <method selector='whiteComponent'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='windowBackgroundColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='windowFrameColor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='windowFrameTextColor'>
      <retval type='@' />
    </method>
    <method selector='writeToPasteboard:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='yellowColor'>
      <retval type='@' />
    </method>
    <method selector='yellowComponent'>
      <retval type='f' type64='d' />
    </method>
  </class>
  <class name='NSColorList'>
    <method selector='allKeys'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='availableColorLists'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='colorListNamed:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='colorWithKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithName:fromFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='insertColor:key:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='isEditable'>
      <retval type='B' />
    </method>
    <method selector='name'>
      <retval type='@' />
    </method>
    <method selector='removeColorWithKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeFile'>
      <retval type='v' />
    </method>
    <method selector='setColor:forKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='writeToFile:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSColorPanel'>
    <method selector='accessoryView'>
      <retval type='@' />
    </method>
    <method selector='alpha'>
      <retval type='f' type64='d' />
    </method>
    <method selector='attachColorList:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='color'>
      <retval type='@' />
    </method>
    <method selector='detachColorList:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='dragColor:withEvent:fromView:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='isContinuous'>
      <retval type='B' />
    </method>
    <method selector='mode'>
      <retval type='i' />
    </method>
    <method selector='setAccessoryView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAction:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setContinuous:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setMode:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method class_method='true' selector='setPickerMask:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method class_method='true' selector='setPickerMode:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setShowsAlpha:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setTarget:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='sharedColorPanel'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='sharedColorPanelExists'>
      <retval type='B' />
    </method>
    <method selector='showsAlpha'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSColorPicker'>
    <method selector='attachColorList:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='buttonToolTip'>
      <retval type='@' />
    </method>
    <method selector='colorPanel'>
      <retval type='@' />
    </method>
    <method selector='detachColorList:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithPickerMask:colorPanel:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
    </method>
    <method selector='insertNewButtonImage:in:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='minContentSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='provideNewButtonImage'>
      <retval type='@' />
    </method>
    <method selector='setMode:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='viewSizeChanged:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSColorSpace'>
    <method selector='ICCProfileData'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='adobeRGB1998ColorSpace'>
      <retval type='@' />
    </method>
    <method selector='colorSpaceModel'>
      <retval type='i' />
    </method>
    <method class_method='true' selector='deviceCMYKColorSpace'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='deviceGrayColorSpace'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='deviceRGBColorSpace'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='genericCMYKColorSpace'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='genericGrayColorSpace'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='genericRGBColorSpace'>
      <retval type='@' />
    </method>
    <method selector='initWithCGColorSpace:'>
      <retval type='@' />
      <arg index='0' type='^{CGColorSpace=}' />
    </method>
    <method selector='initWithColorSyncProfile:'>
      <retval type='@' />
      <arg index='0' type='^{OpaqueCMProfileRef=}' />
    </method>
    <method selector='initWithICCProfileData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='localizedName'>
      <retval type='@' />
    </method>
    <method selector='numberOfColorComponents'>
      <retval type='i' type64='q' />
    </method>
    <method class_method='true' selector='sRGBColorSpace'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSColorWell'>
    <method selector='activate:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='color'>
      <retval type='@' />
    </method>
    <method selector='deactivate'>
      <retval type='v' />
    </method>
    <method selector='drawWellInside:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='isActive'>
      <retval type='B' />
    </method>
    <method selector='isBordered'>
      <retval type='B' />
    </method>
    <method selector='setBordered:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='takeColorFrom:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSComboBox'>
    <method selector='addItemWithObjectValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addItemsWithObjectValues:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='completes'>
      <retval type='B' />
    </method>
    <method selector='dataSource'>
      <retval type='@' />
    </method>
    <method selector='deselectItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='hasVerticalScroller'>
      <retval type='B' />
    </method>
    <method selector='indexOfItemWithObjectValue:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='indexOfSelectedItem'>
      <retval type='i' type64='q' />
    </method>
    <method selector='insertItemWithObjectValue:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='intercellSpacing'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='isButtonBordered'>
      <retval type='B' />
    </method>
    <method selector='itemHeight'>
      <retval type='f' type64='d' />
    </method>
    <method selector='itemObjectValueAtIndex:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='noteNumberOfItemsChanged'>
      <retval type='v' />
    </method>
    <method selector='numberOfItems'>
      <retval type='i' type64='q' />
    </method>
    <method selector='numberOfVisibleItems'>
      <retval type='i' type64='q' />
    </method>
    <method selector='objectValueOfSelectedItem'>
      <retval type='@' />
    </method>
    <method selector='objectValues'>
      <retval type='@' />
    </method>
    <method selector='reloadData'>
      <retval type='v' />
    </method>
    <method selector='removeAllItems'>
      <retval type='v' />
    </method>
    <method selector='removeItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='removeItemWithObjectValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='scrollItemAtIndexToTop:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='scrollItemAtIndexToVisible:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectItemWithObjectValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setButtonBordered:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setCompletes:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDataSource:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHasVerticalScroller:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setIntercellSpacing:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setItemHeight:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setNumberOfVisibleItems:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setUsesDataSource:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='usesDataSource'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSComboBoxCell'>
    <method selector='addItemWithObjectValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addItemsWithObjectValues:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='completedString:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='completes'>
      <retval type='B' />
    </method>
    <method selector='dataSource'>
      <retval type='@' />
    </method>
    <method selector='deselectItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='hasVerticalScroller'>
      <retval type='B' />
    </method>
    <method selector='indexOfItemWithObjectValue:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='indexOfSelectedItem'>
      <retval type='i' type64='q' />
    </method>
    <method selector='insertItemWithObjectValue:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='intercellSpacing'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='isButtonBordered'>
      <retval type='B' />
    </method>
    <method selector='itemHeight'>
      <retval type='f' type64='d' />
    </method>
    <method selector='itemObjectValueAtIndex:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='noteNumberOfItemsChanged'>
      <retval type='v' />
    </method>
    <method selector='numberOfItems'>
      <retval type='i' type64='q' />
    </method>
    <method selector='numberOfVisibleItems'>
      <retval type='i' type64='q' />
    </method>
    <method selector='objectValueOfSelectedItem'>
      <retval type='@' />
    </method>
    <method selector='objectValues'>
      <retval type='@' />
    </method>
    <method selector='reloadData'>
      <retval type='v' />
    </method>
    <method selector='removeAllItems'>
      <retval type='v' />
    </method>
    <method selector='removeItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='removeItemWithObjectValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='scrollItemAtIndexToTop:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='scrollItemAtIndexToVisible:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectItemWithObjectValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setButtonBordered:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setCompletes:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDataSource:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHasVerticalScroller:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setIntercellSpacing:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setItemHeight:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setNumberOfVisibleItems:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setUsesDataSource:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='usesDataSource'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSControl'>
    <method selector='abortEditing'>
      <retval type='B' />
    </method>
    <method selector='action'>
      <retval type=':' />
    </method>
    <method selector='alignment'>
      <retval type='I' />
    </method>
    <method selector='attributedStringValue'>
      <retval type='@' />
    </method>
    <method selector='baseWritingDirection'>
      <retval type='i' />
    </method>
    <method selector='calcSize'>
      <retval type='v' />
    </method>
    <method selector='cell'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='cellClass'>
      <retval type='#' />
    </method>
    <method selector='currentEditor'>
      <retval type='@' />
    </method>
    <method selector='doubleValue'>
      <retval type='d' />
    </method>
    <method selector='drawCell:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='drawCellInside:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='floatValue'>
      <retval type='f' />
    </method>
    <method selector='font'>
      <retval type='@' />
    </method>
    <method selector='formatter'>
      <retval type='@' />
    </method>
    <method selector='ignoresMultiClick'>
      <retval type='B' />
    </method>
    <method selector='initWithFrame:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='intValue'>
      <retval type='i' />
    </method>
    <method selector='integerValue'>
      <retval type='i' type64='q' />
    </method>
    <method selector='isContinuous'>
      <retval type='B' />
    </method>
    <method selector='isEnabled'>
      <retval type='B' />
    </method>
    <method selector='mouseDown:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='objectValue'>
      <retval type='@' />
    </method>
    <method selector='performClick:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='refusesFirstResponder'>
      <retval type='B' />
    </method>
    <method selector='selectCell:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectedCell'>
      <retval type='@' />
    </method>
    <method selector='selectedTag'>
      <retval type='i' type64='q' />
    </method>
    <method selector='sendAction:to:'>
      <retval type='B' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
    </method>
    <method selector='sendActionOn:'>
      <retval type='i' type64='q' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setAction:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setAlignment:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setAttributedStringValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBaseWritingDirection:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setCell:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setCellClass:'>
      <retval type='v' />
      <arg index='0' type='#' />
    </method>
    <method selector='setContinuous:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDoubleValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setFloatValue:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
    <method selector='setFloatingPointFormat:left:right:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='setFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFormatter:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setIgnoresMultiClick:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setIntValue:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setIntegerValue:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setNeedsDisplay'>
      <retval type='v' />
    </method>
    <method selector='setObjectValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setRefusesFirstResponder:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setStringValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTag:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setTarget:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='sizeToFit'>
      <retval type='v' />
    </method>
    <method selector='stringValue'>
      <retval type='@' />
    </method>
    <method selector='tag'>
      <retval type='i' type64='q' />
    </method>
    <method selector='takeDoubleValueFrom:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='takeFloatValueFrom:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='takeIntValueFrom:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='takeIntegerValueFrom:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='takeObjectValueFrom:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='takeStringValueFrom:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='target'>
      <retval type='@' />
    </method>
    <method selector='updateCell:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='updateCellInside:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='validateEditing'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSController'>
    <method selector='commitEditing'>
      <retval type='B' />
    </method>
    <method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='discardEditing'>
      <retval type='v' />
    </method>
    <method selector='isEditing'>
      <retval type='B' />
    </method>
    <method selector='objectDidBeginEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='objectDidEndEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSCursor'>
    <method class_method='true' selector='IBeamCursor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='arrowCursor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='closedHandCursor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='crosshairCursor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='currentCursor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='disappearingItemCursor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='hide'>
      <retval type='v' />
    </method>
    <method selector='hotSpot'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='image'>
      <retval type='@' />
    </method>
    <method selector='initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='initWithImage:hotSpot:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='isSetOnMouseEntered'>
      <retval type='B' />
    </method>
    <method selector='isSetOnMouseExited'>
      <retval type='B' />
    </method>
    <method selector='mouseEntered:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='mouseExited:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='openHandCursor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='pointingHandCursor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='pop'>
      <retval type='v' />
    </method>
    <method selector='pop'>
      <retval type='v' />
    </method>
    <method selector='push'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='resizeDownCursor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='resizeLeftCursor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='resizeLeftRightCursor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='resizeRightCursor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='resizeUpCursor'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='resizeUpDownCursor'>
      <retval type='@' />
    </method>
    <method selector='set'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='setHiddenUntilMouseMoves:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setOnMouseEntered:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setOnMouseExited:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='unhide'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSCustomImageRep'>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='drawSelector'>
      <retval type=':' />
    </method>
    <method selector='initWithDrawSelector:delegate:'>
      <retval type='@' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
    </method>
  </class>
  <class name='NSDatePicker'>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='calendar'>
      <retval type='@' />
    </method>
    <method selector='datePickerElements'>
      <retval type='I' />
    </method>
    <method selector='datePickerMode'>
      <retval type='I' />
    </method>
    <method selector='datePickerStyle'>
      <retval type='I' />
    </method>
    <method selector='dateValue'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='drawsBackground'>
      <retval type='B' />
    </method>
    <method selector='isBezeled'>
      <retval type='B' />
    </method>
    <method selector='isBordered'>
      <retval type='B' />
    </method>
    <method selector='locale'>
      <retval type='@' />
    </method>
    <method selector='maxDate'>
      <retval type='@' />
    </method>
    <method selector='minDate'>
      <retval type='@' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBezeled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setBordered:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setCalendar:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDatePickerElements:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setDatePickerMode:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setDatePickerStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setDateValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDrawsBackground:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setLocale:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMaxDate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMinDate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTextColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTimeInterval:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setTimeZone:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textColor'>
      <retval type='@' />
    </method>
    <method selector='timeInterval'>
      <retval type='d' />
    </method>
    <method selector='timeZone'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSDatePickerCell'>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='calendar'>
      <retval type='@' />
    </method>
    <method selector='datePickerElements'>
      <retval type='I' />
    </method>
    <method selector='datePickerMode'>
      <retval type='I' />
    </method>
    <method selector='datePickerStyle'>
      <retval type='I' />
    </method>
    <method selector='dateValue'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='drawsBackground'>
      <retval type='B' />
    </method>
    <method selector='locale'>
      <retval type='@' />
    </method>
    <method selector='maxDate'>
      <retval type='@' />
    </method>
    <method selector='minDate'>
      <retval type='@' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCalendar:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDatePickerElements:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setDatePickerMode:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setDatePickerStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setDateValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDrawsBackground:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setLocale:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMaxDate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMinDate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTextColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTimeInterval:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setTimeZone:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textColor'>
      <retval type='@' />
    </method>
    <method selector='timeInterval'>
      <retval type='d' />
    </method>
    <method selector='timeZone'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSDictionaryController'>
    <method selector='excludedKeys'>
      <retval type='@' />
    </method>
    <method selector='includedKeys'>
      <retval type='@' />
    </method>
    <method selector='initialKey'>
      <retval type='@' />
    </method>
    <method selector='initialValue'>
      <retval type='@' />
    </method>
    <method selector='localizedKeyDictionary'>
      <retval type='@' />
    </method>
    <method selector='localizedKeyTable'>
      <retval type='@' />
    </method>
    <method selector='newObject'>
      <retval type='@' />
    </method>
    <method selector='setExcludedKeys:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setIncludedKeys:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setInitialKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setInitialValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLocalizedKeyDictionary:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLocalizedKeyTable:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSDockTile'>
    <method selector='badgeLabel'>
      <retval type='@' />
    </method>
    <method selector='contentView'>
      <retval type='@' />
    </method>
    <method selector='display'>
      <retval type='v' />
    </method>
    <method selector='owner'>
      <retval type='@' />
    </method>
    <method selector='setBadgeLabel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setContentView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setShowsApplicationBadge:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='showsApplicationBadge'>
      <retval type='B' />
    </method>
    <method selector='size'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
  </class>
  <class name='NSDocument'>
    <method selector='addWindowController:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='autosavedContentsFileURL'>
      <retval type='@' />
    </method>
    <method selector='autosavingFileType'>
      <retval type='@' />
    </method>
    <method selector='canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='close'>
      <retval type='v' />
    </method>
    <method selector='dataOfType:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='dataRepresentationOfType:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='displayName'>
      <retval type='@' />
    </method>
    <method selector='fileAttributesToWriteToFile:ofType:saveOperation:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
    </method>
    <method selector='fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
      <arg index='3' type='@' />
      <arg index='4' type_modifier='o' />
    </method>
    <method selector='fileModificationDate'>
      <retval type='@' />
    </method>
    <method selector='fileName'>
      <retval type='@' />
    </method>
    <method selector='fileNameExtensionForType:saveOperation:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
    </method>
    <method selector='fileNameExtensionWasHiddenInLastRunSavePanel'>
      <retval type='B' />
    </method>
    <method selector='fileType'>
      <retval type='@' />
    </method>
    <method selector='fileTypeFromLastRunSavePanel'>
      <retval type='@' />
    </method>
    <method selector='fileURL'>
      <retval type='@' />
    </method>
    <method selector='fileWrapperOfType:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='fileWrapperRepresentationOfType:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='handleCloseScriptCommand:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='handlePrintScriptCommand:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='handleSaveScriptCommand:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='hasUnautosavedChanges'>
      <retval type='B' />
    </method>
    <method selector='hasUndoManager'>
      <retval type='B' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='initForURL:withContentsOfURL:ofType:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='initWithContentsOfFile:ofType:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithContentsOfURL:ofType:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithContentsOfURL:ofType:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithType:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='isDocumentEdited'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='isNativeType:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='keepBackupFile'>
      <retval type='B' />
    </method>
    <method selector='lastComponentOfFileName'>
      <retval type='@' />
    </method>
    <method selector='loadDataRepresentation:ofType:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='loadFileWrapperRepresentation:ofType:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='makeWindowControllers'>
      <retval type='v' />
    </method>
    <method selector='objectSpecifier'>
      <retval type='@' />
    </method>
    <method selector='preparePageLayout:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='prepareSavePanel:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='presentError:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' sel_of_type='v@:B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='printDocument:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
      <arg index='2' type='@' />
      <arg index='3' sel_of_type='v@:@B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='printInfo'>
      <retval type='@' />
    </method>
    <method selector='printOperationWithSettings:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='printShowingPrintPanel:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='readFromData:ofType:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='readFromFile:ofType:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='readFromFileWrapper:ofType:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='readFromURL:ofType:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='readFromURL:ofType:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method class_method='true' selector='readableTypes'>
      <retval type='@' />
    </method>
    <method selector='removeWindowController:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='revertDocumentToSaved:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='revertToContentsOfURL:ofType:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='revertToSavedFromFile:ofType:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='revertToSavedFromURL:ofType:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='runModalPageLayoutWithPrintInfo:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' sel_of_type='v@:@B^v' />
      <arg index='3' type='^v' />
    </method>
    <method selector='runModalPrintOperation:delegate:didRunSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' sel_of_type='v@:@B^v' />
      <arg index='3' type='^v' />
    </method>
    <method selector='runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='@' />
      <arg index='2' sel_of_type='v@:@B^v' />
      <arg index='3' type='^v' />
    </method>
    <method selector='runPageLayout:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='saveDocument:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='saveDocumentAs:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='saveDocumentTo:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='saveDocumentWithDelegate:didSaveSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='@' />
      <arg index='3' sel_of_type='v@:@B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
      <arg index='3' type='@' />
      <arg index='4' sel_of_type='v@:@B^v' />
      <arg index='5' type='^v' />
    </method>
    <method selector='saveToURL:ofType:forSaveOperation:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='setAutosavedContentsFileURL:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFileModificationDate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFileName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFileType:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFileURL:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHasUndoManager:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setLastComponentOfFileName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPrintInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setUndoManager:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setWindow:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='shouldChangePrintInfo:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' sel_of_type='v@:@B^v' />
      <arg index='3' type='^v' />
    </method>
    <method selector='shouldRunSavePanelWithAccessoryView'>
      <retval type='B' />
    </method>
    <method selector='showWindows'>
      <retval type='v' />
    </method>
    <method selector='undoManager'>
      <retval type='@' />
    </method>
    <method selector='updateChangeCount:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='validateUserInterfaceItem:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='willPresentError:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowControllerDidLoadNib:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowControllerWillLoadNib:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowControllers'>
      <retval type='@' />
    </method>
    <method selector='windowForSheet'>
      <retval type='@' />
    </method>
    <method selector='windowNibName'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='writableTypes'>
      <retval type='@' />
    </method>
    <method selector='writableTypesForSaveOperation:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method selector='writeSafelyToURL:ofType:forSaveOperation:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='writeToFile:ofType:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='writeToFile:ofType:originalFile:saveOperation:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='I' />
    </method>
    <method selector='writeToURL:ofType:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='writeToURL:ofType:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='writeToURL:ofType:forSaveOperation:originalContentsURL:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
      <arg index='3' type='@' />
      <arg index='4' type_modifier='o' />
    </method>
    <method selector='writeWithBackupToFile:ofType:saveOperation:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
    </method>
  </class>
  <class name='NSDocumentController'>
    <method selector='URLsFromRunningOpenPanel'>
      <retval type='@' />
    </method>
    <method selector='addDocument:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='autosavingDelay'>
      <retval type='d' />
    </method>
    <method selector='clearRecentDocuments:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='currentDirectory'>
      <retval type='@' />
    </method>
    <method selector='currentDocument'>
      <retval type='@' />
    </method>
    <method selector='defaultType'>
      <retval type='@' />
    </method>
    <method selector='displayNameForType:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='documentClassForType:'>
      <retval type='#' />
      <arg index='0' type='@' />
    </method>
    <method selector='documentClassNames'>
      <retval type='@' />
    </method>
    <method selector='documentForFileName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='documentForURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='documentForWindow:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='documents'>
      <retval type='@' />
    </method>
    <method selector='fileExtensionsFromType:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='fileNamesFromRunningOpenPanel'>
      <retval type='@' />
    </method>
    <method selector='hasEditedDocuments'>
      <retval type='B' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='makeDocumentForURL:withContentsOfURL:ofType:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='makeDocumentWithContentsOfFile:ofType:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='makeDocumentWithContentsOfURL:ofType:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='makeDocumentWithContentsOfURL:ofType:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='makeUntitledDocumentOfType:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='makeUntitledDocumentOfType:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='maximumRecentDocumentCount'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='newDocument:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='noteNewRecentDocument:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='noteNewRecentDocumentURL:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='openDocument:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='openDocumentWithContentsOfFile:display:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='openDocumentWithContentsOfURL:display:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='openDocumentWithContentsOfURL:display:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='openUntitledDocumentAndDisplay:error:'>
      <retval type='@' />
      <arg index='0' type='B' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='openUntitledDocumentOfType:display:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='presentError:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' sel_of_type='v@:B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='recentDocumentURLs'>
      <retval type='@' />
    </method>
    <method selector='removeDocument:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='reopenDocumentForURL:withContentsOfURL:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
      <arg index='2' type='@' />
      <arg index='3' sel_of_type='v@:@B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='runModalOpenPanel:forTypes:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='saveAllDocuments:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAutosavingDelay:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setShouldCreateUI:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='sharedDocumentController'>
      <retval type='@' />
    </method>
    <method selector='shouldCreateUI'>
      <retval type='B' />
    </method>
    <method selector='typeForContentsOfURL:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='typeFromFileExtension:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='validateUserInterfaceItem:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='willPresentError:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSDrawer'>
    <method selector='close'>
      <retval type='v' />
    </method>
    <method selector='close:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='contentSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='contentView'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='edge'>
      <retval type='i' type64='Q' />
    </method>
    <method selector='initWithContentSize:preferredEdge:'>
      <retval type='@' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='1' type='i' type64='Q' />
    </method>
    <method selector='leadingOffset'>
      <retval type='f' type64='d' />
    </method>
    <method selector='maxContentSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='minContentSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='open'>
      <retval type='v' />
    </method>
    <method selector='open:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='openOnEdge:'>
      <retval type='v' />
      <arg index='0' type='i' type64='Q' />
    </method>
    <method selector='parentWindow'>
      <retval type='@' />
    </method>
    <method selector='preferredEdge'>
      <retval type='i' type64='Q' />
    </method>
    <method selector='setContentSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setContentView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLeadingOffset:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setMaxContentSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setMinContentSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setParentWindow:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPreferredEdge:'>
      <retval type='v' />
      <arg index='0' type='i' type64='Q' />
    </method>
    <method selector='setTrailingOffset:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='state'>
      <retval type='i' type64='q' />
    </method>
    <method selector='toggle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='trailingOffset'>
      <retval type='f' type64='d' />
    </method>
  </class>
  <class name='NSEPSImageRep'>
    <method selector='EPSRepresentation'>
      <retval type='@' />
    </method>
    <method selector='boundingBox'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method class_method='true' selector='imageRepWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='prepareGState'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSEvent'>
    <method selector='absoluteX'>
      <retval type='i' type64='q' />
    </method>
    <method selector='absoluteY'>
      <retval type='i' type64='q' />
    </method>
    <method selector='absoluteZ'>
      <retval type='i' type64='q' />
    </method>
    <method selector='buttonMask'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='buttonNumber'>
      <retval type='i' type64='q' />
    </method>
    <method selector='capabilityMask'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='characters'>
      <retval type='@' />
    </method>
    <method selector='charactersIgnoringModifiers'>
      <retval type='@' />
    </method>
    <method selector='clickCount'>
      <retval type='i' type64='q' />
    </method>
    <method selector='context'>
      <retval type='@' />
    </method>
    <method selector='data1'>
      <retval type='i' type64='q' />
    </method>
    <method selector='data2'>
      <retval type='i' type64='q' />
    </method>
    <method selector='deltaX'>
      <retval type='f' type64='d' />
    </method>
    <method selector='deltaY'>
      <retval type='f' type64='d' />
    </method>
    <method selector='deltaZ'>
      <retval type='f' type64='d' />
    </method>
    <method selector='deviceID'>
      <retval type='I' type64='Q' />
    </method>
    <method class_method='true' selector='enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='d' />
      <arg index='4' type='i' type64='q' />
      <arg index='5' type='@' />
      <arg index='6' type='i' type64='q' />
      <arg index='7' type='i' type64='q' />
      <arg index='8' type='^v' />
    </method>
    <method selector='eventNumber'>
      <retval type='i' type64='q' />
    </method>
    <method class_method='true' selector='eventWithCGEvent:'>
      <retval type='@' />
      <arg index='0' type='^{__CGEvent=}' />
    </method>
    <method class_method='true' selector='eventWithEventRef:'>
      <retval type='@' />
      <arg index='0' type='r^{OpaqueEventRef=}' />
    </method>
    <method selector='isARepeat'>
      <retval type='B' />
    </method>
    <method selector='isEnteringProximity'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='isMouseCoalescingEnabled'>
      <retval type='B' />
    </method>
    <method selector='keyCode'>
      <retval type='S' />
    </method>
    <method class_method='true' selector='keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='d' />
      <arg index='4' type='i' type64='q' />
      <arg index='5' type='@' />
      <arg index='6' type='@' />
      <arg index='7' type='@' />
      <arg index='8' type='B' />
      <arg index='9' type='S' />
    </method>
    <method selector='locationInWindow'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='modifierFlags'>
      <retval type='I' type64='Q' />
    </method>
    <method class_method='true' selector='mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='d' />
      <arg index='4' type='i' type64='q' />
      <arg index='5' type='@' />
      <arg index='6' type='i' type64='q' />
      <arg index='7' type='i' type64='q' />
      <arg index='8' type='f' />
    </method>
    <method class_method='true' selector='mouseLocation'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method class_method='true' selector='otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='d' />
      <arg index='4' type='i' type64='q' />
      <arg index='5' type='@' />
      <arg index='6' type='s' />
      <arg index='7' type='i' type64='q' />
      <arg index='8' type='i' type64='q' />
    </method>
    <method selector='pointingDeviceID'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='pointingDeviceSerialNumber'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='pointingDeviceType'>
      <retval type='I' />
    </method>
    <method selector='pressure'>
      <retval type='f' />
    </method>
    <method selector='rotation'>
      <retval type='f' />
    </method>
    <method class_method='true' selector='setMouseCoalescingEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='startPeriodicEventsAfterDelay:withPeriod:'>
      <retval type='v' />
      <arg index='0' type='d' />
      <arg index='1' type='d' />
    </method>
    <method class_method='true' selector='stopPeriodicEvents'>
      <retval type='v' />
    </method>
    <method selector='subtype'>
      <retval type='s' />
    </method>
    <method selector='systemTabletID'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='tabletID'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='tangentialPressure'>
      <retval type='f' />
    </method>
    <method selector='tilt'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='timestamp'>
      <retval type='d' />
    </method>
    <method selector='trackingArea'>
      <retval type='@' />
    </method>
    <method selector='trackingNumber'>
      <retval type='i' type64='q' />
    </method>
    <method selector='type'>
      <retval type='I' />
    </method>
    <method selector='uniqueID'>
      <retval type='Q' />
    </method>
    <method selector='vendorDefined'>
      <retval type='@' />
    </method>
    <method selector='vendorID'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='vendorPointingDeviceType'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='window'>
      <retval type='@' />
    </method>
    <method selector='windowNumber'>
      <retval type='i' type64='q' />
    </method>
  </class>
  <class name='NSFileWrapper'>
    <method selector='addFileWithPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='addFileWrapper:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='addRegularFileWithContents:preferredFilename:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='addSymbolicLinkWithDestination:preferredFilename:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='fileAttributes'>
      <retval type='@' />
    </method>
    <method selector='fileWrappers'>
      <retval type='@' />
    </method>
    <method selector='filename'>
      <retval type='@' />
    </method>
    <method selector='icon'>
      <retval type='@' />
    </method>
    <method selector='initDirectoryWithFileWrappers:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initRegularFileWithContents:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initSymbolicLinkWithDestination:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithSerializedRepresentation:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isDirectory'>
      <retval type='B' />
    </method>
    <method selector='isRegularFile'>
      <retval type='B' />
    </method>
    <method selector='isSymbolicLink'>
      <retval type='B' />
    </method>
    <method selector='keyForFileWrapper:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='needsToBeUpdatedFromPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='preferredFilename'>
      <retval type='@' />
    </method>
    <method selector='regularFileContents'>
      <retval type='@' />
    </method>
    <method selector='removeFileWrapper:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='serializedRepresentation'>
      <retval type='@' />
    </method>
    <method selector='setFileAttributes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFilename:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setIcon:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPreferredFilename:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='symbolicLinkDestination'>
      <retval type='@' />
    </method>
    <method selector='updateFromPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='writeToFile:atomically:updateFilenames:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
      <arg index='2' type='B' />
    </method>
  </class>
  <class name='NSFont'>
    <method selector='matrix'>
      <retval c_array_of_fixed_length='6' />
    </method>
    <method selector='isBaseFont'>
      <retval type='B' />
    </method>
    <method selector=''>
      <retval type='B' type64='d' />
    </method>
    <method class_method='true' selector=''>
      <retval type='B' />
    </method>
    <method selector=''>
      <retval type='B' />
    </method>
    <method selector=''>
      <retval type='B' />
    </method>
    <method selector='advancementForGlyph:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='I' />
    </method>
    <method selector='ascender'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='boldSystemFontOfSize:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='boundingRectForFont'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='boundingRectForGlyph:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='I' />
    </method>
    <method selector='capHeight'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='controlContentFontOfSize:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='coveredCharacterSet'>
      <retval type='@' />
    </method>
    <method selector='descender'>
      <retval type='f' type64='d' />
    </method>
    <method selector='displayName'>
      <retval type='@' />
    </method>
    <method selector='familyName'>
      <retval type='@' />
    </method>
    <method selector='fontDescriptor'>
      <retval type='@' />
    </method>
    <method selector='fontName'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='fontWithDescriptor:size:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='f' type64='d' />
    </method>
    <method class_method='true' selector='fontWithDescriptor:textTransform:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='fontWithName:matrix:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg c_array_of_fixed_length='6' index='1' type_modifier='n' />
    </method>
    <method class_method='true' selector='fontWithName:size:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='f' type64='d' />
    </method>
    <method selector='getAdvancements:forGlyphs:count:'>
      <retval type='v' />
      <arg c_array_length_in_arg='2' index='0' type_modifier='o' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='getAdvancements:forPackedGlyphs:length:'>
      <retval type='v' />
      <arg c_array_length_in_arg='2' index='0' type_modifier='o' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='getBoundingRects:forGlyphs:count:'>
      <retval type='v' />
      <arg c_array_length_in_arg='2' index='0' type_modifier='o' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='glyphIsEncoded:'>
      <retval type='B' />
      <arg index='0' type='I' />
    </method>
    <method selector='glyphWithName:'>
      <retval type='I' />
      <arg index='0' type='@' />
    </method>
    <method selector='isFixedPitch'>
      <retval type='B' />
    </method>
    <method selector='italicAngle'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='labelFontOfSize:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method class_method='true' selector='labelFontSize'>
      <retval type='f' type64='d' />
    </method>
    <method selector='leading'>
      <retval type='f' type64='d' />
    </method>
    <method selector='maximumAdvancement'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method class_method='true' selector='menuBarFontOfSize:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method class_method='true' selector='menuFontOfSize:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method class_method='true' selector='messageFontOfSize:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='mostCompatibleStringEncoding'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='numberOfGlyphs'>
      <retval type='I' type64='Q' />
    </method>
    <method class_method='true' selector='paletteFontOfSize:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='pointSize'>
      <retval type='f' type64='d' />
    </method>
    <method selector='positionOfGlyph:forCharacter:struckOverRect:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='positionOfGlyph:precededByGlyph:isNominal:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='^B' type_modifier='o' />
    </method>
    <method selector='positionOfGlyph:struckOverGlyph:metricsExist:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='^B' type_modifier='o' />
    </method>
    <method selector='positionOfGlyph:struckOverRect:metricsExist:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='^B' type_modifier='o' />
    </method>
    <method selector='positionOfGlyph:withRelation:toBaseGlyph:totalAdvancement:metricsExist:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='3' type_modifier='o' />
      <arg index='4' type='^B' type_modifier='o'/>
    </method>
    <method selector='positionsForCompositeSequence:numberOfGlyphs:pointArray:'>
      <retval type='i' type64='q' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' />
      <arg index='1' type='i' type64='q' />
      <arg c_array_length_in_arg='1' index='2' type_modifier='o' />
    </method>
    <method selector='printerFont'>
      <retval type='@' />
    </method>
    <method selector='renderingMode'>
      <retval type='I' />
    </method>
    <method selector='screenFont'>
      <retval type='@' />
    </method>
    <method selector='screenFontWithRenderingMode:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method selector='set'>
      <retval type='v' />
    </method>
    <method selector='setInContext:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setPreferredFontNames:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setUserFixedPitchFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setUserFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='smallSystemFontSize'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='systemFontOfSize:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method class_method='true' selector='systemFontSize'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='systemFontSizeForControlSize:'>
      <retval type='f' type64='d' />
      <arg index='0' type='I' />
    </method>
    <method selector='textTransform'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='titleBarFontOfSize:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method class_method='true' selector='toolTipsFontOfSize:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='underlinePosition'>
      <retval type='f' type64='d' />
    </method>
    <method selector='underlineThickness'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='useFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='userFixedPitchFontOfSize:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method class_method='true' selector='userFontOfSize:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='widthOfString:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
    </method>
    <method selector='xHeight'>
      <retval type='f' type64='d' />
    </method>
  </class>
  <class name='NSFontDescriptor'>
    <method selector='fontAttributes'>
      <retval type='@' />
    </method>
    <method selector='fontDescriptorByAddingAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='fontDescriptorWithFace:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='fontDescriptorWithFamily:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='fontDescriptorWithFontAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='fontDescriptorWithMatrix:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='fontDescriptorWithName:matrix:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='fontDescriptorWithName:size:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='f' type64='d' />
    </method>
    <method selector='fontDescriptorWithSize:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='fontDescriptorWithSymbolicTraits:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method selector='initWithFontAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='matchingFontDescriptorWithMandatoryKeys:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='matchingFontDescriptorsWithMandatoryKeys:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='matrix'>
      <retval type='@' />
    </method>
    <method selector='objectForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='pointSize'>
      <retval type='f' type64='d' />
    </method>
    <method selector='postscriptName'>
      <retval type='@' />
    </method>
    <method selector='symbolicTraits'>
      <retval type='I' />
    </method>
  </class>
  <class name='NSFontManager'>
    <method selector='action'>
      <retval type=':' />
    </method>
    <method selector='addCollection:options:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='addFontDescriptors:toCollection:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='addFontTrait:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='availableFontFamilies'>
      <retval type='@' />
    </method>
    <method selector='availableFontNamesMatchingFontDescriptor:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='availableFontNamesWithTraits:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method selector='availableFonts'>
      <retval type='@' />
    </method>
    <method selector='availableMembersOfFontFamily:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='collectionNames'>
      <retval type='@' />
    </method>
    <method selector='convertAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='convertFont:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='convertFont:toFace:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='convertFont:toFamily:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='convertFont:toHaveTrait:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
    </method>
    <method selector='convertFont:toNotHaveTrait:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
    </method>
    <method selector='convertFont:toSize:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='f' type64='d' />
    </method>
    <method selector='convertFontTraits:'>
      <retval type='I' />
      <arg index='0' type='I' />
    </method>
    <method selector='convertWeight:ofFont:'>
      <retval type='@' />
      <arg index='0' type='B' />
      <arg index='1' type='@' />
    </method>
    <method selector='currentFontAction'>
      <retval type='I' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='fontDescriptorsInCollection:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='fontMenu:'>
      <retval type='@' />
      <arg index='0' type='B' />
    </method>
    <method selector='fontNamed:hasTraits:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
    </method>
    <method selector='fontPanel:'>
      <retval type='@' />
      <arg index='0' type='B' />
    </method>
    <method selector='fontWithFamily:traits:weight:size:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method selector='isEnabled'>
      <retval type='B' />
    </method>
    <method selector='isMultiple'>
      <retval type='B' />
    </method>
    <method selector='localizedNameForFamily:face:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='modifyFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='modifyFontViaPanel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='orderFrontFontPanel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='orderFrontStylesPanel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeCollection:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeFontDescriptor:fromCollection:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='removeFontTrait:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectedFont'>
      <retval type='@' />
    </method>
    <method selector='sendAction'>
      <retval type='B' />
    </method>
    <method selector='setAction:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='setFontManagerFactory:'>
      <retval type='v' />
      <arg index='0' type='#' />
    </method>
    <method selector='setFontMenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setFontPanelFactory:'>
      <retval type='v' />
      <arg index='0' type='#' />
    </method>
    <method selector='setSelectedAttributes:isMultiple:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='setSelectedFont:isMultiple:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='setTarget:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='sharedFontManager'>
      <retval type='@' />
    </method>
    <method selector='target'>
      <retval type='@' />
    </method>
    <method selector='traitsOfFont:'>
      <retval type='I' />
      <arg index='0' type='@' />
    </method>
    <method selector='weightOfFont:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSFontPanel'>
    <method selector='accessoryView'>
      <retval type='@' />
    </method>
    <method selector='isEnabled'>
      <retval type='B' />
    </method>
    <method selector='panelConvertFont:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='reloadDefaultFontFamilies'>
      <retval type='v' />
    </method>
    <method selector='setAccessoryView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setPanelFont:isMultiple:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method class_method='true' selector='sharedFontPanel'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='sharedFontPanelExists'>
      <retval type='B' />
    </method>
    <method selector='worksWhenModal'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSForm'>
    <method selector='addEntry:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='cellAtIndex:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='drawCellAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='indexOfCellWithTag:'>
      <retval type='i' type64='q' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='indexOfSelectedItem'>
      <retval type='i' type64='q' />
    </method>
    <method selector='insertEntry:atIndex:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='removeEntryAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectTextAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setBezeled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setBordered:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setEntryWidth:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setFrameSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setInterlineSpacing:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setTextAlignment:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setTextBaseWritingDirection:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setTextFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleAlignment:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setTitleBaseWritingDirection:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setTitleFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSFormCell'>
    <method selector='attributedTitle'>
      <retval type='@' />
    </method>
    <method selector='initTextCell:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isOpaque'>
      <retval type='B' />
    </method>
    <method selector='placeholderAttributedString'>
      <retval type='@' />
    </method>
    <method selector='placeholderString'>
      <retval type='@' />
    </method>
    <method selector='setAttributedTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPlaceholderAttributedString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPlaceholderString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleAlignment:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setTitleBaseWritingDirection:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setTitleFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleWidth:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setTitleWithMnemonic:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='title'>
      <retval type='@' />
    </method>
    <method selector='titleAlignment'>
      <retval type='I' />
    </method>
    <method selector='titleBaseWritingDirection'>
      <retval type='i' />
    </method>
    <method selector='titleFont'>
      <retval type='@' />
    </method>
    <method selector='titleWidth'>
      <retval type='f' type64='d' />
    </method>
    <method selector='titleWidth:'>
      <retval type='f' type64='d' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
  </class>
  <class name='NSGlyphGenerator'>
    <method selector='generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:'>
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
    <method class_method='true' selector='sharedGlyphGenerator'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSGlyphInfo'>
    <method selector='characterCollection'>
      <retval type='I' />
    </method>
    <method selector='characterIdentifier'>
      <retval type='I' type64='Q' />
    </method>
    <method class_method='true' selector='glyphInfoWithCharacterIdentifier:collection:baseString:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='I' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='glyphInfoWithGlyph:forFont:baseString:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='glyphInfoWithGlyphName:forFont:baseString:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='glyphName'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSGradient'>
    <method selector='colorSpace'>
      <retval type='@' />
    </method>
    <method selector='drawFromCenter:radius:toCenter:radius:options:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='3' type='f' type64='d' />
      <arg index='4' type='I' />
    </method>
    <method selector='drawFromPoint:toPoint:options:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='I' />
    </method>
    <method selector='drawInBezierPath:angle:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='f' type64='d' />
    </method>
    <method selector='drawInBezierPath:relativeCenterPosition:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='drawInRect:angle:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='f' type64='d' />
    </method>
    <method selector='drawInRect:relativeCenterPosition:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='getColor:location:atIndex:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='initWithColors:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithColors:atLocations:colorSpace:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg c_array_length_in_arg='0' index='1' type_modifier='n' />
      <arg index='2' type='@' />
    </method>
    <method selector='initWithColorsAndLocations:' suggestion='use initWithColors:atLocation:colorSpace:' variadic='true' />
    <method selector='initWithStartingColor:endingColor:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='interpolatedColorAtLocation:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='numberOfColorStops'>
      <retval type='i' type64='q' />
    </method>
  </class>
  <class name='NSGraphicsContext'>
    <method selector='CIContext'>
      <retval type='@' />
    </method>
    <method selector='attributes'>
      <retval type='@' />
    </method>
    <method selector='colorRenderingIntent'>
      <retval type='i' />
    </method>
    <method selector='compositingOperation'>
      <retval type='I' />
    </method>
    <method class_method='true' selector='currentContext'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='currentContextDrawingToScreen'>
      <retval type='B' />
    </method>
    <method selector='flushGraphics'>
      <retval type='v' />
    </method>
    <method selector='focusStack'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='graphicsContextWithAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='graphicsContextWithBitmapImageRep:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='graphicsContextWithGraphicsPort:flipped:'>
      <retval type='@' />
      <arg index='0' type='^{CGContext=}' />
      <arg index='1' type='B' />
    </method>
    <method selector='graphicsPort'>
	    <retval type='^{CGContext=}' />
    </method>
    <method class_method='true' selector='graphicsContextWithWindow:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='imageInterpolation'>
      <retval type='I' />
    </method>
    <method selector='isDrawingToScreen'>
      <retval type='B' />
    </method>
    <method selector='isFlipped'>
      <retval type='B' />
    </method>
    <method selector='patternPhase'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method class_method='true' selector='restoreGraphicsState'>
      <retval type='v' />
    </method>
    <method selector='restoreGraphicsState'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='saveGraphicsState'>
      <retval type='v' />
    </method>
    <method selector='saveGraphicsState'>
      <retval type='v' />
    </method>
    <method selector='setColorRenderingIntent:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setCompositingOperation:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method class_method='true' selector='setCurrentContext:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFocusStack:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setGraphicsState:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setImageInterpolation:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setPatternPhase:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='setShouldAntialias:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='shouldAntialias'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSHelpManager'>
    <method selector='contextHelpForObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='findString:inBook:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='isContextHelpModeActive'>
      <retval type='B' />
    </method>
    <method selector='openHelpAnchor:inBook:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='removeContextHelpForObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setContextHelp:forObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='setContextHelpModeActive:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='sharedHelpManager'>
      <retval type='@' />
    </method>
    <method selector='showContextHelpForObject:locationHint:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
  </class>
  <class name='NSImage'>
    <method selector='TIFFRepresentation'>
      <retval type='@' />
    </method>
    <method selector='TIFFRepresentationUsingCompression:factor:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='f' />
    </method>
    <method selector='addRepresentation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addRepresentations:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='alignmentRect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='bestRepresentationForDevice:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='cacheDepthMatchesImageDepth'>
      <retval type='B' />
    </method>
    <method selector='cacheMode'>
      <retval type='I' />
    </method>
    <method class_method='true' selector='canInitWithPasteboard:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='cancelIncrementalLoad'>
      <retval type='v' />
    </method>
    <method selector='compositeToPoint:fromRect:operation:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='I' />
    </method>
    <method selector='compositeToPoint:fromRect:operation:fraction:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='I' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method selector='compositeToPoint:operation:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='I' />
    </method>
    <method selector='compositeToPoint:operation:fraction:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='I' />
      <arg index='2' type='f' type64='d' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='dissolveToPoint:fraction:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='f' type64='d' />
    </method>
    <method selector='dissolveToPoint:fromRect:fraction:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='f' type64='d' />
    </method>
    <method selector='drawAtPoint:fromRect:operation:fraction:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='I' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method selector='drawInRect:fromRect:operation:fraction:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='I' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method selector='drawRepresentation:inRect:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method class_method='true' selector='imageFileTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='imageNamed:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='imagePasteboardTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='imageTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='imageUnfilteredFileTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='imageUnfilteredPasteboardTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='imageUnfilteredTypes'>
      <retval type='@' />
    </method>
    <method selector='initByReferencingFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initByReferencingURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithContentsOfFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithContentsOfURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithIconRef:'>
      <retval type='@' />
      <arg index='0' type='^{OpaqueIconRef=}' />
    </method>
    <method selector='initWithPasteboard:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithSize:'>
      <retval type='@' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='isCachedSeparately'>
      <retval type='B' />
    </method>
    <method selector='isDataRetained'>
      <retval type='B' />
    </method>
    <method selector='isFlipped'>
      <retval type='B' />
    </method>
    <method selector='isTemplate'>
      <retval type='B' />
    </method>
    <method selector='isValid'>
      <retval type='B' />
    </method>
    <method selector='lockFocus'>
      <retval type='v' />
    </method>
    <method selector='lockFocusOnRepresentation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='matchesOnMultipleResolution'>
      <retval type='B' />
    </method>
    <method selector='name'>
      <retval type='@' />
    </method>
    <method selector='prefersColorMatch'>
      <retval type='B' />
    </method>
    <method selector='recache'>
      <retval type='v' />
    </method>
    <method selector='removeRepresentation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='representations'>
      <retval type='@' />
    </method>
    <method selector='scalesWhenResized'>
      <retval type='B' />
    </method>
    <method selector='setAlignmentRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCacheDepthMatchesImageDepth:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setCacheMode:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setCachedSeparately:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDataRetained:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFlipped:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setMatchesOnMultipleResolution:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setName:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPrefersColorMatch:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setScalesWhenResized:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setTemplate:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setUsesEPSOnResolutionMismatch:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='size'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='unlockFocus'>
      <retval type='v' />
    </method>
    <method selector='usesEPSOnResolutionMismatch'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSImageCell'>
    <method selector='imageAlignment'>
      <retval type='I' />
    </method>
    <method selector='imageFrameStyle'>
      <retval type='I' />
    </method>
    <method selector='imageScaling'>
      <retval type='I' />
    </method>
    <method selector='setImageAlignment:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setImageFrameStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setImageScaling:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
  </class>
  <class name='NSImageRep'>
    <method selector='bitsPerSample'>
      <retval type='i' type64='q' />
    </method>
    <method class_method='true' selector='canInitWithData:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='canInitWithPasteboard:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='colorSpaceName'>
      <retval type='@' />
    </method>
    <method selector='draw'>
      <retval type='B' />
    </method>
    <method selector='drawAtPoint:'>
      <retval type='B' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='drawInRect:'>
      <retval type='B' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='hasAlpha'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='imageFileTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='imagePasteboardTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='imageRepClassForData:'>
      <retval type='#' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='imageRepClassForFileType:'>
      <retval type='#' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='imageRepClassForPasteboardType:'>
      <retval type='#' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='imageRepClassForType:'>
      <retval type='#' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='imageRepWithContentsOfFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='imageRepWithContentsOfURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='imageRepWithPasteboard:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='imageRepsWithContentsOfFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='imageRepsWithContentsOfURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='imageRepsWithPasteboard:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='imageTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='imageUnfilteredFileTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='imageUnfilteredPasteboardTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='imageUnfilteredTypes'>
      <retval type='@' />
    </method>
    <method selector='isOpaque'>
      <retval type='B' />
    </method>
    <method selector='pixelsHigh'>
      <retval type='i' type64='q' />
    </method>
    <method selector='pixelsWide'>
      <retval type='i' type64='q' />
    </method>
    <method class_method='true' selector='registerImageRepClass:'>
      <retval type='v' />
      <arg index='0' type='#' />
    </method>
    <method class_method='true' selector='registeredImageRepClasses'>
      <retval type='@' />
    </method>
    <method selector='setAlpha:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setBitsPerSample:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setColorSpaceName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setOpaque:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setPixelsHigh:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setPixelsWide:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='size'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method class_method='true' selector='unregisterImageRepClass:'>
      <retval type='v' />
      <arg index='0' type='#' />
    </method>
  </class>
  <class name='NSImageView'>
    <method selector='allowsCutCopyPaste'>
      <retval type='B' />
    </method>
    <method selector='animates'>
      <retval type='B' />
    </method>
    <method selector='image'>
      <retval type='@' />
    </method>
    <method selector='imageAlignment'>
      <retval type='I' />
    </method>
    <method selector='imageFrameStyle'>
      <retval type='I' />
    </method>
    <method selector='imageScaling'>
      <retval type='I' />
    </method>
    <method selector='isEditable'>
      <retval type='B' />
    </method>
    <method selector='setAllowsCutCopyPaste:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAnimates:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setEditable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setImageAlignment:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setImageFrameStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setImageScaling:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
  </class>
  <class name='NSInputManager'>
    <method class_method='true' selector='currentInputManager'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='cycleToNextInputLanguage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='cycleToNextInputServerInLanguage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='handleMouseEvent:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='image'>
      <retval type='@' />
    </method>
    <method selector='initWithName:host:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='language'>
      <retval type='@' />
    </method>
    <method selector='localizedInputManagerName'>
      <retval type='@' />
    </method>
    <method selector='markedTextAbandoned:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='markedTextSelectionChanged:client:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='server'>
      <retval type='@' />
    </method>
    <method selector='wantsToDelayTextChangeNotifications'>
      <retval type='B' />
    </method>
    <method selector='wantsToHandleMouseEvents'>
      <retval type='B' />
    </method>
    <method selector='wantsToInterpretAllKeystrokes'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSInputServer'>
    <method selector='initWithDelegate:name:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
  </class>
  <class name='NSLayoutManager'>
    <method selector='addTemporaryAttribute:value:forCharacterRange:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='addTemporaryAttributes:forCharacterRange:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='addTextContainer:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='allowsNonContiguousLayout'>
      <retval type='B' />
    </method>
    <method selector='attachmentSizeForGlyphAtIndex:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='attributedString'>
      <retval type='@' />
    </method>
    <method selector='backgroundLayoutEnabled'>
      <retval type='B' />
    </method>
    <method selector='boundingRectForGlyphRange:inTextContainer:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='boundsRectForTextBlock:atIndex:effectiveRange:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='boundsRectForTextBlock:glyphRange:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='characterIndexForGlyphAtIndex:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='characterRangeForGlyphRange:actualGlyphRange:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='defaultAttachmentScaling'>
      <retval type='I' />
    </method>
    <method selector='defaultBaselineOffsetForFont:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
    </method>
    <method selector='defaultLineHeightForFont:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='deleteGlyphsInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='drawBackgroundForGlyphRange:atPoint:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='drawGlyphsForGlyphRange:atPoint:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='f' type64='d' />
      <arg index='3' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='4' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='5' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='f' type64='d' />
      <arg index='3' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='4' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='5' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='drawsOutsideLineFragmentForGlyphAtIndex:'>
      <retval type='B' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='ensureGlyphsForCharacterRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='ensureGlyphsForGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='ensureLayoutForBoundingRect:inTextContainer:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='ensureLayoutForCharacterRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='ensureLayoutForGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='ensureLayoutForTextContainer:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='extraLineFragmentRect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='extraLineFragmentTextContainer'>
      <retval type='@' />
    </method>
    <method selector='extraLineFragmentUsedRect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='firstTextView'>
      <retval type='@' />
    </method>
    <method selector='firstUnlaidCharacterIndex'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='firstUnlaidGlyphIndex'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='fractionOfDistanceThroughGlyphForPoint:inTextContainer:'>
      <retval type='f' type64='d' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='@' />
    </method>
    <method selector='getFirstUnlaidCharacterIndex:glyphIndex:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='getGlyphs:range:'>
      <retval type='I' type64='Q' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='o' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg c_array_length_in_arg='0' index='1' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='2' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='3' type_modifier='o' />
      <arg index='4' type='^B' c_array_length_in_arg='0' type_modifier='o' />
    </method>
    <method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg c_array_length_in_arg='0' index='1' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='2' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='3' type_modifier='o' />
      <arg index='4' type='^B' type_modifier='o' c_array_length_in_arg='0' />
      <arg c_array_length_in_arg='0' index='5' type='^C' type_modifier='o' />
    </method>
    <method selector='getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='B' />
      <arg index='2' type='B' />
      <arg index='3' type_modifier='o' />
      <arg index='4' type_modifier='o' />
    </method>
    <method selector='glyphAtIndex:'>
      <retval type='I' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='glyphAtIndex:isValidIndex:'>
      <retval type='I' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='^B' type_modifier='o' />
    </method>
    <method selector='glyphGenerator'>
      <retval type='@' />
    </method>
    <method selector='glyphIndexForCharacterAtIndex:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='glyphIndexForPoint:inTextContainer:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='@' />
    </method>
    <method selector='glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='@' />
      <arg index='2' null_accepted='false' type_modifier='o' />
    </method>
    <method selector='glyphRangeForBoundingRect:inTextContainer:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='glyphRangeForTextContainer:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
    </method>
    <method selector='hasNonContiguousLayout'>
      <retval type='B' />
    </method>
    <method selector='hyphenationFactor'>
      <retval type='f' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='insertGlyph:atGlyphIndex:characterIndex:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' type='^I' type64='^I' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='I' type64='Q' />
    </method>
    <method selector='insertTextContainer:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='intAttribute:forGlyphAtIndex:'>
      <retval type='i' type64='q' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='invalidateDisplayForCharacterRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='invalidateDisplayForGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='invalidateGlyphsOnLayoutInvalidationForGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='invalidateLayoutForCharacterRange:actualCharacterRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='B' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='isValidGlyphIndex:'>
      <retval type='B' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='layoutManagerOwnsFirstResponderInWindow:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='layoutOptions'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='layoutRectForTextBlock:atIndex:effectiveRange:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='layoutRectForTextBlock:glyphRange:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type='B' />
    </method>
    <method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type='B' />
    </method>
    <method selector='locationForGlyphAtIndex:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='notShownAttributeForGlyphAtIndex:'>
      <retval type='B' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='numberOfGlyphs'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='rangeOfNominallySpacedGlyphsContainingIndex:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:'>
      <retval c_array_length_in_arg='3' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type='@' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:'>
      <retval c_array_length_in_arg='3' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type='@' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='removeTemporaryAttribute:forCharacterRange:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='removeTextContainerAtIndex:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='replaceGlyphAtIndex:withGlyph:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='I' />
    </method>
    <method selector='replaceTextStorage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='B' />
    </method>
    <method selector='rulerMarkersForTextView:paragraphStyle:ruler:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='setAllowsNonContiguousLayout:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAttachmentSize:forGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setBackgroundLayoutEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setBoundsRect:forTextBlock:glyphRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setCharacterIndex:forGlyphAtIndex:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='setDefaultAttachmentScaling:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDrawsOutsideLineFragment:forGlyphAtIndex:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='setExtraLineFragmentRect:usedRect:textContainer:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
    </method>
    <method selector='setGlyphGenerator:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHyphenationFactor:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
    <method selector='setIntAttribute:value:forGlyphAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='setLayoutRect:forTextBlock:glyphRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setLineFragmentRect:forGlyphRange:usedRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='setLocation:forStartOfGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setLocations:startingGlyphIndexes:count:forGlyphRange:'>
      <retval type='v' />
      <arg c_array_length_in_arg='2' index='0' type_modifier='n' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setNotShownAttribute:forGlyphAtIndex:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='setShowsControlCharacters:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setShowsInvisibleCharacters:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setTemporaryAttributes:forCharacterRange:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setTextContainer:forGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setTextStorage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTypesetter:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTypesetterBehavior:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setUsesFontLeading:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setUsesScreenFonts:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='showAttachmentCell:inRect:characterIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type='^v' type_modifier='n' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='3' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='4' type='@' />
      <arg index='5' type='@' />
      <arg index='6' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='showsControlCharacters'>
      <retval type='B' />
    </method>
    <method selector='showsInvisibleCharacters'>
      <retval type='B' />
    </method>
    <method selector='strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='3' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='4' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='substituteFontForFont:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='temporaryAttribute:atCharacterIndex:effectiveRange:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='temporaryAttributesAtCharacterIndex:effectiveRange:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='textContainerChangedGeometry:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textContainerChangedTextView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textContainerForGlyphAtIndex:effectiveRange:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type='B' />
    </method>
    <method selector='textContainers'>
      <retval type='@' />
    </method>
    <method selector='textStorage'>
      <retval type='@' />
    </method>
    <method selector='textStorage:edited:range:changeInLength:invalidatedRange:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='3' type='i' type64='q' />
      <arg index='4' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='textViewForBeginningOfSelection'>
      <retval type='@' />
    </method>
    <method selector='typesetter'>
      <retval type='@' />
    </method>
    <method selector='typesetterBehavior'>
      <retval type='i' />
    </method>
    <method selector='underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='3' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='4' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='usedRectForTextContainer:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
    </method>
    <method selector='usesFontLeading'>
      <retval type='B' />
    </method>
    <method selector='usesScreenFonts'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSLevelIndicator'>
    <method selector='criticalValue'>
      <retval type='d' />
    </method>
    <method selector='maxValue'>
      <retval type='d' />
    </method>
    <method selector='minValue'>
      <retval type='d' />
    </method>
    <method selector='numberOfMajorTickMarks'>
      <retval type='i' type64='q' />
    </method>
    <method selector='numberOfTickMarks'>
      <retval type='i' type64='q' />
    </method>
    <method selector='rectOfTickMarkAtIndex:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setCriticalValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setMaxValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setMinValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setNumberOfMajorTickMarks:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setNumberOfTickMarks:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setTickMarkPosition:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setWarningValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='tickMarkPosition'>
      <retval type='I' />
    </method>
    <method selector='tickMarkValueAtIndex:'>
      <retval type='d' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='warningValue'>
      <retval type='d' />
    </method>
  </class>
  <class name='NSLevelIndicatorCell'>
    <method selector='criticalValue'>
      <retval type='d' />
    </method>
    <method selector='initWithLevelIndicatorStyle:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method selector='levelIndicatorStyle'>
      <retval type='I' />
    </method>
    <method selector='maxValue'>
      <retval type='d' />
    </method>
    <method selector='minValue'>
      <retval type='d' />
    </method>
    <method selector='numberOfMajorTickMarks'>
      <retval type='i' type64='q' />
    </method>
    <method selector='numberOfTickMarks'>
      <retval type='i' type64='q' />
    </method>
    <method selector='rectOfTickMarkAtIndex:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setCriticalValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLevelIndicatorStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setMaxValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setMinValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setNumberOfMajorTickMarks:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setNumberOfTickMarks:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setTickMarkPosition:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setWarningValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='tickMarkPosition'>
      <retval type='I' />
    </method>
    <method selector='tickMarkValueAtIndex:'>
      <retval type='d' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='warningValue'>
      <retval type='d' />
    </method>
  </class>
  <class name='NSMatrix'>
    <method selector='acceptsFirstMouse:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='addColumn'>
      <retval type='v' />
    </method>
    <method selector='addColumnWithCells:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addRow'>
      <retval type='v' />
    </method>
    <method selector='addRowWithCells:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='allowsEmptySelection'>
      <retval type='B' />
    </method>
    <method selector='autosizesCells'>
      <retval type='B' />
    </method>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='cellAtRow:column:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='cellBackgroundColor'>
      <retval type='@' />
    </method>
    <method selector='cellClass'>
      <retval type='#' />
    </method>
    <method selector='cellFrameAtRow:column:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='cellSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='cellWithTag:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='cells'>
      <retval type='@' />
    </method>
    <method selector='context:'>
      <retval type='v' />
      <arg index='0' type='^v' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='deselectAllCells'>
      <retval type='v' />
    </method>
    <method selector='deselectSelectedCell'>
      <retval type='v' />
    </method>
    <method selector='doubleAction'>
      <retval type=':' />
    </method>
    <method selector='drawCellAtRow:column:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='drawsBackground'>
      <retval type='B' />
    </method>
    <method selector='drawsCellBackground'>
      <retval type='B' />
    </method>
    <method selector='getNumberOfRows:columns:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='getRow:column:forPoint:'>
      <retval type='B' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='getRow:column:ofCell:'>
      <retval type='B' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type='@' />
    </method>
    <method selector='highlightCell:atRow:column:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='initWithFrame:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='I' />
      <arg index='2' type='#' />
      <arg index='3' type='i' type64='q' />
      <arg index='4' type='i' type64='q' />
    </method>
    <method selector='initWithFrame:mode:prototype:numberOfRows:numberOfColumns:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='I' />
      <arg index='2' type='@' />
      <arg index='3' type='i' type64='q' />
      <arg index='4' type='i' type64='q' />
    </method>
    <method selector='insertColumn:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='insertColumn:withCells:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='@' />
    </method>
    <method selector='insertRow:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='insertRow:withCells:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='@' />
    </method>
    <method selector='intercellSpacing'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='isAutoscroll'>
      <retval type='B' />
    </method>
    <method selector='isSelectionByRect'>
      <retval type='B' />
    </method>
    <method selector='keyCell'>
      <retval type='@' />
    </method>
    <method selector='makeCellAtRow:column:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='mode'>
      <retval type='I' />
    </method>
    <method selector='mouseDown:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='mouseDownFlags'>
      <retval type='i' type64='q' />
    </method>
    <method selector='numberOfColumns'>
      <retval type='i' type64='q' />
    </method>
    <method selector='numberOfRows'>
      <retval type='i' type64='q' />
    </method>
    <method selector='performKeyEquivalent:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='prototype'>
      <retval type='@' />
    </method>
    <method selector='putCell:atRow:column:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='removeColumn:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='removeRow:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='renewRows:columns:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='resetCursorRects'>
      <retval type='v' />
    </method>
    <method selector='scrollCellToVisibleAtRow:column:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='selectAll:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectCellAtRow:column:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='selectCellWithTag:'>
      <retval type='B' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectText:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectTextAtRow:column:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='selectedCell'>
      <retval type='@' />
    </method>
    <method selector='selectedCells'>
      <retval type='@' />
    </method>
    <method selector='selectedColumn'>
      <retval type='i' type64='q' />
    </method>
    <method selector='selectedRow'>
      <retval type='i' type64='q' />
    </method>
    <method selector='sendAction'>
      <retval type='B' />
    </method>
    <method selector='sendAction:to:forAllCells:'>
      <retval type='v' />
      <arg index='0' sel_of_type='B@:@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method selector='sendDoubleAction'>
      <retval type='v' />
    </method>
    <method selector='setAllowsEmptySelection:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAutoscroll:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAutosizesCells:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCellBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCellClass:'>
      <retval type='v' />
      <arg index='0' type='#' />
    </method>
    <method selector='setCellSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDoubleAction:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setDrawsBackground:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDrawsCellBackground:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setIntercellSpacing:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setKeyCell:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMode:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setPrototype:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setScrollable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSelectionByRect:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSelectionFrom:to:anchor:highlight:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='B' />
    </method>
    <method selector='setState:atRow:column:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='setTabKeyTraversesCells:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setToolTip:forCell:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setValidateSize:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='sizeToCells'>
      <retval type='v' />
    </method>
    <method selector='sortUsingFunction:context:'>
	    <arg index='0' function_pointer='true' function_pointer_retained='false'>
		    <retval type='i'/>
		    <arg type='@' />
		    <arg type='@' />
		    <arg type='@' />
	    </arg>
	    <arg index='1' type='@' />
    </method>
    <method selector='sortUsingSelector:'>
      <retval type='v' />
      <arg index='0' sel_of_type='i@:@' />
    </method>
    <method selector='tabKeyTraversesCells'>
      <retval type='B' />
    </method>
    <method selector='textDidBeginEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textDidChange:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textDidEndEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textShouldBeginEditing:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='textShouldEndEditing:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='toolTipForCell:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSMenu'>
    <method selector='addItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addItemWithTitle:action:keyEquivalent:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@' />
      <arg index='2' type='@' />
    </method>
    <method selector='attachedMenu'>
      <retval type='@' />
    </method>
    <method selector='autoenablesItems'>
      <retval type='B' />
    </method>
    <method selector='cancelTracking'>
      <retval type='v' />
    </method>
    <method selector='contextMenuRepresentation'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='helpRequested:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='highlightedItem'>
      <retval type='@' />
    </method>
    <method selector='indexOfItem:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='indexOfItemWithRepresentedObject:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='indexOfItemWithSubmenu:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='indexOfItemWithTag:'>
      <retval type='i' type64='q' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='indexOfItemWithTarget:andAction:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@' />
    </method>
    <method selector='indexOfItemWithTitle:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithTitle:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertItem:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='insertItemWithTitle:action:keyEquivalent:atIndex:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@' />
      <arg index='2' type='@' />
      <arg index='3' type='i' type64='q' />
    </method>
    <method selector='isAttached'>
      <retval type='B' />
    </method>
    <method selector='isTornOff'>
      <retval type='B' />
    </method>
    <method selector='itemArray'>
      <retval type='@' />
    </method>
    <method selector='itemAtIndex:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='itemChanged:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='itemWithTag:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='itemWithTitle:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='locationForSubmenu:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='0' type='@' />
    </method>
    <method selector='menuBarHeight'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='menuBarVisible'>
      <retval type='B' />
    </method>
    <method selector='menuChangedMessagesEnabled'>
      <retval type='B' />
    </method>
    <method selector='menuRepresentation'>
      <retval type='@' />
    </method>
    <method selector='numberOfItems'>
      <retval type='i' type64='q' />
    </method>
    <method selector='performActionForItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='performKeyEquivalent:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='popUpContextMenu:withEvent:forView:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='popUpContextMenu:withEvent:forView:withFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='removeItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setAutoenablesItems:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setContextMenuRepresentation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setMenuBarVisible:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setMenuChangedMessagesEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setMenuRepresentation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setMenuZone:'>
      <retval type='v' />
    </method>
    <method selector='setShowsStateColumn:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSubmenu:forItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setSupermenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTearOffMenuRepresentation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='showsStateColumn'>
      <retval type='B' />
    </method>
    <method selector='sizeToFit'>
      <retval type='v' />
    </method>
    <method selector='submenuAction:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='supermenu'>
      <retval type='@' />
    </method>
    <method selector='tearOffMenuRepresentation'>
      <retval type='@' />
    </method>
    <method selector='title'>
      <retval type='@' />
    </method>
    <method selector='update'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSMenuItem'>
    <method selector='action'>
      <retval type=':' />
    </method>
    <method selector='attributedTitle'>
      <retval type='@' />
    </method>
    <method selector='hasSubmenu'>
      <retval type='B' />
    </method>
    <method selector='image'>
      <retval type='@' />
    </method>
    <method selector='indentationLevel'>
      <retval type='i' type64='q' />
    </method>
    <method selector='initWithTitle:action:keyEquivalent:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@' />
      <arg index='2' type='@' />
    </method>
    <method selector='isAlternate'>
      <retval type='B' />
    </method>
    <method selector='isEnabled'>
      <retval type='B' />
    </method>
    <method selector='isHidden'>
      <retval type='B' />
    </method>
    <method selector='isHiddenOrHasHiddenAncestor'>
      <retval type='B' />
    </method>
    <method selector='isHighlighted'>
      <retval type='B' />
    </method>
    <method selector='isSeparatorItem'>
      <retval type='B' />
    </method>
    <method selector='keyEquivalent'>
      <retval type='@' />
    </method>
    <method selector='keyEquivalentModifierMask'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='menu'>
      <retval type='@' />
    </method>
    <method selector='mixedStateImage'>
      <retval type='@' />
    </method>
    <method selector='mnemonic'>
      <retval type='@' />
    </method>
    <method selector='mnemonicLocation'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='offStateImage'>
      <retval type='@' />
    </method>
    <method selector='onStateImage'>
      <retval type='@' />
    </method>
    <method selector='representedObject'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='separatorItem'>
      <retval type='@' />
    </method>
    <method selector='setAction:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setAlternate:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAttributedTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setHidden:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setIndentationLevel:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setKeyEquivalent:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setKeyEquivalentModifierMask:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setMenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMixedStateImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMnemonicLocation:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setOffStateImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setOnStateImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setRepresentedObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setState:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setSubmenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTag:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setTarget:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleWithMnemonic:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setToolTip:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setUsesUserKeyEquivalents:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='state'>
      <retval type='i' type64='q' />
    </method>
    <method selector='submenu'>
      <retval type='@' />
    </method>
    <method selector='tag'>
      <retval type='i' type64='q' />
    </method>
    <method selector='target'>
      <retval type='@' />
    </method>
    <method selector='title'>
      <retval type='@' />
    </method>
    <method selector='toolTip'>
      <retval type='@' />
    </method>
    <method selector='userKeyEquivalent'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='usesUserKeyEquivalents'>
      <retval type='B' />
    </method>
    <method selector='view'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSMenuItemCell'>
    <method selector='calcSize'>
      <retval type='v' />
    </method>
    <method selector='drawBorderAndBackgroundWithFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='drawImageWithFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='drawKeyEquivalentWithFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='drawSeparatorItemWithFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='drawStateImageWithFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='drawTitleWithFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='imageWidth'>
      <retval type='f' type64='d' />
    </method>
    <method selector='keyEquivalentRectForBounds:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='keyEquivalentWidth'>
      <retval type='f' type64='d' />
    </method>
    <method selector='menuItem'>
      <retval type='@' />
    </method>
    <method selector='menuView'>
      <retval type='@' />
    </method>
    <method selector='needsDisplay'>
      <retval type='B' />
    </method>
    <method selector='needsSizing'>
      <retval type='B' />
    </method>
    <method selector='setMenuItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMenuView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setNeedsDisplay:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setNeedsSizing:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='stateImageRectForBounds:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='stateImageWidth'>
      <retval type='f' type64='d' />
    </method>
    <method selector='tag'>
      <retval type='i' type64='q' />
    </method>
    <method selector='titleRectForBounds:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='titleWidth'>
      <retval type='f' type64='d' />
    </method>
  </class>
  <class name='NSMenuView'>
    <method selector='attachSubmenuForItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='attachedMenu'>
      <retval type='@' />
    </method>
    <method selector='attachedMenuView'>
      <retval type='@' />
    </method>
    <method selector='detachSubmenu'>
      <retval type='v' />
    </method>
    <method selector='font'>
      <retval type='@' />
    </method>
    <method selector='highlightedItemIndex'>
      <retval type='i' type64='q' />
    </method>
    <method selector='horizontalEdgePadding'>
      <retval type='f' type64='d' />
    </method>
    <method selector='imageAndTitleOffset'>
      <retval type='f' type64='d' />
    </method>
    <method selector='imageAndTitleWidth'>
      <retval type='f' type64='d' />
    </method>
    <method selector='indexOfItemAtPoint:'>
      <retval type='i' type64='q' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='initAsTearOff'>
      <retval type='@' />
    </method>
    <method selector='initWithFrame:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='innerRect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='isAttached'>
      <retval type='B' />
    </method>
    <method selector='isHorizontal'>
      <retval type='B' />
    </method>
    <method selector='isTornOff'>
      <retval type='B' />
    </method>
    <method selector='itemAdded:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='itemChanged:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='itemRemoved:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='keyEquivalentOffset'>
      <retval type='f' type64='d' />
    </method>
    <method selector='keyEquivalentWidth'>
      <retval type='f' type64='d' />
    </method>
    <method selector='locationForSubmenu:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='0' type='@' />
    </method>
    <method selector='menu'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='menuBarHeight'>
      <retval type='f' type64='d' />
    </method>
    <method selector='menuItemCellForItemAtIndex:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='needsSizing'>
      <retval type='B' />
    </method>
    <method selector='performActionWithHighlightingForItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='rectOfItemAtIndex:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHighlightedItemIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setHorizontal:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setHorizontalEdgePadding:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setMenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMenuItemCell:forItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setNeedsDisplayForItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setNeedsSizing:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setWindowFrameForAttachingToRect:onScreen:preferredEdge:popUpSelectedItem:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='Q' />
      <arg index='3' type='i' type64='q' />
    </method>
    <method selector='sizeToFit'>
      <retval type='v' />
    </method>
    <method selector='stateImageOffset'>
      <retval type='f' type64='d' />
    </method>
    <method selector='stateImageWidth'>
      <retval type='f' type64='d' />
    </method>
    <method selector='trackWithEvent:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='update'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSMovie'>
    <method selector='URL'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='canInitWithPasteboard:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithMovie:'>
      <retval type='@' />
      <arg index='0' type='^^{MovieType}' />
    </method>
    <method selector='initWithMovie:'>
      <retval type='@' />
      <arg index='0' type='^^{MovieType}' />
    </method>
    <method selector='initWithPasteboard:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithURL:byReference:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method class_method='true' selector='movieUnfilteredFileTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='movieUnfilteredPasteboardTypes'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSMovieView'>
    <method selector='clear:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='copy:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='cut:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='delete:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='gotoBeginning:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='gotoEnd:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='gotoPosterFrame:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='isControllerVisible'>
      <retval type='B' />
    </method>
    <method selector='isEditable'>
      <retval type='B' />
    </method>
    <method selector='isMuted'>
      <retval type='B' />
    </method>
    <method selector='isPlaying'>
      <retval type='B' />
    </method>
    <method selector='loopMode'>
      <retval type='I' />
    </method>
    <method selector='movie'>
      <retval type='@' />
    </method>
    <method selector='movieRect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='paste:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='playsEveryFrame'>
      <retval type='B' />
    </method>
    <method selector='playsSelectionOnly'>
      <retval type='B' />
    </method>
    <method selector='rate'>
      <retval type='f' />
    </method>
    <method selector='resizeWithMagnification:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='selectAll:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setEditable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setLoopMode:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setMovie:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMuted:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setPlaysEveryFrame:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setPlaysSelectionOnly:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setRate:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
    <method selector='setVolume:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
    <method selector='showController:adjustingSize:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='B' />
    </method>
    <method selector='sizeForMagnification:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='start:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='stepBack:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='stepForward:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='stop:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='volume'>
      <retval type='f' />
    </method>
  </class>
  <class name='NSMutableAttributedString'>
    <method selector='applyFontTraits:range:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='fixAttachmentAttributeInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='fixAttributesInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='fixFontAttributeInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='fixParagraphStyleAttributeInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='readFromData:options:documentAttributes:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='readFromData:options:documentAttributes:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='readFromURL:options:documentAttributes:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='readFromURL:options:documentAttributes:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='setAlignment:range:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setBaseWritingDirection:range:'>
      <retval type='v' />
      <arg index='0' type='i' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='subscriptRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='superscriptRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='unscriptRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='updateAttachmentsFromPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSMutableParagraphStyle'>
    <method selector='addTabStop:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeTabStop:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAlignment:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setBaseWritingDirection:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setDefaultTabInterval:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setFirstLineHeadIndent:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setHeadIndent:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setHeaderLevel:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setHyphenationFactor:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
    <method selector='setLineBreakMode:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setLineHeightMultiple:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setLineSpacing:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setMaximumLineHeight:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setMinimumLineHeight:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setParagraphSpacing:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setParagraphSpacingBefore:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setParagraphStyle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTabStops:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTailIndent:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setTextBlocks:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTextLists:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTighteningFactorForTruncation:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
  </class>
  <class name='NSNib'>
    <method selector='initWithContentsOfURL:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithNibNamed:bundle:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='instantiateNibWithExternalNameTable:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='instantiateNibWithOwner:topLevelObjects:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
  </class>
  <class name='NSNibConnector'>
    <method selector='destination'>
      <retval type='@' />
    </method>
    <method selector='establishConnection'>
      <retval type='v' />
    </method>
    <method selector='label'>
      <retval type='@' />
    </method>
    <method selector='replaceObject:withObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setDestination:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLabel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSource:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='source'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSNibControlConnector'>
    <method selector='establishConnection'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSNibOutletConnector'>
    <method selector='establishConnection'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSObject'>
    <method selector='accessibilityActionDescription:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='accessibilityActionNames'>
      <retval type='@' />
    </method>
    <method selector='accessibilityAttributeNames'>
      <retval type='@' />
    </method>
    <method selector='accessibilityAttributeValue:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='accessibilityAttributeValue:forParameter:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='accessibilityFocusedUIElement'>
      <retval type='@' />
    </method>
    <method selector='accessibilityHitTest:'>
      <retval type='@' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='accessibilityIsAttributeSettable:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='accessibilityIsIgnored'>
      <retval type='B' />
    </method>
    <method selector='accessibilityParameterizedAttributeNames'>
      <retval type='@' />
    </method>
    <method selector='accessibilityPerformAction:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='accessibilitySetOverrideValue:forAttribute:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='accessibilitySetValue:forAttribute:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='action'>
      <retval type=':' />
    </method>
    <method selector='activeConversationChanged:toNewConversation:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='activeConversationWillChange:fromOldConversation:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='alertShowHelp:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='alphaControlAddedOrRemoved:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='animation:didReachProgressMark:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='f' />
    </method>
    <method selector='animation:valueForProgress:'>
      <retval type='f' />
      <arg index='0' type='@' />
      <arg index='1' type='f' />
    </method>
    <method selector='animationDidEnd:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='animationDidStop:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='animationForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='animationShouldStart:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='animations'>
      <retval type='@' />
    </method>
    <method selector='animator'>
      <retval type='@' />
    </method>
    <method selector='application:delegateHandlesKey:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='application:openFile:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='application:openFileWithoutUI:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='application:openFiles:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='application:openTempFile:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='application:printFile:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='application:printFiles:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='application:printFiles:withSettings:showPrintPanels:'>
      <retval type='I' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='B' />
    </method>
    <method selector='application:willPresentError:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='applicationDidBecomeActive:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationDidChangeScreenParameters:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationDidFinishLaunching:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationDidHide:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationDidResignActive:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationDidUnhide:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationDidUpdate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationDockMenu:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationOpenUntitledFile:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationShouldHandleReopen:hasVisibleWindows:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='applicationShouldOpenUntitledFile:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationShouldTerminate:'>
      <retval type='I' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationShouldTerminateAfterLastWindowClosed:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationWillBecomeActive:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationWillFinishLaunching:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationWillHide:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationWillResignActive:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationWillTerminate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationWillUnhide:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='applicationWillUpdate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='attachColorList:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='attachment'>
      <retval type='@' />
    </method>
    <method selector='attributedString'>
      <retval type='@' />
    </method>
    <method selector='attributedString'>
      <retval type='@' />
    </method>
    <method selector='attributedSubstringForProposedRange:actualRange:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type_modifier='o' type='^{_NSRange=II}' type64='^{_NSRange=QQ}' />
    </method>
    <method selector='attributedSubstringFromRange:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='awakeFromNib'>
      <retval type='v' />
    </method>
    <method selector='baselineDeltaForCharacterAtIndex:'>
      <retval type='f' type64='d' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='bind:toObject:withKeyPath:options:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='browser:acceptDrop:atRow:column:dropOperation:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='i' type64='q' />
      <arg index='4' type='I' />
    </method>
    <method selector='browser:canDragRowsWithIndexes:inColumn:withEvent:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='@' />
    </method>
    <method selector='browser:createRowsForColumn:inMatrix:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='@' />
    </method>
    <method selector='browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='@' />
      <arg index='4' type_modifier='N' />
    </method>
    <method selector='browser:isColumnValid:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='i' type64='q' />
    </method>
    <method selector='browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='i' type64='q' />
      <arg index='4' type='@' />
    </method>
    <method selector='browser:numberOfRowsInColumn:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='browser:selectCellWithString:inColumn:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='browser:selectRow:inColumn:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='browser:shouldShowCellExpansionForRow:column:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='browser:shouldSizeColumn:forUserResize:toWidth:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='B' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method selector='browser:shouldTypeSelectForEvent:withCurrentSearchString:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='browser:sizeToFitWidthOfColumn:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='browser:titleOfColumn:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='browser:typeSelectStringForRow:inColumn:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='browser:validateDrop:proposedRow:column:dropOperation:'>
      <retval type='I' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='N' />
      <arg index='3' type_modifier='N' />
      <arg index='4' type_modifier='N' />
    </method>
    <method selector='browser:willDisplayCell:atRow:column:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='i' type64='q' />
    </method>
    <method selector='browser:writeRowsWithIndexes:inColumn:toPasteboard:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='@' />
    </method>
    <method selector='browserColumnConfigurationDidChange:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='browserDidScroll:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='browserWillScroll:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='buttonToolTip'>
      <retval type='@' />
    </method>
    <method selector='canBeDisabled'>
      <retval type='B' />
    </method>
    <method selector='cellBaselineOffset'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='3' type='I' type64='Q' />
    </method>
    <method selector='cellSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='changeColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='changeFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='changeSpelling:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='characterIndexForPoint:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='characterIndexForPoint:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='comboBox:completedString:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='comboBox:indexOfItemWithStringValue:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='comboBox:objectValueForItemAtIndex:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='comboBoxCell:completedString:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='comboBoxCell:indexOfItemWithStringValue:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='comboBoxCell:objectValueForItemAtIndex:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='comboBoxSelectionDidChange:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='comboBoxSelectionIsChanging:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='comboBoxWillDismiss:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='comboBoxWillPopUp:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='commitEditing'>
      <retval type='B' />
    </method>
    <method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='concludeDragOperation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='control:didFailToFormatString:errorDescription:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='control:didFailToValidatePartialString:errorDescription:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='control:isValidObject:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='control:textShouldBeginEditing:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='control:textShouldEndEditing:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='control:textView:completions:forPartialWordRange:indexOfSelectedItem:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='4' null_accepted='false' type_modifier='N' />
    </method>
    <method selector='control:textView:doCommandBySelector:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' sel_of_type='v@:@' />
    </method>
    <method selector='controlTextDidBeginEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='controlTextDidChange:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='controlTextDidEndEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='conversationIdentifier'>
      <retval type='i' type64='q' />
    </method>
    <method selector='currentMode'>
      <retval type='i' />
    </method>
    <method selector='datePickerCell:validateProposedDateValue:timeInterval:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='N' />
      <arg index='2' type_modifier='N' />
    </method>
    <method class_method='true' selector='defaultAnimationForKey:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='defaultPlaceholderForMarker:withBinding:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='detachColorList:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='discardEditing'>
      <retval type='v' />
    </method>
    <method selector='ioCommandBySelector:'>
      <retval type='v' />
      <arg index='0' type=':' sel_of_type='v@:@'/>
    </method>
    <method selector='doCommandBySelector:'>
      <retval type='v' />
      <arg index='0' type=':' sel_of_type='v@:@'/>
    </method>
    <method selector='doCommandBySelector:client:'>
      <retval type='v' />
      <arg index='0' type=':' sel_of_type='v@:@'/>
      <arg index='1' type='@' />
    </method>
    <method selector='draggedImage'>
      <retval type='@' />
    </method>
    <method selector='draggedImage:beganAt:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='draggedImage:endedAt:deposited:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='B' />
    </method>
    <method selector='draggedImage:endedAt:operation:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='I' />
    </method>
    <method selector='draggedImage:movedTo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='draggedImageLocation'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='draggingDestinationWindow'>
      <retval type='@' />
    </method>
    <method selector='draggingEnded:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='draggingEntered:'>
      <retval type='I' />
      <arg index='0' type='@' />
    </method>
    <method selector='draggingExited:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='draggingLocation'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='draggingPasteboard'>
      <retval type='@' />
    </method>
    <method selector='draggingSequenceNumber'>
      <retval type='i' type64='q' />
    </method>
    <method selector='draggingSource'>
      <retval type='@' />
    </method>
    <method selector='draggingSourceOperationMask'>
      <retval type='I' />
    </method>
    <method selector='draggingSourceOperationMaskForLocal:'>
      <retval type='I' />
      <arg index='0' type='B' />
    </method>
    <method selector='draggingUpdated:'>
      <retval type='I' />
      <arg index='0' type='@' />
    </method>
    <method selector='drawWithFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='drawWithFrame:inView:characterIndex:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='drawWithFrame:inView:characterIndex:layoutManager:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='@' />
    </method>
    <method selector='drawerDidClose:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='drawerDidOpen:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='drawerShouldClose:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='drawerShouldOpen:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='drawerWillClose:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='drawerWillOpen:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='drawerWillResizeContents:toSize:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method class_method='true' selector='exposeBinding:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='exposedBindings'>
      <retval type='@' />
    </method>
    <method selector='firstRectForCharacterRange:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='firstRectForCharacterRange:actualRange:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type_modifier='o' type='^{_NSRange=II}' type64='^{_NSRange=QQ}'/>
    </method>
    <method selector='fontManager:willIncludeFont:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='fractionOfDistanceThroughGlyphForPoint:'>
      <retval type='f' type64='d' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='hasMarkedText'>
      <retval type='B' />
    </method>
    <method selector='hasMarkedText'>
      <retval type='B' />
    </method>
    <method selector='highlight:withFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
    </method>
    <method selector='ignoreModifierKeysWhileDragging'>
      <retval type='B' />
    </method>
    <method selector='ignoreSpelling:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='image:didLoadPartOfRepresentation:withValidRows:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='image:didLoadRepresentation:withStatus:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
    </method>
    <method selector='image:didLoadRepresentationHeader:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='image:willLoadRepresentation:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='imageDidNotDraw:inRect:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='infoForBinding:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithPickerMask:colorPanel:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
    </method>
    <method selector='inputClientBecomeActive:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='inputClientDisabled:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='inputClientEnabled:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='inputClientResignActive:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type_modifier='n' type='^I' type64='^I' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='I' type64='Q' />
    </method>
    <method selector='insertNewButtonImage:in:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='insertText:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertText:client:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='insertText:replacementRange:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='isExplicitlyIncluded'>
      <retval type='B' />
    </method>
    <method selector='key'>
      <retval type='@' />
    </method>
    <method selector='keyPathsForValuesAffectingPreview'>
      <retval type='@' />
    </method>
    <method selector='layoutManager:didCompleteLayoutForTextContainer:atEnd:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method selector='layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
      <arg index='3' type='I' type64='Q' />
      <arg index='4' type_modifier='o' />
    </method>
    <method selector='layoutManagerDidInvalidateLayout:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='layoutOptions'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='localizedKey'>
      <retval type='@' />
    </method>
    <method selector='localizedSummaryItems'>
      <retval type='@' />
    </method>
    <method selector='markedRange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='markedRange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='markedTextAbandoned:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='markedTextSelectionChanged:client:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='menu:updateItem:atIndex:shouldCancel:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='B' />
    </method>
    <method selector='menu:willHighlightItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='menuDidClose:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='menuHasKeyEquivalent:forEvent:target:action:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' type='^@' />
      <arg index='3' type_modifier='o' type='^:' />
    </method>
    <method selector='menuNeedsUpdate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='menuWillOpen:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='minContentSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='mouseDownOnCharacterIndex:atCoordinate:withModifier:client:'>
      <retval type='B' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='@' />
    </method>
    <method selector='mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:'>
      <retval type='B' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='@' />
    </method>
    <method selector='mouseUpOnCharacterIndex:atCoordinate:withModifier:client:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='@' />
    </method>
    <method selector='namesOfPromisedFilesDroppedAtDestination:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='namesOfPromisedFilesDroppedAtDestination:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='numberOfItemsInComboBox:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='numberOfItemsInComboBoxCell:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='numberOfItemsInMenu:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='numberOfRowsInTableView:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='objectDidBeginEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='objectDidEndEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='optionDescriptionsForBinding:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='outlineView:acceptDrop:item:childIndex:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='i' type64='q' />
    </method>
    <method selector='outlineView:child:ofItem:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='@' />
    </method>
    <method selector='outlineView:dataCellForTableColumn:item:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='outlineView:didClickTableColumn:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='outlineView:didDragTableColumn:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='outlineView:heightOfRowByItem:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='outlineView:isGroupItem:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='outlineView:isItemExpandable:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='outlineView:itemForPersistentObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='outlineView:mouseDownInHeaderOfTableColumn:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='outlineView:nextTypeSelectMatchFromItem:toItem:forString:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='outlineView:numberOfChildrenOfItem:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='outlineView:objectValueForTableColumn:byItem:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='outlineView:persistentObjectForItem:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='outlineView:selectionIndexesForProposedSelection:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='outlineView:setObjectValue:forTableColumn:byItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='outlineView:shouldCollapseItem:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='outlineView:shouldEditTableColumn:item:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='outlineView:shouldExpandItem:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='outlineView:shouldSelectItem:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='outlineView:shouldSelectTableColumn:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='outlineView:shouldShowCellExpansionForTableColumn:item:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='outlineView:shouldTrackCell:forTableColumn:item:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='outlineView:shouldTypeSelectForEvent:withCurrentSearchString:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='outlineView:sortDescriptorsDidChange:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='N'  type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='3' type='@' />
      <arg index='4' type='@' />
      <arg index='5' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='outlineView:typeSelectStringForTableColumn:item:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='outlineView:validateDrop:proposedItem:proposedChildIndex:'>
      <retval type='I' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='i' type64='q' />
    </method>
    <method selector='outlineView:willDisplayCell:forTableColumn:item:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='outlineView:willDisplayOutlineCell:forTableColumn:item:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='outlineView:writeItems:toPasteboard:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='outlineViewColumnDidMove:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='outlineViewColumnDidResize:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='outlineViewItemDidCollapse:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='outlineViewItemDidExpand:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='outlineViewItemWillCollapse:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='outlineViewItemWillExpand:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='outlineViewSelectionDidChange:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='outlineViewSelectionIsChanging:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='panel:compareFilename:with:caseSensitive:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='B' />
    </method>
    <method selector='panel:directoryDidChange:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='panel:isValidFilename:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='panel:shouldShowFilename:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='panel:userEnteredFilename:confirmed:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method selector='panel:willExpand:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='panelSelectionDidChange:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='pasteboard:provideDataForType:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='pasteboardChangedOwner:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='pathCell:willDisplayOpenPanel:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='pathCell:willPopUpMenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='pathControl:acceptDrop:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='pathControl:shouldDragPathComponentCell:withPasteboard:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='pathControl:validateDrop:'>
      <retval type='I' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='pathControl:willDisplayOpenPanel:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='pathControl:willPopUpMenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='performDragOperation:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='prepareForDragOperation:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='provideNewButtonImage'>
      <retval type='@' />
    </method>
    <method selector='provideNewView:'>
      <retval type='@' />
      <arg index='0' type='B' />
    </method>
    <method selector='readSelectionFromPasteboard:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='ruleEditor:child:forCriterion:withRowType:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='@' />
      <arg index='3' type='I' />
    </method>
    <method selector='ruleEditor:displayValueForCriterion:inRow:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='ruleEditor:numberOfChildrenForCriterion:withRowType:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
    </method>
    <method selector='ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='i' type64='q' />
    </method>
    <method selector='ruleEditorRowsDidChange:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectedRange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='selectedRange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='selectionShouldChangeInOutlineView:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectionShouldChangeInTableView:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAnimations:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAttachment:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='setDefaultPlaceholder:forMarker:withBinding:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='setIntAttribute:value:forGlyphAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='setKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLocalizedKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMarkedText:selectedRange:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setMarkedText:selectedRange:replacementRange:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setMode:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='slideDraggedImageTo:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='sound:didFinishPlaying:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='speechRecognizer:didRecognizeCommand:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='speechSynthesizer:didEncounterErrorAtIndex:ofString:message:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='speechSynthesizer:didEncounterSyncMessage:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='speechSynthesizer:didFinishSpeaking:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='speechSynthesizer:willSpeakPhoneme:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='s' />
    </method>
    <method selector='speechSynthesizer:willSpeakWord:ofString:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type='@' />
    </method>
    <method selector='splitView:additionalEffectiveRectOfDividerAtIndex:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='splitView:canCollapseSubview:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='3' type='i' type64='q' />
    </method>
    <method selector='splitView:onstrainMaxCoordinate:ofSubviewAt:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='splitView:onstrainMinCoordinate:ofSubviewAt:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='splitView:onstrainSplitPosition:ofSubviewAt:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='splitView:resizeSubviewsWithOldSize:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='splitView:shouldHideDividerAtIndex:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='splitViewDidResizeSubviews:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='splitViewWillResizeSubviews:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='supportsMode:'>
      <retval type='B' />
      <arg index='0' type='i' />
    </method>
    <method selector='tabView:didSelectTabViewItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tabView:shouldSelectTabViewItem:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tabView:willSelectTabViewItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tabViewDidChangeNumberOfTabViewItems:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tableView:acceptDrop:row:dropOperation:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='I' />
    </method>
    <method selector='tableView:dataCellForTableColumn:row:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='tableView:didClickTableColumn:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tableView:didDragTableColumn:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tableView:heightOfRow:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='tableView:isGroupRow:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='tableView:mouseDownInHeaderOfTableColumn:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='tableView:nextTypeSelectMatchFromRow:toRow:forString:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='@' />
    </method>
    <method selector='tableView:objectValueForTableColumn:row:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='tableView:selectionIndexesForProposedSelection:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tableView:setObjectValue:forTableColumn:row:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='i' type64='q' />
    </method>
    <method selector='tableView:shouldEditTableColumn:row:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='tableView:shouldSelectRow:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='tableView:shouldSelectTableColumn:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tableView:shouldShowCellExpansionForTableColumn:row:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='tableView:shouldTrackCell:forTableColumn:row:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='i' type64='q' />
    </method>
    <method selector='tableView:shouldTypeSelectForEvent:withCurrentSearchString:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='tableView:sortDescriptorsDidChange:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='N' />
      <arg index='3' type='@' />
      <arg index='4' type='i' type64='q' />
      <arg index='5' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='tableView:typeSelectStringForTableColumn:row:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='tableView:validateDrop:proposedRow:proposedDropOperation:'>
      <retval type='I' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='I' />
    </method>
    <method selector='tableView:willDisplayCell:forTableColumn:row:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='i' type64='q' />
    </method>
    <method selector='tableView:writeRows:toPasteboard:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='tableView:writeRowsWithIndexes:toPasteboard:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='tableViewColumnDidMove:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tableViewColumnDidResize:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tableViewSelectionDidChange:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tableViewSelectionIsChanging:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tag'>
      <retval type='i' type64='q' />
    </method>
    <method selector='terminate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textDidBeginEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textDidChange:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textDidEndEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textShouldBeginEditing:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='textShouldEndEditing:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='textStorageDidProcessEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textStorageWillProcessEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textView:clickedOnCell:inRect:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='textView:clickedOnCell:inRect:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='3' type='I' type64='Q' />
    </method>
    <method selector='textView:clickedOnLink:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='textView:clickedOnLink:atIndex:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='textView:completions:forPartialWordRange:indexOfSelectedItem:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='3' type_modifier='N' />
    </method>
    <method selector='textView:doCommandBySelector:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@' />
    </method>
    <method selector='textView:doubleClickedOnCell:inRect:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='textView:doubleClickedOnCell:inRect:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='3' type='I' type64='Q' />
    </method>
    <method selector='textView:draggedCell:inRect:event:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='3' type='@' />
    </method>
    <method selector='textView:draggedCell:inRect:event:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='3' type='@' />
      <arg index='4' type='I' type64='Q' />
    </method>
    <method selector='textView:menu:forEvent:atIndex:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='I' type64='Q' />
    </method>
    <method selector='textView:shouldChangeTextInRange:replacementString:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type='@' />
    </method>
    <method selector='textView:shouldChangeTextInRanges:replacementStrings:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='textView:shouldChangeTypingAttributes:toAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='textView:shouldSetSpellingState:range:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='textView:willChangeSelectionFromCharacterRange:toCharacterRange:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='textView:willDisplayToolTip:forCharacterAtIndex:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='textView:writablePasteboardTypesForCell:atIndex:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='textView:writeCell:atIndex:toPasteboard:type:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='@' />
      <arg index='4' type='@' />
    </method>
    <method selector='textViewDidChangeSelection:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textViewDidChangeTypingAttributes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type_modifier='o' type='^i' type64='^q' />
    </method>
    <method selector='tokenField:displayStringForRepresentedObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tokenField:editingStringForRepresentedObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tokenField:hasMenuForRepresentedObject:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tokenField:menuForRepresentedObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tokenField:readFromPasteboard:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tokenField:representedObjectForEditingString:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tokenField:shouldAddObjects:atIndex:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='tokenField:styleForRepresentedObject:'>
      <retval type='I' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tokenField:writeRepresentedObjects:toPasteboard:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='tokenFieldCell:displayStringForRepresentedObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tokenFieldCell:editingStringForRepresentedObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tokenFieldCell:hasMenuForRepresentedObject:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tokenFieldCell:menuForRepresentedObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tokenFieldCell:readFromPasteboard:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tokenFieldCell:representedObjectForEditingString:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tokenFieldCell:shouldAddObjects:atIndex:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='tokenFieldCell:styleForRepresentedObject:'>
      <retval type='I' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='tokenFieldCell:writeRepresentedObjects:toPasteboard:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method selector='toolbarAllowedItemIdentifiers:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='toolbarDefaultItemIdentifiers:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='toolbarDidRemoveItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='toolbarSelectableItemIdentifiers:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='toolbarWillAddItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
      <arg index='3' type='I' type64='Q' />
      <arg index='4' type='B' />
    </method>
    <method selector='trackMouse:inRect:ofView:untilMouseUp:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
      <arg index='3' type='B' />
    </method>
    <method selector='unbind:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='undoManagerForTextView:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='unmarkText'>
      <retval type='v' />
    </method>
    <method selector='unmarkText'>
      <retval type='v' />
    </method>
    <method selector='validAttributesForMarkedText'>
      <retval type='@' />
    </method>
    <method selector='validAttributesForMarkedText'>
      <retval type='@' />
    </method>
    <method selector='validModesForFontPanel:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='@' />
    </method>
    <method selector='validateMenuItem:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='validateToolbarItem:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='validateUserInterfaceItem:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='value'>
      <retval type='@' />
    </method>
    <method selector='valueClassForBinding:'>
      <retval type='#' />
      <arg index='0' type='@' />
    </method>
    <method selector='view:stringForToolTip:point:userData:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='i' />
      <arg index='2' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='3' type='^v' />
    </method>
    <method selector='viewSizeChanged:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='wantsPeriodicDraggingUpdates'>
      <retval type='B' />
    </method>
    <method selector='wantsToDelayTextChangeNotifications'>
      <retval type='B' />
    </method>
    <method selector='wantsToHandleMouseEvents'>
      <retval type='B' />
    </method>
    <method selector='wantsToInterpretAllKeystrokes'>
      <retval type='B' />
    </method>
    <method selector='wantsToTrackMouse'>
      <retval type='B' />
    </method>
    <method selector='wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
      <arg index='3' type='I' type64='Q' />
    </method>
    <method selector='window:shouldDragDocumentWithEvent:from:withPasteboard:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='3' type='@' />
    </method>
    <method selector='window:shouldPopUpDocumentPathMenu:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='window:willPositionSheet:usingRect:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='windowDidBecomeKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowDidBecomeMain:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowDidChangeScreen:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowDidChangeScreenProfile:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowDidDeminiaturize:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowDidEndSheet:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowDidExpose:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowDidMiniaturize:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowDidMove:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowDidResignKey:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowDidResignMain:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowDidResize:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowDidUpdate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowLevel'>
      <retval type='i' type64='q' />
    </method>
    <method selector='windowShouldClose:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowShouldZoom:toFrame:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='windowWillBeginSheet:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowWillClose:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowWillMiniaturize:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowWillMove:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowWillResize:toSize:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='windowWillReturnFieldEditor:toObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='windowWillReturnUndoManager:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowWillUseStandardFrame:defaultFrame:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='writeSelectionToPasteboard:types:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
  </class>
  <class name='NSObjectController'>
    <method selector='add:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='automaticallyPreparesContent'>
      <retval type='B' />
    </method>
    <method selector='canAdd'>
      <retval type='B' />
    </method>
    <method selector='canRemove'>
      <retval type='B' />
    </method>
    <method selector='content'>
      <retval type='@' />
    </method>
    <method selector='defaultFetchRequest'>
      <retval type='@' />
    </method>
    <method selector='entityName'>
      <retval type='@' />
    </method>
    <method selector='fetch:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='fetchPredicate'>
      <retval type='@' />
    </method>
    <method selector='fetchWithRequest:merge:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='initWithContent:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isEditable'>
      <retval type='B' />
    </method>
    <method selector='managedObjectContext'>
      <retval type='@' />
    </method>
    <method selector='newObject'>
      <retval type='@' />
    </method>
    <method selector='objectClass'>
      <retval type='#' />
    </method>
    <method selector='prepareContent'>
      <retval type='v' />
    </method>
    <method selector='remove:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectedObjects'>
      <retval type='@' />
    </method>
    <method selector='selection'>
      <retval type='@' />
    </method>
    <method selector='setAutomaticallyPreparesContent:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setContent:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setEditable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setEntityName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFetchPredicate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setManagedObjectContext:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setObjectClass:'>
      <retval type='v' />
      <arg index='0' type='#' />
    </method>
    <method selector='setUsesLazyFetching:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='usesLazyFetching'>
      <retval type='B' />
    </method>
    <method selector='validateUserInterfaceItem:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSOpenGLContext'>
    <method class_method='true' selector='clearCurrentContext'>
      <retval type='v' />
    </method>
    <method selector='CGLContextObj'>
       <retval type='^{_CGLContextObj}' />
    </method>
    <method selector='copyAttributesFromContext:withMask:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
    </method>
    <method selector='createTexture:fromView:internalFormat:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
    </method>
    <method class_method='true' selector='currentContext'>
      <retval type='@' />
    </method>
    <method selector='currentVirtualScreen'>
      <retval type='i' />
    </method>
    <method selector='flushBuffer'>
      <retval type='v' />
    </method>
    <method selector='getValues:forParameter:'>
      <retval type='v' />
      <arg index='0' type='^i' />
      <arg index='1' type='i' />
    </method>
    <method selector='initWithFormat:shareContext:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='makeCurrentContext'>
      <retval type='v' />
    </method>
    <method selector='pixelBuffer'>
      <retval type='@' />
    </method>
    <method selector='pixelBufferCubeMapFace'>
      <retval type='I' />
    </method>
    <method selector='pixelBufferMipMapLevel'>
      <retval type='i' />
    </method>
    <method selector='setCurrentVirtualScreen:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setFullScreen'>
      <retval type='v' />
    </method>
    <method selector='setOffScreen:width:height:rowbytes:'>
      <retval type='v' />
      <arg index='0' type='^v' />
      <arg index='1' type='i' />
      <arg index='2' type='i' />
      <arg index='3' type='i' />
    </method>
    <method selector='setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='i' />
      <arg index='3' type='i' />
    </method>
    <method selector='setTextureImageToPixelBuffer:colorBuffer:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
    </method>
    <method selector='setValues:forParameter:'>
      <retval type='v' />
      <arg index='0' type='^i' />
      <arg index='1' type='i' />
    </method>
    <method selector='setView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='update'>
      <retval type='v' />
    </method>
    <method selector='view'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSOpenGLPixelBuffer'>
    <method selector='initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='I' />
      <arg index='2' type='i' />
      <arg index='3' type='i' />
      <arg index='4' type='i' />
    </method>
    <method selector='pixelsHigh'>
      <retval type='i' />
    </method>
    <method selector='pixelsWide'>
      <retval type='i' />
    </method>
    <method selector='textureInternalFormat'>
      <retval type='I' />
    </method>
    <method selector='textureMaxMipMapLevel'>
      <retval type='i' />
    </method>
    <method selector='textureTarget'>
      <retval type='I' />
    </method>
  </class>
  <class name='NSOpenGLPixelFormat'>
    <method selector='attributes'>
      <retval type='@' />
    </method>
    <method selector='CGLPixelFormatObj'>}
      <retval type='^{_CGLPixelFormatObject}' />
    </method>
    <method selector='getValues:forAttribute:forVirtualScreen:'>
      <retval type='v' />
      <arg index='0' type='^i' type_modifier='o' />
      <arg index='1' type='I' />
      <arg index='2' type='i' />
    </method>
    <method selector='initWithAttributes:'>
      <retval type='@' />
      <arg c_array_delimited_by_null='true' index='0' type_modifier='n' />
    </method>
    <method selector='initWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='numberOfVirtualScreens'>
      <retval type='i' />
    </method>
    <method selector='setAttributes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSOpenGLView'>
    <method selector='clearGLContext'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='defaultPixelFormat'>
      <retval type='@' />
    </method>
    <method selector='initWithFrame:pixelFormat:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='openGLContext'>
      <retval type='@' />
    </method>
    <method selector='pixelFormat'>
      <retval type='@' />
    </method>
    <method selector='prepareOpenGL'>
      <retval type='v' />
    </method>
    <method selector='reshape'>
      <retval type='v' />
    </method>
    <method selector='setOpenGLContext:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPixelFormat:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='update'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSOpenPanel'>
    <method selector='URLs'>
      <retval type='@' />
    </method>
    <method selector='allowsMultipleSelection'>
      <retval type='B' />
    </method>
    <method selector='beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' sel_of_type='v@:@i^v' type=':' />
      <arg index='5' type='^v' />
    </method>
    <method selector='beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' type='@' />
      <arg index='5' sel_of_type='v@:@i^v' />
      <arg index='6' type='^v' />
    </method>
    <method selector='canChooseDirectories'>
      <retval type='B' />
    </method>
    <method selector='canChooseFiles'>
      <retval type='B' />
    </method>
    <method selector='filenames'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='openPanel'>
      <retval type='@' />
    </method>
    <method selector='resolvesAliases'>
      <retval type='B' />
    </method>
    <method selector='runModalForDirectory:file:types:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
    </method>
    <method selector='runModalForTypes:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAllowsMultipleSelection:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setCanChooseDirectories:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setCanChooseFiles:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setResolvesAliases:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='NSOutlineView'>
    <method selector='autoresizesOutlineColumn'>
      <retval type='B' />
    </method>
    <method selector='autosaveExpandedItems'>
      <retval type='B' />
    </method>
    <method selector='collapseItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='collapseItem:collapseChildren:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='expandItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='expandItem:expandChildren:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='frameOfOutlineCellAtRow:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='indentationMarkerFollowsCell'>
      <retval type='B' />
    </method>
    <method selector='indentationPerLevel'>
      <retval type='f' type64='d' />
    </method>
    <method selector='isExpandable:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isItemExpanded:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='itemAtRow:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='levelForItem:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='levelForRow:'>
      <retval type='i' type64='q' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='outlineTableColumn'>
      <retval type='@' />
    </method>
    <method selector='parentForItem:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='reloadItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='reloadItem:reloadChildren:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='rowForItem:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAutoresizesOutlineColumn:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAutosaveExpandedItems:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDropItem:dropChildIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setIndentationMarkerFollowsCell:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setIndentationPerLevel:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setOutlineTableColumn:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='shouldCollapseAutoExpandedItemsForDeposited:'>
      <retval type='B' />
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='NSPDFImageRep'>
    <method selector='PDFRepresentation'>
      <retval type='@' />
    </method>
    <method selector='bounds'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='currentPage'>
      <retval type='i' type64='q' />
    </method>
    <method class_method='true' selector='imageRepWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='pageCount'>
      <retval type='i' type64='q' />
    </method>
    <method selector='setCurrentPage:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
  </class>
  <class name='NSPICTImageRep'>
    <method selector='PICTRepresentation'>
      <retval type='@' />
    </method>
    <method selector='boundingBox'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method class_method='true' selector='imageRepWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSPageLayout'>
    <method selector='accessoryControllers'>
      <retval type='@' />
    </method>
    <method selector='accessoryView'>
      <retval type='@' />
    </method>
    <method selector='addAccessoryController:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' sel_of_type='v@:@i^v' />
      <arg index='4' type='^v' />
    </method>
    <method class_method='true' selector='pageLayout'>
      <retval type='@' />
    </method>
    <method selector='printInfo'>
      <retval type='@' />
    </method>
    <method selector='readPrintInfo'>
      <retval type='v' />
    </method>
    <method selector='removeAccessoryController:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='runModal'>
      <retval type='i' type64='q' />
    </method>
    <method selector='runModalWithPrintInfo:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAccessoryView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='writePrintInfo'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSPanel'>
    <method selector='becomesKeyOnlyIfNeeded'>
      <retval type='B' />
    </method>
    <method selector='isFloatingPanel'>
      <retval type='B' />
    </method>
    <method selector='setBecomesKeyOnlyIfNeeded:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setFloatingPanel:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setWorksWhenModal:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='worksWhenModal'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSParagraphStyle'>
    <method selector='alignment'>
      <retval type='I' />
    </method>
    <method selector='baseWritingDirection'>
      <retval type='i' />
    </method>
    <method class_method='true' selector='defaultParagraphStyle'>
      <retval type='@' />
    </method>
    <method selector='defaultTabInterval'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='defaultWritingDirectionForLanguage:'>
      <retval type='i' />
      <arg index='0' type='@' />
    </method>
    <method selector='firstLineHeadIndent'>
      <retval type='f' type64='d' />
    </method>
    <method selector='headIndent'>
      <retval type='f' type64='d' />
    </method>
    <method selector='headerLevel'>
      <retval type='i' type64='q' />
    </method>
    <method selector='hyphenationFactor'>
      <retval type='f' />
    </method>
    <method selector='lineBreakMode'>
      <retval type='I' />
    </method>
    <method selector='lineHeightMultiple'>
      <retval type='f' type64='d' />
    </method>
    <method selector='lineSpacing'>
      <retval type='f' type64='d' />
    </method>
    <method selector='maximumLineHeight'>
      <retval type='f' type64='d' />
    </method>
    <method selector='minimumLineHeight'>
      <retval type='f' type64='d' />
    </method>
    <method selector='paragraphSpacing'>
      <retval type='f' type64='d' />
    </method>
    <method selector='paragraphSpacingBefore'>
      <retval type='f' type64='d' />
    </method>
    <method selector='tabStops'>
      <retval type='@' />
    </method>
    <method selector='tailIndent'>
      <retval type='f' type64='d' />
    </method>
    <method selector='textBlocks'>
      <retval type='@' />
    </method>
    <method selector='textLists'>
      <retval type='@' />
    </method>
    <method selector='tighteningFactorForTruncation'>
      <retval type='f' />
    </method>
  </class>
  <class name='NSPasteboard'>
    <method selector='addTypes:owner:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='availableTypeFromArray:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='changeCount'>
      <retval type='i' type64='q' />
    </method>
    <method selector='dataForType:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='declareTypes:owner:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='generalPasteboard'>
      <retval type='@' />
    </method>
    <method selector='name'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='pasteboardByFilteringData:ofType:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='pasteboardByFilteringFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='pasteboardByFilteringTypesInPasteboard:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='pasteboardWithName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='pasteboardWithUniqueName'>
      <retval type='@' />
    </method>
    <method selector='propertyListForType:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='readFileContentsType:toFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='readFileWrapper'>
      <retval type='@' />
    </method>
    <method selector='releaseGlobally'>
      <retval type='v' />
    </method>
    <method selector='setData:forType:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setPropertyList:forType:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setString:forType:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='stringForType:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='types'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='typesFilterableTo:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='writeFileContents:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='writeFileWrapper:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSPathCell'>
    <method selector='URL'>
      <retval type='@' />
    </method>
    <method selector='allowedTypes'>
      <retval type='@' />
    </method>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='clickedPathComponentCell'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='doubleAction'>
      <retval type=':' />
    </method>
    <method selector='mouseEntered:withFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
    </method>
    <method selector='mouseExited:withFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
    </method>
    <method selector='pathComponentCellAtPoint:withFrame:inView:'>
      <retval type='@' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='pathComponentCellClass'>
      <retval type='#' />
    </method>
    <method selector='pathComponentCells'>
      <retval type='@' />
    </method>
    <method selector='pathStyle'>
      <retval type='i' />
    </method>
    <method selector='placeholderAttributedString'>
      <retval type='@' />
    </method>
    <method selector='placeholderString'>
      <retval type='@' />
    </method>
    <method selector='rectOfPathComponentCell:withFrame:inView:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
    </method>
    <method selector='setAllowedTypes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setControlSize:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDoubleAction:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setObjectValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPathComponentCells:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPathStyle:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setPlaceholderAttributedString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPlaceholderString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setURL:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSPathComponentCell'>
    <method selector='URL'>
      <retval type='@' />
    </method>
    <method selector='image'>
      <retval type='@' />
    </method>
    <method selector='setImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setURL:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSPathControl'>
    <method selector='URL'>
      <retval type='@' />
    </method>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='clickedPathComponentCell'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='doubleAction'>
      <retval type=':' />
    </method>
    <method selector='pathComponentCells'>
      <retval type='@' />
    </method>
    <method selector='pathStyle'>
      <retval type='i' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDoubleAction:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setDraggingSourceOperationMask:forLocal:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='B' />
    </method>
    <method selector='setPathComponentCells:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPathStyle:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setURL:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSPersistentDocument'>
    <method selector='configurePersistentStoreCoordinatorForURL:ofType:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' type_modifier='o' />
    </method>
    <method selector='managedObjectContext'>
      <retval type='@' />
    </method>
    <method selector='managedObjectModel'>
      <retval type='@' />
    </method>
    <method selector='persistentStoreTypeForFileType:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='readFromURL:ofType:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='revertToContentsOfURL:ofType:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='setManagedObjectContext:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='writeToURL:ofType:forSaveOperation:originalContentsURL:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
      <arg index='3' type='@' />
      <arg index='4' type_modifier='o' />
    </method>
  </class>
  <class name='NSPopUpButton'>
    <method selector='addItemWithTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addItemsWithTitles:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='autoenablesItems'>
      <retval type='B' />
    </method>
    <method selector='indexOfItem:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='indexOfItemWithRepresentedObject:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='indexOfItemWithTag:'>
      <retval type='i' type64='q' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='indexOfItemWithTarget:andAction:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@' />
    </method>
    <method selector='indexOfItemWithTitle:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='indexOfSelectedItem'>
      <retval type='i' type64='q' />
    </method>
    <method selector='initWithFrame:pullsDown:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='B' />
    </method>
    <method selector='insertItemWithTitle:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='itemArray'>
      <retval type='@' />
    </method>
    <method selector='itemAtIndex:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='itemTitleAtIndex:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='itemTitles'>
      <retval type='@' />
    </method>
    <method selector='itemWithTitle:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='lastItem'>
      <retval type='@' />
    </method>
    <method selector='menu'>
      <retval type='@' />
    </method>
    <method selector='numberOfItems'>
      <retval type='i' type64='q' />
    </method>
    <method selector='preferredEdge'>
      <retval type='i' type64='Q' />
    </method>
    <method selector='pullsDown'>
      <retval type='B' />
    </method>
    <method selector='removeAllItems'>
      <retval type='v' />
    </method>
    <method selector='removeItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='removeItemWithTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectItemWithTag:'>
      <retval type='B' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectItemWithTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectedItem'>
      <retval type='@' />
    </method>
    <method selector='setAutoenablesItems:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setMenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPreferredEdge:'>
      <retval type='v' />
      <arg index='0' type='i' type64='Q' />
    </method>
    <method selector='setPullsDown:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='synchronizeTitleAndSelectedItem'>
      <retval type='v' />
    </method>
    <method selector='titleOfSelectedItem'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSPopUpButtonCell'>
    <method selector='addItemWithTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addItemsWithTitles:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='altersStateOfSelectedItem'>
      <retval type='B' />
    </method>
    <method selector='arrowPosition'>
      <retval type='I' />
    </method>
    <method selector='attachPopUpWithFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='autoenablesItems'>
      <retval type='B' />
    </method>
    <method selector='dismissPopUp'>
      <retval type='v' />
    </method>
    <method selector='indexOfItem:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='indexOfItemWithRepresentedObject:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='indexOfItemWithTag:'>
      <retval type='i' type64='q' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='indexOfItemWithTarget:andAction:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@' />
    </method>
    <method selector='indexOfItemWithTitle:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='indexOfSelectedItem'>
      <retval type='i' type64='q' />
    </method>
    <method selector='initTextCell:pullsDown:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='insertItemWithTitle:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='itemArray'>
      <retval type='@' />
    </method>
    <method selector='itemAtIndex:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='itemTitleAtIndex:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='itemTitles'>
      <retval type='@' />
    </method>
    <method selector='itemWithTitle:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='lastItem'>
      <retval type='@' />
    </method>
    <method selector='menu'>
      <retval type='@' />
    </method>
    <method selector='numberOfItems'>
      <retval type='i' type64='q' />
    </method>
    <method selector='objectValue'>
      <retval type='@' />
    </method>
    <method selector='performClickWithFrame:inView:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='preferredEdge'>
      <retval type='i' type64='Q' />
    </method>
    <method selector='pullsDown'>
      <retval type='B' />
    </method>
    <method selector='removeAllItems'>
      <retval type='v' />
    </method>
    <method selector='removeItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='removeItemWithTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectItemWithTag:'>
      <retval type='B' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectItemWithTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectedItem'>
      <retval type='@' />
    </method>
    <method selector='setAltersStateOfSelectedItem:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setArrowPosition:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setAutoenablesItems:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setMenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setObjectValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPreferredEdge:'>
      <retval type='v' />
      <arg index='0' type='i' type64='Q' />
    </method>
    <method selector='setPullsDown:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setUsesItemFromMenu:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='synchronizeTitleAndSelectedItem'>
      <retval type='v' />
    </method>
    <method selector='titleOfSelectedItem'>
      <retval type='@' />
    </method>
    <method selector='usesItemFromMenu'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSPredicateEditor'>
    <method selector='rowTemplates'>
      <retval type='@' />
    </method>
    <method selector='setRowTemplates:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSPredicateEditorRowTemplate'>
    <method selector='compoundTypes'>
      <retval type='@' />
    </method>
    <method selector='displayableSubpredicatesOfPredicate:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithCompoundTypes:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithLeftExpressions:rightExpressionAttributeType:modifier:operators:options:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='@' />
      <arg index='4' type='I' type64='Q' />
    </method>
    <method selector='initWithLeftExpressions:rightExpressions:modifier:operators:options:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type='@' />
      <arg index='4' type='I' type64='Q' />
    </method>
    <method selector='leftExpressions'>
      <retval type='@' />
    </method>
    <method selector='matchForPredicate:'>
      <retval type='d' />
      <arg index='0' type='@' />
    </method>
    <method selector='modifier'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='operators'>
      <retval type='@' />
    </method>
    <method selector='options'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='predicateWithSubpredicates:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='rightExpressionAttributeType'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='rightExpressions'>
      <retval type='@' />
    </method>
    <method selector='setPredicate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='templateViews'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='templatesWithAttributeKeyPaths:inEntityDescription:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
  </class>
  <class name='NSPrintInfo'>
    <method selector='bottomMargin'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='defaultPrinter'>
      <retval type='@' />
    </method>
    <method selector='dictionary'>
      <retval type='@' />
    </method>
    <method selector='horizontalPagination'>
      <retval type='I' />
    </method>
    <method selector='imageablePageBounds'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='initWithDictionary:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isHorizontallyCentered'>
      <retval type='B' />
    </method>
    <method selector='isVerticallyCentered'>
      <retval type='B' />
    </method>
    <method selector='jobDisposition'>
      <retval type='@' />
    </method>
    <method selector='leftMargin'>
      <retval type='f' type64='d' />
    </method>
    <method selector='localizedPaperName'>
      <retval type='@' />
    </method>
    <method selector='orientation'>
      <retval type='I' />
    </method>
    <method selector='paperName'>
      <retval type='@' />
    </method>
    <method selector='paperSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='printSettings'>
      <retval type='@' />
    </method>
    <method selector='printer'>
      <retval type='@' />
    </method>
    <method selector='rightMargin'>
      <retval type='f' type64='d' />
    </method>
    <method selector='setBottomMargin:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method class_method='true' selector='setDefaultPrinter:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHorizontalPagination:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setHorizontallyCentered:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setJobDisposition:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLeftMargin:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setOrientation:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setPaperName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPaperSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setPrinter:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setRightMargin:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method class_method='true' selector='setSharedPrintInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTopMargin:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setUpPrintOperationDefaultValues'>
      <retval type='v' />
    </method>
    <method selector='setVerticalPagination:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setVerticallyCentered:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='sharedPrintInfo'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='sizeForPaperName:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='@' />
    </method>
    <method selector='topMargin'>
      <retval type='f' type64='d' />
    </method>
    <method selector='updateFromPMPageFormat'>
      <retval type='v' />
    </method>
    <method selector='updateFromPMPrintSettings'>
      <retval type='v' />
    </method>
    <method selector='verticalPagination'>
      <retval type='I' />
    </method>
  </class>
  <class name='NSPrintOperation'>
    <method class_method='true' selector='EPSOperationWithView:insideRect:toData:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='EPSOperationWithView:insideRect:toData:printInfo:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method class_method='true' selector='EPSOperationWithView:insideRect:toPath:printInfo:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method class_method='true' selector='PDFOperationWithView:insideRect:toData:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
    </method>
    <method class_method='true' selector='PDFOperationWithView:insideRect:toData:printInfo:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method class_method='true' selector='PDFOperationWithView:insideRect:toPath:printInfo:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='accessoryView'>
      <retval type='@' />
    </method>
    <method selector='canSpawnSeparateThread'>
      <retval type='B' />
    </method>
    <method selector='cleanUpOperation'>
      <retval type='v' />
    </method>
    <method selector='context'>
      <retval type='@' />
    </method>
    <method selector='createContext'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='currentOperation'>
      <retval type='@' />
    </method>
    <method selector='currentPage'>
      <retval type='i' type64='q' />
    </method>
    <method selector='deliverResult'>
      <retval type='B' />
    </method>
    <method selector='destroyContext'>
      <retval type='v' />
    </method>
    <method selector='isCopyingOperation'>
      <retval type='B' />
    </method>
    <method selector='jobStyleHint'>
      <retval type='@' />
    </method>
    <method selector='jobTitle'>
      <retval type='@' />
    </method>
    <method selector='pageOrder'>
      <retval type='i' />
    </method>
    <method selector='pageRange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='printInfo'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='printOperationWithView:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='printOperationWithView:printInfo:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='printPanel'>
      <retval type='@' />
    </method>
    <method selector='runOperation'>
      <retval type='B' />
    </method>
    <method selector='runOperationModalForWindow:delegate:didRunSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' sel_of_type='v@:@B^v' />
      <arg index='3' type='^v' />
    </method>
    <method selector='setAccessoryView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCanSpawnSeparateThread:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='setCurrentOperation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setJobStyleHint:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setJobTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPageOrder:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setPrintInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPrintPanel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setShowPanels:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setShowsPrintPanel:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setShowsProgressPanel:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='showPanels'>
      <retval type='B' />
    </method>
    <method selector='showsPrintPanel'>
      <retval type='B' />
    </method>
    <method selector='showsProgressPanel'>
      <retval type='B' />
    </method>
    <method selector='view'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSPrintPanel'>
    <method selector='accessoryControllers'>
      <retval type='@' />
    </method>
    <method selector='accessoryView'>
      <retval type='@' />
    </method>
    <method selector='addAccessoryController:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' sel_of_type='v@:@i^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='defaultButtonTitle'>
      <retval type='@' />
    </method>
    <method selector='finalWritePrintInfo'>
      <retval type='v' />
    </method>
    <method selector='helpAnchor'>
      <retval type='@' />
    </method>
    <method selector='jobStyleHint'>
      <retval type='@' />
    </method>
    <method selector='options'>
      <retval type='i' />
    </method>
    <method selector='printInfo'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='printPanel'>
      <retval type='@' />
    </method>
    <method selector='removeAccessoryController:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='runModal'>
      <retval type='i' type64='q' />
    </method>
    <method selector='runModalWithPrintInfo:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAccessoryView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDefaultButtonTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHelpAnchor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setJobStyleHint:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setOptions:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='updateFromPrintInfo'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSPrinter'>
    <method selector='acceptsBinary'>
      <retval type='B' />
    </method>
    <method selector='booleanForKey:inTable:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='deviceDescription'>
      <retval type='@' />
    </method>
    <method selector='domain'>
      <retval type='@' />
    </method>
    <method selector='floatForKey:inTable:'>
      <retval type='f' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='host'>
      <retval type='@' />
    </method>
    <method selector='imageRectForPaper:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
    </method>
    <method selector='intForKey:inTable:'>
      <retval type='i' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='isColor'>
      <retval type='B' />
    </method>
    <method selector='isFontAvailable:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isKey:inTable:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='isOutputStackInReverseOrder'>
      <retval type='B' />
    </method>
    <method selector='languageLevel'>
      <retval type='i' type64='q' />
    </method>
    <method selector='name'>
      <retval type='@' />
    </method>
    <method selector='note'>
      <retval type='@' />
    </method>
    <method selector='pageSizeForPaper:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='printerNames'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='printerTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='printerWithName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='printerWithName:domain:includeUnavailable:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method class_method='true' selector='printerWithType:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='rectForKey:inTable:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='sizeForKey:inTable:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='statusForTable:'>
      <retval type='I' />
      <arg index='0' type='@' />
    </method>
    <method selector='stringForKey:inTable:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='stringListForKey:inTable:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='type'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSProgressIndicator'>
    <method selector='animate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='animationDelay'>
      <retval type='d' />
    </method>
    <method selector='controlSize'>
      <retval type='I' />
    </method>
    <method selector='controlTint'>
      <retval type='I' />
    </method>
    <method selector='doubleValue'>
      <retval type='d' />
    </method>
    <method selector='incrementBy:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='isBezeled'>
      <retval type='B' />
    </method>
    <method selector='isDisplayedWhenStopped'>
      <retval type='B' />
    </method>
    <method selector='isIndeterminate'>
      <retval type='B' />
    </method>
    <method selector='maxValue'>
      <retval type='d' />
    </method>
    <method selector='minValue'>
      <retval type='d' />
    </method>
    <method selector='setAnimationDelay:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setBezeled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setControlSize:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setControlTint:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setDisplayedWhenStopped:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDoubleValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setIndeterminate:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setMaxValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setMinValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setUsesThreadedAnimation:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='sizeToFit'>
      <retval type='v' />
    </method>
    <method selector='startAnimation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='stopAnimation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='style'>
      <retval type='I' />
    </method>
    <method selector='usesThreadedAnimation'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSResponder'>
    <method selector='acceptsFirstResponder'>
      <retval type='B' />
    </method>
    <method selector='becomeFirstResponder'>
      <retval type='B' />
    </method>
    <method selector='cancelOperation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='capitalizeWord:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='centerSelectionInVisibleArea:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='changeCaseOfLetter:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='complete:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='cursorUpdate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='deleteBackward:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='deleteBackwardByDecomposingPreviousCharacter:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='deleteForward:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='deleteToBeginningOfLine:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='deleteToBeginningOfParagraph:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='deleteToEndOfLine:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='deleteToEndOfParagraph:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='deleteToMark:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='deleteWordBackward:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='deleteWordForward:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='doCommandBySelector:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='flagsChanged:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='flushBufferedKeyEvents'>
      <retval type='v' />
    </method>
    <method selector='helpRequested:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='indent:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertBacktab:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertContainerBreak:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertLineBreak:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertNewline:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertNewlineIgnoringFieldEditor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertParagraphSeparator:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertTab:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertTabIgnoringFieldEditor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertText:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='interfaceStyle'>
      <retval type='I' />
    </method>
    <method selector='interpretKeyEvents:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='keyDown:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='keyUp:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='lowercaseWord:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='menu'>
      <retval type='@' />
    </method>
    <method selector='mouseDown:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='mouseDragged:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='mouseEntered:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='mouseExited:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='mouseMoved:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='mouseUp:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveBackward:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveBackwardAndModifySelection:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveDown:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveDownAndModifySelection:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveForward:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveForwardAndModifySelection:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveLeft:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveLeftAndModifySelection:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveRight:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveRightAndModifySelection:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveToBeginningOfDocument:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveToBeginningOfLine:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveToBeginningOfParagraph:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveToEndOfDocument:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveToEndOfLine:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveToEndOfParagraph:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveUp:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveUpAndModifySelection:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveWordBackward:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveWordBackwardAndModifySelection:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveWordForward:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveWordForwardAndModifySelection:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveWordLeft:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveWordLeftAndModifySelection:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveWordRight:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveWordRightAndModifySelection:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='nextResponder'>
      <retval type='@' />
    </method>
    <method selector='noResponderFor:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='otherMouseDown:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='otherMouseDragged:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='otherMouseUp:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='pageDown:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='pageUp:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='performKeyEquivalent:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='performMnemonic:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='presentError:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='presentError:modalForWindow:delegate:didPresentSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' sel_of_type='v@:B^v' />
      <arg index='4' type='^v' />
    </method>
    <method selector='resignFirstResponder'>
      <retval type='B' />
    </method>
    <method selector='rightMouseDown:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='rightMouseDragged:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='rightMouseUp:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='scrollLineDown:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='scrollLineUp:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='scrollPageDown:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='scrollPageUp:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='scrollWheel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectAll:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectLine:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectParagraph:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectToMark:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectWord:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setInterfaceStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setMark:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setNextResponder:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='shouldBeTreatedAsInkEvent:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='showContextHelp:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='swapWithMark:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tabletPoint:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tabletProximity:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='transpose:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='transposeWords:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tryToPerform:with:'>
      <retval type='B' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
    </method>
    <method selector='undoManager'>
      <retval type='@' />
    </method>
    <method selector='uppercaseWord:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='validRequestorForSendType:returnType:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='willPresentError:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='yank:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSRuleEditor'>
    <method selector='addRow:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='canRemoveAllRows'>
      <retval type='B' />
    </method>
    <method selector='criteriaForRow:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='criteriaKeyPath'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='displayValuesForRow:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='displayValuesKeyPath'>
      <retval type='@' />
    </method>
    <method selector='formattingDictionary'>
      <retval type='@' />
    </method>
    <method selector='formattingStringsFilename'>
      <retval type='@' />
    </method>
    <method selector='insertRowAtIndex:withType:asSubrowOfRow:animate:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='I' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='B' />
    </method>
    <method selector='isEditable'>
      <retval type='B' />
    </method>
    <method selector='nestingMode'>
      <retval type='I' />
    </method>
    <method selector='numberOfRows'>
      <retval type='i' type64='q' />
    </method>
    <method selector='parentRowForRow:'>
      <retval type='i' type64='q' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='predicate'>
      <retval type='@' />
    </method>
    <method selector='predicateForRow:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='reloadCriteria'>
      <retval type='v' />
    </method>
    <method selector='reloadPredicate'>
      <retval type='v' />
    </method>
    <method selector='removeRowAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='removeRowsAtIndexes:includeSubrows:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='rowClass'>
      <retval type='#' />
    </method>
    <method selector='rowForDisplayValue:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='rowHeight'>
      <retval type='f' type64='d' />
    </method>
    <method selector='rowTypeForRow:'>
      <retval type='I' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='rowTypeKeyPath'>
      <retval type='@' />
    </method>
    <method selector='selectRowIndexes:byExtendingSelection:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='selectedRowIndexes'>
      <retval type='@' />
    </method>
    <method selector='setCanRemoveAllRows:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setCriteria:andDisplayValues:forRowAtIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='setCriteriaKeyPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDisplayValuesKeyPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setEditable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setFormattingDictionary:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFormattingStringsFilename:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setNestingMode:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setRowClass:'>
      <retval type='v' />
      <arg index='0' type='#' />
    </method>
    <method selector='setRowHeight:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setRowTypeKeyPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSubrowsKeyPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='subrowIndexesForRow:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='subrowsKeyPath'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSRulerMarker'>
    <method selector='drawRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='image'>
      <retval type='@' />
    </method>
    <method selector='imageOrigin'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='imageRectInRuler'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='initWithRulerView:markerLocation:image:imageOrigin:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='@' />
      <arg index='3' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='isDragging'>
      <retval type='B' />
    </method>
    <method selector='isMovable'>
      <retval type='B' />
    </method>
    <method selector='isRemovable'>
      <retval type='B' />
    </method>
    <method selector='markerLocation'>
      <retval type='f' type64='d' />
    </method>
    <method selector='representedObject'>
      <retval type='@' />
    </method>
    <method selector='ruler'>
      <retval type='@' />
    </method>
    <method selector='setImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setImageOrigin:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='setMarkerLocation:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setMovable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setRemovable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setRepresentedObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='thicknessRequiredInRuler'>
      <retval type='f' type64='d' />
    </method>
    <method selector='trackMouse:adding:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
  </class>
  <class name='NSRulerView'>
    <method selector='accessoryView'>
      <retval type='@' />
    </method>
    <method selector='addMarker:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='baselineLocation'>
      <retval type='f' type64='d' />
    </method>
    <method selector='clientView'>
      <retval type='@' />
    </method>
    <method selector='drawHashMarksAndLabelsInRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='drawMarkersInRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='initWithScrollView:orientation:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
    </method>
    <method selector='invalidateHashMarks'>
      <retval type='v' />
    </method>
    <method selector='isFlipped'>
      <retval type='B' />
    </method>
    <method selector='markers'>
      <retval type='@' />
    </method>
    <method selector='measurementUnits'>
      <retval type='@' />
    </method>
    <method selector='moveRulerlineFromLocation:toLocation:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='f' type64='d' />
    </method>
    <method selector='orientation'>
      <retval type='I' />
    </method>
    <method selector='originOffset'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='f' type64='d' />
      <arg index='3' type='@' />
      <arg index='4' type='@' />
    </method>
    <method selector='removeMarker:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='requiredThickness'>
      <retval type='f' type64='d' />
    </method>
    <method selector='reservedThicknessForAccessoryView'>
      <retval type='f' type64='d' />
    </method>
    <method selector='reservedThicknessForMarkers'>
      <retval type='f' type64='d' />
    </method>
    <method selector='ruleThickness'>
      <retval type='f' type64='d' />
    </method>
    <method selector='scrollView'>
      <retval type='@' />
    </method>
    <method selector='setAccessoryView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setClientView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMarkers:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMeasurementUnits:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setOrientation:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setOriginOffset:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setReservedThicknessForAccessoryView:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setReservedThicknessForMarkers:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setRuleThickness:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setScrollView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='trackMarker:withMouseEvent:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
  </class>
  <class name='NSSavePanel'>
    <method selector='URL'>
      <retval type='@' />
    </method>
    <method selector='accessoryView'>
      <retval type='@' />
    </method>
    <method selector='allowedFileTypes'>
      <retval type='@' />
    </method>
    <method selector='allowsOtherFileTypes'>
      <retval type='B' />
    </method>
    <method selector='beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' type='@' />
      <arg index='5' sel_of_type='v@:@i^v' />
      <arg index='6' type='^v' />
    </method>
    <method selector='beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' sel_of_type='v@:@i^v' type=':' />
      <arg index='5' type='^v' />
    </method>
    <method selector='beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' sel_of_type='v@:@i^v' />
      <arg index='5' type='^v' />
    </method>
    <method selector='canCreateDirectories'>
      <retval type='B' />
    </method>
    <method selector='canSelectHiddenExtension'>
      <retval type='B' />
    </method>
    <method selector='cancel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='directory'>
      <retval type='@' />
    </method>
    <method selector='filename'>
      <retval type='@' />
    </method>
    <method selector='isExpanded'>
      <retval type='B' />
    </method>
    <method selector='isExtensionHidden'>
      <retval type='B' />
    </method>
    <method selector='message'>
      <retval type='@' />
    </method>
    <method selector='nameFieldLabel'>
      <retval type='@' />
    </method>
    <method selector='ok:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='prompt'>
      <retval type='@' />
    </method>
    <method selector='requiredFileType'>
      <retval type='@' />
    </method>
    <method selector='runModal'>
      <retval type='i' type64='q' />
    </method>
    <method selector='runModalForDirectory:file:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method class_method='true' selector='savePanel'>
      <retval type='@' />
    </method>
    <method selector='selectText:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAccessoryView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAllowedFileTypes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAllowsOtherFileTypes:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setCanCreateDirectories:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setCanSelectHiddenExtension:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDirectory:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setExtensionHidden:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setMessage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setNameFieldLabel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPrompt:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setRequiredFileType:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTreatsFilePackagesAsDirectories:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='title'>
      <retval type='@' />
    </method>
    <method selector='treatsFilePackagesAsDirectories'>
      <retval type='B' />
    </method>
    <method selector='validateVisibleColumns'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSScreen'>
    <method class_method='true' selector='deepestScreen'>
      <retval type='@' />
    </method>
    <method selector='depth'>
      <retval type='i' />
    </method>
    <method selector='deviceDescription'>
      <retval type='@' />
    </method>
    <method selector='frame'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method class_method='true' selector='mainScreen'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='screens'>
      <retval type='@' />
    </method>
    <method selector='userSpaceScaleFactor'>
      <retval type='f' type64='d' />
    </method>
    <method selector='visibleFrame'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='supportedWindowDepths'>
      <retval c_array_delimited_by_null='true' />
    </method>
  </class>
  <class name='NSScrollView'>
    <method selector='autohidesScrollers'>
      <retval type='B' />
    </method>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='borderType'>
      <retval type='I' />
    </method>
    <method selector='contentSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method class_method='true' selector='contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='1' type='B' />
      <arg index='2' type='B' />
      <arg index='3' type='I' />
    </method>
    <method selector='contentView'>
      <retval type='@' />
    </method>
    <method selector='documentCursor'>
      <retval type='@' />
    </method>
    <method selector='documentView'>
      <retval type='@' />
    </method>
    <method selector='documentVisibleRect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='drawsBackground'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='1' type='B' />
      <arg index='2' type='B' />
      <arg index='3' type='I' />
    </method>
    <method selector='hasHorizontalRuler'>
      <retval type='B' />
    </method>
    <method selector='hasHorizontalScroller'>
      <retval type='B' />
    </method>
    <method selector='hasVerticalRuler'>
      <retval type='B' />
    </method>
    <method selector='hasVerticalScroller'>
      <retval type='B' />
    </method>
    <method selector='horizontalLineScroll'>
      <retval type='f' type64='d' />
    </method>
    <method selector='horizontalPageScroll'>
      <retval type='f' type64='d' />
    </method>
    <method selector='horizontalRulerView'>
      <retval type='@' />
    </method>
    <method selector='horizontalScroller'>
      <retval type='@' />
    </method>
    <method selector='lineScroll'>
      <retval type='f' type64='d' />
    </method>
    <method selector='pageScroll'>
      <retval type='f' type64='d' />
    </method>
    <method selector='reflectScrolledClipView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='rulerViewClass'>
      <retval type='#' />
    </method>
    <method selector='rulersVisible'>
      <retval type='B' />
    </method>
    <method selector='scrollWheel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='scrollsDynamically'>
      <retval type='B' />
    </method>
    <method selector='setAutohidesScrollers:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBorderType:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setContentView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDocumentCursor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDocumentView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDrawsBackground:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setHasHorizontalRuler:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setHasHorizontalScroller:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setHasVerticalRuler:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setHasVerticalScroller:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setHorizontalLineScroll:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setHorizontalPageScroll:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setHorizontalRulerView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHorizontalScroller:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLineScroll:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setPageScroll:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method class_method='true' selector='setRulerViewClass:'>
      <retval type='v' />
      <arg index='0' type='#' />
    </method>
    <method selector='setRulersVisible:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setScrollsDynamically:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setVerticalLineScroll:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setVerticalPageScroll:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setVerticalRulerView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setVerticalScroller:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tile'>
      <retval type='v' />
    </method>
    <method selector='verticalLineScroll'>
      <retval type='f' type64='d' />
    </method>
    <method selector='verticalPageScroll'>
      <retval type='f' type64='d' />
    </method>
    <method selector='verticalRulerView'>
      <retval type='@' />
    </method>
    <method selector='verticalScroller'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSScroller'>
    <method selector='arrowsPosition'>
      <retval type='I' />
    </method>
    <method selector='checkSpaceForParts'>
      <retval type='v' />
    </method>
    <method selector='controlSize'>
      <retval type='I' />
    </method>
    <method selector='controlTint'>
      <retval type='I' />
    </method>
    <method selector='drawArrow:highlight:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='B' />
    </method>
    <method selector='drawKnob'>
      <retval type='v' />
    </method>
    <method selector='drawKnobSlotInRect:highlight:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='B' />
    </method>
    <method selector='drawParts'>
      <retval type='v' />
    </method>
    <method selector='highlight:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='hitPart'>
      <retval type='I' />
    </method>
    <method selector='knobProportion'>
      <retval type='f' type64='d' />
    </method>
    <method selector='rectForPart:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='I' />
    </method>
    <method class_method='true' selector='scrollerWidth'>
      <retval type='f' type64='d' />
    </method>
    <method class_method='true' selector='scrollerWidthForControlSize:'>
      <retval type='f' type64='d' />
      <arg index='0' type='I' />
    </method>
    <method selector='setArrowsPosition:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setControlSize:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setControlTint:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setFloatValue:knobProportion:'>
      <retval type='v' />
      <arg index='0' type='f' />
      <arg index='1' type='f' type64='d' />
    </method>
    <method selector='setKnobProportion:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='testPart:'>
      <retval type='I' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='trackKnob:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='trackScrollButtons:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='usableParts'>
      <retval type='I' />
    </method>
  </class>
  <class name='NSSearchField'>
    <method selector='recentSearches'>
      <retval type='@' />
    </method>
    <method selector='recentsAutosaveName'>
      <retval type='@' />
    </method>
    <method selector='setRecentSearches:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setRecentsAutosaveName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSSearchFieldCell'>
    <method selector='cancelButtonCell'>
      <retval type='@' />
    </method>
    <method selector='cancelButtonRectForBounds:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='maximumRecents'>
      <retval type='i' type64='q' />
    </method>
    <method selector='recentSearches'>
      <retval type='@' />
    </method>
    <method selector='recentsAutosaveName'>
      <retval type='@' />
    </method>
    <method selector='resetCancelButtonCell'>
      <retval type='v' />
    </method>
    <method selector='resetSearchButtonCell'>
      <retval type='v' />
    </method>
    <method selector='searchButtonCell'>
      <retval type='@' />
    </method>
    <method selector='searchButtonRectForBounds:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='searchMenuTemplate'>
      <retval type='@' />
    </method>
    <method selector='searchTextRectForBounds:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='sendsSearchStringImmediately'>
      <retval type='B' />
    </method>
    <method selector='sendsWholeSearchString'>
      <retval type='B' />
    </method>
    <method selector='setCancelButtonCell:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMaximumRecents:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setRecentSearches:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setRecentsAutosaveName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSearchButtonCell:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSearchMenuTemplate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSendsSearchStringImmediately:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSendsWholeSearchString:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='NSSecureTextFieldCell'>
    <method selector='echosBullets'>
      <retval type='B' />
    </method>
    <method selector='setEchosBullets:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='NSSegmentedCell'>
    <method selector='drawSegment:inFrame:withView:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
    </method>
    <method selector='imageForSegment:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='imageScalingForSegment:'>
      <retval type='I' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='interiorBackgroundStyleForSegment:'>
      <retval type='i' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='isEnabledForSegment:'>
      <retval type='B' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='isSelectedForSegment:'>
      <retval type='B' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='labelForSegment:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='makeNextSegmentKey'>
      <retval type='v' />
    </method>
    <method selector='makePreviousSegmentKey'>
      <retval type='v' />
    </method>
    <method selector='menuForSegment:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='segmentCount'>
      <retval type='i' type64='q' />
    </method>
    <method selector='segmentStyle'>
      <retval type='i' />
    </method>
    <method selector='selectSegmentWithTag:'>
      <retval type='B' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectedSegment'>
      <retval type='i' type64='q' />
    </method>
    <method selector='setEnabled:forSegment:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setImage:forSegment:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setImageScaling:forSegment:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setLabel:forSegment:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setMenu:forSegment:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setSegmentCount:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setSegmentStyle:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setSelected:forSegment:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setSelectedSegment:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setTag:forSegment:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setToolTip:forSegment:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setTrackingMode:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setWidth:forSegment:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='tagForSegment:'>
      <retval type='i' type64='q' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='toolTipForSegment:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='trackingMode'>
      <retval type='I' />
    </method>
    <method selector='widthForSegment:'>
      <retval type='f' type64='d' />
      <arg index='0' type='i' type64='q' />
    </method>
  </class>
  <class name='NSSegmentedControl'>
    <method selector='imageForSegment:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='imageScalingForSegment:'>
      <retval type='I' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='isEnabledForSegment:'>
      <retval type='B' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='isSelectedForSegment:'>
      <retval type='B' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='labelForSegment:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='menuForSegment:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='segmentCount'>
      <retval type='i' type64='q' />
    </method>
    <method selector='segmentStyle'>
      <retval type='i' />
    </method>
    <method selector='selectSegmentWithTag:'>
      <retval type='B' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectedSegment'>
      <retval type='i' type64='q' />
    </method>
    <method selector='setEnabled:forSegment:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setImage:forSegment:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setImageScaling:forSegment:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setLabel:forSegment:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setMenu:forSegment:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setSegmentCount:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setSegmentStyle:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setSelected:forSegment:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setSelectedSegment:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setWidth:forSegment:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='widthForSegment:'>
      <retval type='f' type64='d' />
      <arg index='0' type='i' type64='q' />
    </method>
  </class>
  <class name='NSShadow'>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='set'>
      <retval type='v' />
    </method>
    <method selector='setShadowBlurRadius:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setShadowColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setShadowOffset:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='shadowBlurRadius'>
      <retval type='f' type64='d' />
    </method>
    <method selector='shadowColor'>
      <retval type='@' />
    </method>
    <method selector='shadowOffset'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
  </class>
  <class name='NSSimpleHorizontalTypesetter'>
    <method selector='breakLineAtIndex:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='capacityOfTypesetterGlyphInfo'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='clearAttributesCache'>
      <retval type='v' />
    </method>
    <method selector='clearGlyphCache'>
      <retval type='v' />
    </method>
    <method selector='currentContainer'>
      <retval type='@' />
    </method>
    <method selector='currentLayoutManager'>
      <retval type='@' />
    </method>
    <method selector='currentParagraphStyle'>
      <retval type='@' />
    </method>
    <method selector='currentTextStorage'>
      <retval type='@' />
    </method>
    <method selector='fillAttributesCache'>
      <retval type='v' />
    </method>
    <method selector='firstGlyphIndexOfCurrentLineFragment'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='fullJustifyLineAtGlyphIndex:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='glyphIndexToBreakLineByHyphenatingWordAtIndex:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='glyphIndexToBreakLineByWordWrappingAtIndex:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='growGlyphCaches:fillGlyphInfo:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='B' />
    </method>
    <method selector='insertGlyph:atGlyphIndex:characterIndex:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='layoutControlGlyphForLineFragment:'>
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='layoutControlGlyphForLineFragment:'>
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='layoutGlyphsInHorizontalLineFragment:baseline:'>
      <arg index='0' type_modifier='N' />
      <arg index='1' type_modifier='N' />
    </method>
    <method selector='layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='layoutTab'>
      <retval type='v' />
    </method>
    <method selector='layoutTab'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='sharedInstance'>
      <retval type='@' />
    </method>
    <method selector='sizeOfTypesetterGlyphInfo'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='typesetterLaidOneGlyph:'>
      <retval type='v' />
    </method>
    <method selector='updateCurGlyphOffset'>
      <retval type='v' />
    </method>
    <method selector='willSetLineFragmentRect:forGlyphRange:usedRect:'>
      <retval type='v' />
      <arg index='0' type_modifier='N' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type_modifier='N' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
  </class>
  <class name='NSSlider'>
    <method selector='acceptsFirstMouse:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='allowsTickMarkValuesOnly'>
      <retval type='B' />
    </method>
    <method selector='altIncrementValue'>
      <retval type='d' />
    </method>
    <method selector='closestTickMarkValueToValue:'>
      <retval type='d' />
      <arg index='0' type='d' />
    </method>
    <method selector='image'>
      <retval type='@' />
    </method>
    <method selector='indexOfTickMarkAtPoint:'>
      <retval type='i' type64='q' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='isVertical'>
      <retval type='i' type64='q' />
    </method>
    <method selector='knobThickness'>
      <retval type='f' type64='d' />
    </method>
    <method selector='maxValue'>
      <retval type='d' />
    </method>
    <method selector='minValue'>
      <retval type='d' />
    </method>
    <method selector='numberOfTickMarks'>
      <retval type='i' type64='q' />
    </method>
    <method selector='rectOfTickMarkAtIndex:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setAllowsTickMarkValuesOnly:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAltIncrementValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setKnobThickness:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setMaxValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setMinValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setNumberOfTickMarks:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setTickMarkPosition:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleCell:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tickMarkPosition'>
      <retval type='I' />
    </method>
    <method selector='tickMarkValueAtIndex:'>
      <retval type='d' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='title'>
      <retval type='@' />
    </method>
    <method selector='titleCell'>
      <retval type='@' />
    </method>
    <method selector='titleColor'>
      <retval type='@' />
    </method>
    <method selector='titleFont'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSSliderCell'>
    <method selector='allowsTickMarkValuesOnly'>
      <retval type='B' />
    </method>
    <method selector='altIncrementValue'>
      <retval type='d' />
    </method>
    <method selector='closestTickMarkValueToValue:'>
      <retval type='d' />
      <arg index='0' type='d' />
    </method>
    <method selector='drawBarInside:flipped:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='B' />
    </method>
    <method selector='drawKnob'>
      <retval type='v' />
    </method>
    <method selector='drawKnob:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='indexOfTickMarkAtPoint:'>
      <retval type='i' type64='q' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='isVertical'>
      <retval type='i' type64='q' />
    </method>
    <method selector='knobRectFlipped:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='B' />
    </method>
    <method selector='knobThickness'>
      <retval type='f' type64='d' />
    </method>
    <method selector='maxValue'>
      <retval type='d' />
    </method>
    <method selector='minValue'>
      <retval type='d' />
    </method>
    <method selector='numberOfTickMarks'>
      <retval type='i' type64='q' />
    </method>
    <method class_method='true' selector='prefersTrackingUntilMouseUp'>
      <retval type='B' />
    </method>
    <method selector='rectOfTickMarkAtIndex:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setAllowsTickMarkValuesOnly:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAltIncrementValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setKnobThickness:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setMaxValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setMinValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setNumberOfTickMarks:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setSliderType:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setTickMarkPosition:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleCell:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='sliderType'>
      <retval type='I' />
    </method>
    <method selector='tickMarkPosition'>
      <retval type='I' />
    </method>
    <method selector='tickMarkValueAtIndex:'>
      <retval type='d' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='title'>
      <retval type='@' />
    </method>
    <method selector='titleCell'>
      <retval type='@' />
    </method>
    <method selector='titleColor'>
      <retval type='@' />
    </method>
    <method selector='titleFont'>
      <retval type='@' />
    </method>
    <method selector='trackRect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
  </class>
  <class name='NSSound'>
    <method class_method='true' selector='canInitWithPasteboard:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='channelMapping'>
      <retval type='@' />
    </method>
    <method selector='currentTime'>
      <retval type='d' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='duration'>
      <retval type='d' />
    </method>
    <method selector='initWithContentsOfFile:byReference:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='initWithContentsOfURL:byReference:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='initWithData:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithPasteboard:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isPlaying'>
      <retval type='B' />
    </method>
    <method selector='loops'>
      <retval type='B' />
    </method>
    <method selector='name'>
      <retval type='@' />
    </method>
    <method selector='pause'>
      <retval type='B' />
    </method>
    <method selector='play'>
      <retval type='B' />
    </method>
    <method selector='playbackDeviceIdentifier'>
      <retval type='@' />
    </method>
    <method selector='resume'>
      <retval type='B' />
    </method>
    <method selector='setChannelMapping:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCurrentTime:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLoops:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setName:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPlaybackDeviceIdentifier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setVolume:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
    <method class_method='true' selector='soundNamed:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='soundUnfilteredFileTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='soundUnfilteredPasteboardTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='soundUnfilteredTypes'>
      <retval type='@' />
    </method>
    <method selector='stop'>
      <retval type='B' />
    </method>
    <method selector='volume'>
      <retval type='f' />
    </method>
    <method selector='writeToPasteboard:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSSpeechRecognizer'>
    <method selector='blocksOtherRecognizers'>
      <retval type='B' />
    </method>
    <method selector='commands'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='displayedCommandsTitle'>
      <retval type='@' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='listensInForegroundOnly'>
      <retval type='B' />
    </method>
    <method selector='setBlocksOtherRecognizers:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setCommands:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDisplayedCommandsTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setListensInForegroundOnly:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='startListening'>
      <retval type='v' />
    </method>
    <method selector='stopListening'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSSpeechSynthesizer'>
    <method selector='addSpeechDictionary:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='attributesForVoice:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='availableVoices'>
      <retval type='@' />
    </method>
    <method selector='continueSpeaking'>
      <retval type='v' />
    </method>
    <method class_method='true' selector='defaultVoice'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='initWithVoice:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='isAnyApplicationSpeaking'>
      <retval type='B' />
    </method>
    <method selector='isSpeaking'>
      <retval type='B' />
    </method>
    <method selector='objectForProperty:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='pauseSpeakingAtBoundary:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='phonemesFromText:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='rate'>
      <retval type='f' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setObject:forProperty:error:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='setRate:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
    <method selector='setUsesFeedbackWindow:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setVoice:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setVolume:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
    <method selector='startSpeakingString:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='startSpeakingString:toURL:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='stopSpeaking'>
      <retval type='v' />
    </method>
    <method selector='stopSpeakingAtBoundary:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='usesFeedbackWindow'>
      <retval type='B' />
    </method>
    <method selector='voice'>
      <retval type='@' />
    </method>
    <method selector='volume'>
      <retval type='f' />
    </method>
  </class>
  <class name='NSSpellChecker'>
    <method selector='accessoryView'>
      <retval type='@' />
    </method>
    <method selector='availableLanguages'>
      <retval type='@' />
    </method>
    <method selector='checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='@' />
      <arg index='3' type='B' />
      <arg index='4' type='i' type64='q' />
      <arg index='5' type_modifier='o' />
    </method>
    <method selector='checkSpellingOfString:startingAt:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='@' />
      <arg index='3' type='B' />
      <arg index='4' type='i' type64='q' />
      <arg index='5' type_modifier='o' />
    </method>
    <method selector='closeSpellDocumentWithTag:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='i' type64='q' />
    </method>
    <method selector='countWordsInString:language:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='forgetWord:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='guessesForWord:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='hasLearnedWord:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='ignoreWord:inSpellDocumentWithTag:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='ignoredWordsInSpellDocumentWithTag:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='language'>
      <retval type='@' />
    </method>
    <method selector='learnWord:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAccessoryView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setIgnoredWords:inSpellDocumentWithTag:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setLanguage:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setWordFieldStringValue:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='sharedSpellChecker'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='sharedSpellCheckerExists'>
      <retval type='B' />
    </method>
    <method selector='spellingPanel'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='uniqueSpellDocumentTag'>
      <retval type='i' type64='q' />
    </method>
    <method selector='unlearnWord:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='updateSpellingPanelWithGrammarString:detail:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='updateSpellingPanelWithMisspelledWord:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSSplitView'>
    <method selector='adjustSubviews'>
      <retval type='v' />
    </method>
    <method selector='autosaveName'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='dividerColor'>
      <retval type='@' />
    </method>
    <method selector='dividerStyle'>
      <retval type='i' />
    </method>
    <method selector='dividerThickness'>
      <retval type='f' type64='d' />
    </method>
    <method selector='drawDividerInRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='isPaneSplitter'>
      <retval type='B' />
    </method>
    <method selector='isSubviewCollapsed:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isVertical'>
      <retval type='B' />
    </method>
    <method selector='maxPossiblePositionOfDividerAtIndex:'>
      <retval type='f' type64='d' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='minPossiblePositionOfDividerAtIndex:'>
      <retval type='f' type64='d' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setAutosaveName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDividerStyle:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setIsPaneSplitter:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setPosition:ofDividerAtIndex:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='setVertical:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='NSStatusBar'>
    <method selector='isVertical'>
      <retval type='B' />
    </method>
    <method selector='removeStatusItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='statusItemWithLength:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method class_method='true' selector='systemStatusBar'>
      <retval type='@' />
    </method>
    <method selector='thickness'>
      <retval type='f' type64='d' />
    </method>
  </class>
  <class name='NSStatusItem'>
    <method selector='action'>
      <retval type=':' />
    </method>
    <method selector='alternateImage'>
      <retval type='@' />
    </method>
    <method selector='attributedTitle'>
      <retval type='@' />
    </method>
    <method selector='doubleAction'>
      <retval type=':' />
    </method>
    <method selector='drawStatusBarBackgroundInRect:withHighlight:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='B' />
    </method>
    <method selector='highlightMode'>
      <retval type='B' />
    </method>
    <method selector='image'>
      <retval type='@' />
    </method>
    <method selector='isEnabled'>
      <retval type='B' />
    </method>
    <method selector='length'>
      <retval type='f' type64='d' />
    </method>
    <method selector='menu'>
      <retval type='@' />
    </method>
    <method selector='popUpStatusItemMenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='sendActionOn:'>
      <retval type='i' type64='q' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setAction:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setAlternateImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAttributedTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDoubleAction:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setHighlightMode:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLength:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setMenu:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTarget:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setToolTip:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='statusBar'>
      <retval type='@' />
    </method>
    <method selector='target'>
      <retval type='@' />
    </method>
    <method selector='title'>
      <retval type='@' />
    </method>
    <method selector='toolTip'>
      <retval type='@' />
    </method>
    <method selector='view'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSStepper'>
    <method selector='autorepeat'>
      <retval type='B' />
    </method>
    <method selector='increment'>
      <retval type='d' />
    </method>
    <method selector='maxValue'>
      <retval type='d' />
    </method>
    <method selector='minValue'>
      <retval type='d' />
    </method>
    <method selector='setAutorepeat:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setIncrement:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setMaxValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setMinValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setValueWraps:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='valueWraps'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSStepperCell'>
    <method selector='autorepeat'>
      <retval type='B' />
    </method>
    <method selector='increment'>
      <retval type='d' />
    </method>
    <method selector='maxValue'>
      <retval type='d' />
    </method>
    <method selector='minValue'>
      <retval type='d' />
    </method>
    <method selector='setAutorepeat:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setIncrement:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setMaxValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setMinValue:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setValueWraps:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='valueWraps'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSString'>
    <method selector='boundingRectWithSize:options:attributes:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='1' type='i' />
      <arg index='2' type='@' />
    </method>
    <method selector='drawAtPoint:withAttributes:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='@' />
    </method>
    <method selector='drawInRect:withAttributes:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='drawWithRect:options:attributes:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='i' />
      <arg index='2' type='@' />
    </method>
    <method selector='sizeWithAttributes:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSTabView'>
    <method selector='addTabViewItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='allowsTruncatedLabels'>
      <retval type='B' />
    </method>
    <method selector='contentRect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='controlSize'>
      <retval type='I' />
    </method>
    <method selector='controlTint'>
      <retval type='I' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='drawsBackground'>
      <retval type='B' />
    </method>
    <method selector='font'>
      <retval type='@' />
    </method>
    <method selector='indexOfTabViewItem:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='indexOfTabViewItemWithIdentifier:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertTabViewItem:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='minimumSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='numberOfTabViewItems'>
      <retval type='i' type64='q' />
    </method>
    <method selector='removeTabViewItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectFirstTabViewItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectLastTabViewItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectNextTabViewItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectPreviousTabViewItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectTabViewItem:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectTabViewItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectTabViewItemWithIdentifier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectedTabViewItem'>
      <retval type='@' />
    </method>
    <method selector='setAllowsTruncatedLabels:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setControlSize:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setControlTint:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDrawsBackground:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTabViewType:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='tabViewItemAtIndex:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='tabViewItemAtPoint:'>
      <retval type='@' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='tabViewItems'>
      <retval type='@' />
    </method>
    <method selector='tabViewType'>
      <retval type='I' />
    </method>
    <method selector='takeSelectedTabViewItemFromSender:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSTabViewItem'>
    <method selector='color'>
      <retval type='@' />
    </method>
    <method selector='drawLabel:inRect:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='identifier'>
      <retval type='@' />
    </method>
    <method selector='initWithIdentifier:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initialFirstResponder'>
      <retval type='@' />
    </method>
    <method selector='label'>
      <retval type='@' />
    </method>
    <method selector='setColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setIdentifier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setInitialFirstResponder:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLabel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='sizeOfLabel:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='B' />
    </method>
    <method selector='tabState'>
      <retval type='I' />
    </method>
    <method selector='tabView'>
      <retval type='@' />
    </method>
    <method selector='view'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSTableColumn'>
    <method selector='dataCell'>
      <retval type='@' />
    </method>
    <method selector='dataCellForRow:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='headerCell'>
      <retval type='@' />
    </method>
    <method selector='headerToolTip'>
      <retval type='@' />
    </method>
    <method selector='identifier'>
      <retval type='@' />
    </method>
    <method selector='initWithIdentifier:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isEditable'>
      <retval type='B' />
    </method>
    <method selector='isHidden'>
      <retval type='B' />
    </method>
    <method selector='isResizable'>
      <retval type='B' />
    </method>
    <method selector='maxWidth'>
      <retval type='f' type64='d' />
    </method>
    <method selector='minWidth'>
      <retval type='f' type64='d' />
    </method>
    <method selector='resizingMask'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='setDataCell:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setEditable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setHeaderCell:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHeaderToolTip:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHidden:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setIdentifier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMaxWidth:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setMinWidth:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setResizable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setResizingMask:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setSortDescriptorPrototype:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTableView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setWidth:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='sizeToFit'>
      <retval type='v' />
    </method>
    <method selector='sortDescriptorPrototype'>
      <retval type='@' />
    </method>
    <method selector='tableView'>
      <retval type='@' />
    </method>
    <method selector='width'>
      <retval type='f' type64='d' />
    </method>
  </class>
  <class name='NSTableHeaderCell'>
    <method selector='drawSortIndicatorWithFrame:inView:ascending:priority:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
      <arg index='3' type='i' type64='q' />
    </method>
    <method selector='sortIndicatorRectForBounds:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
  </class>
  <class name='NSTableHeaderView'>
    <method selector='columnAtPoint:'>
      <retval type='i' type64='q' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='draggedColumn'>
      <retval type='i' type64='q' />
    </method>
    <method selector='draggedDistance'>
      <retval type='f' type64='d' />
    </method>
    <method selector='headerRectOfColumn:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='resizedColumn'>
      <retval type='i' type64='q' />
    </method>
    <method selector='setTableView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tableView'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSTableView'>
    <method selector='addTableColumn:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='allowsColumnReordering'>
      <retval type='B' />
    </method>
    <method selector='allowsColumnResizing'>
      <retval type='B' />
    </method>
    <method selector='allowsColumnSelection'>
      <retval type='B' />
    </method>
    <method selector='allowsEmptySelection'>
      <retval type='B' />
    </method>
    <method selector='allowsMultipleSelection'>
      <retval type='B' />
    </method>
    <method selector='allowsTypeSelect'>
      <retval type='B' />
    </method>
    <method selector='autoresizesAllColumnsToFit'>
      <retval type='B' />
    </method>
    <method selector='autosaveName'>
      <retval type='@' />
    </method>
    <method selector='autosaveTableColumns'>
      <retval type='B' />
    </method>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='canDragRowsWithIndexes:atPoint:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='clickedColumn'>
      <retval type='i' type64='q' />
    </method>
    <method selector='clickedRow'>
      <retval type='i' type64='q' />
    </method>
    <method selector='columnAtPoint:'>
      <retval type='i' type64='q' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='columnAutoresizingStyle'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='columnIndexesInRect:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='columnWithIdentifier:'>
      <retval type='i' type64='q' />
      <arg index='0' type='@' />
    </method>
    <method selector='columnsInRect:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='cornerView'>
      <retval type='@' />
    </method>
    <method selector='dataSource'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='deselectAll:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='deselectColumn:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='deselectRow:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='doubleAction'>
      <retval type=':' />
    </method>
    <method selector='dragImageForRows:event:dragImageOffset:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type_modifier='N' />
    </method>
    <method selector='dragImageForRowsWithIndexes:tableColumns:event:offset:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type_modifier='N' />
    </method>
    <method selector='drawBackgroundInClipRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='drawGridInClipRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='drawRow:clipRect:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='drawsGrid'>
      <retval type='B' />
    </method>
    <method selector='editColumn:row:withEvent:select:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='@' />
      <arg index='3' type='B' />
    </method>
    <method selector='editedColumn'>
      <retval type='i' type64='q' />
    </method>
    <method selector='editedRow'>
      <retval type='i' type64='q' />
    </method>
    <method selector='frameOfCellAtColumn:row:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='gridColor'>
      <retval type='@' />
    </method>
    <method selector='gridStyleMask'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='headerView'>
      <retval type='@' />
    </method>
    <method selector='highlightSelectionInClipRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='highlightedTableColumn'>
      <retval type='@' />
    </method>
    <method selector='indicatorImageInTableColumn:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='intercellSpacing'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='isColumnSelected:'>
      <retval type='B' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='isRowSelected:'>
      <retval type='B' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='moveColumn:toColumn:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='noteHeightOfRowsWithIndexesChanged:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='noteNumberOfRowsChanged'>
      <retval type='v' />
    </method>
    <method selector='numberOfColumns'>
      <retval type='i' type64='q' />
    </method>
    <method selector='numberOfRows'>
      <retval type='i' type64='q' />
    </method>
    <method selector='numberOfSelectedColumns'>
      <retval type='i' type64='q' />
    </method>
    <method selector='numberOfSelectedRows'>
      <retval type='i' type64='q' />
    </method>
    <method selector='preparedCellAtColumn:row:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='rectOfColumn:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='rectOfRow:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='reloadData'>
      <retval type='v' />
    </method>
    <method selector='removeTableColumn:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='rowAtPoint:'>
      <retval type='i' type64='q' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='rowHeight'>
      <retval type='f' type64='d' />
    </method>
    <method selector='rowsInRect:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='scrollColumnToVisible:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='scrollRowToVisible:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='selectAll:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectColumn:byExtendingSelection:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='B' />
    </method>
    <method selector='selectColumnIndexes:byExtendingSelection:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='selectRow:byExtendingSelection:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='B' />
    </method>
    <method selector='selectRowIndexes:byExtendingSelection:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='selectedColumn'>
      <retval type='i' type64='q' />
    </method>
    <method selector='selectedColumnEnumerator'>
      <retval type='@' />
    </method>
    <method selector='selectedColumnIndexes'>
      <retval type='@' />
    </method>
    <method selector='selectedRow'>
      <retval type='i' type64='q' />
    </method>
    <method selector='selectedRowEnumerator'>
      <retval type='@' />
    </method>
    <method selector='selectedRowIndexes'>
      <retval type='@' />
    </method>
    <method selector='selectionHighlightStyle'>
      <retval type='i' type64='q' />
    </method>
    <method selector='setAllowsColumnReordering:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAllowsColumnResizing:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAllowsColumnSelection:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAllowsEmptySelection:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAllowsMultipleSelection:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAllowsTypeSelect:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAutoresizesAllColumnsToFit:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAutosaveName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAutosaveTableColumns:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setColumnAutoresizingStyle:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setCornerView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDataSource:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDoubleAction:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setDraggingSourceOperationMask:forLocal:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='B' />
    </method>
    <method selector='setDrawsGrid:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDropRow:dropOperation:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='I' />
    </method>
    <method selector='setGridColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setGridStyleMask:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setHeaderView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setHighlightedTableColumn:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setIndicatorImage:inTableColumn:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setIntercellSpacing:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setRowHeight:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setSelectionHighlightStyle:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setSortDescriptors:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setUsesAlternatingRowBackgroundColors:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setVerticalMotionCanBeginDrag:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='sizeLastColumnToFit'>
      <retval type='v' />
    </method>
    <method selector='sizeToFit'>
      <retval type='v' />
    </method>
    <method selector='sortDescriptors'>
      <retval type='@' />
    </method>
    <method selector='tableColumnWithIdentifier:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='tableColumns'>
      <retval type='@' />
    </method>
    <method selector='textDidBeginEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textDidChange:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textDidEndEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textShouldBeginEditing:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='textShouldEndEditing:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='tile'>
      <retval type='v' />
    </method>
    <method selector='usesAlternatingRowBackgroundColors'>
      <retval type='B' />
    </method>
    <method selector='verticalMotionCanBeginDrag'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSText'>
    <method selector='RTFDFromRange:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='RTFFromRange:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='alignCenter:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='alignLeft:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='alignRight:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='alignment'>
      <retval type='I' />
    </method>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='baseWritingDirection'>
      <retval type='i' />
    </method>
    <method selector='changeFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='checkSpelling:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='copy:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='copyFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='copyRuler:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='cut:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='delete:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='drawsBackground'>
      <retval type='B' />
    </method>
    <method selector='font'>
      <retval type='@' />
    </method>
    <method selector='importsGraphics'>
      <retval type='B' />
    </method>
    <method selector='isEditable'>
      <retval type='B' />
    </method>
    <method selector='isFieldEditor'>
      <retval type='B' />
    </method>
    <method selector='isHorizontallyResizable'>
      <retval type='B' />
    </method>
    <method selector='isRichText'>
      <retval type='B' />
    </method>
    <method selector='isRulerVisible'>
      <retval type='B' />
    </method>
    <method selector='isSelectable'>
      <retval type='B' />
    </method>
    <method selector='isVerticallyResizable'>
      <retval type='B' />
    </method>
    <method selector='maxSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='minSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='paste:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='pasteFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='pasteRuler:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='readRTFDFromFile:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='replaceCharactersInRange:withRTF:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='replaceCharactersInRange:withRTFD:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='replaceCharactersInRange:withString:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='scrollRangeToVisible:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='selectAll:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectedRange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setAlignment:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBaseWritingDirection:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDrawsBackground:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setEditable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setFieldEditor:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFont:range:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setHorizontallyResizable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setImportsGraphics:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setMaxSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setMinSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setRichText:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSelectable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSelectedRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTextColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTextColor:range:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setUsesFontPanel:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setVerticallyResizable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='showGuessPanel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='sizeToFit'>
      <retval type='v' />
    </method>
    <method selector='string'>
      <retval type='@' />
    </method>
    <method selector='subscript:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='superscript:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textColor'>
      <retval type='@' />
    </method>
    <method selector='toggleRuler:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='underline:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='unscript:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='usesFontPanel'>
      <retval type='B' />
    </method>
    <method selector='writeRTFDToFile:atomically:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
  </class>
  <class name='NSTextAttachment'>
    <method selector='attachmentCell'>
      <retval type='@' />
    </method>
    <method selector='fileWrapper'>
      <retval type='@' />
    </method>
    <method selector='initWithFileWrapper:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAttachmentCell:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFileWrapper:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSTextBlock'>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='borderColorForEdge:'>
      <retval type='@' />
      <arg index='0' type='i' type64='Q' />
    </method>
    <method selector='boundsRectForContentRect:inRect:textContainer:characterRange:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
      <arg index='3' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='contentWidth'>
      <retval type='f' type64='d' />
    </method>
    <method selector='contentWidthValueType'>
      <retval type='I' />
    </method>
    <method selector='drawBackgroundWithFrame:inView:characterRange:layoutManager:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='3' type='@' />
    </method>
    <method selector='init'>
      <retval type='@' />
    </method>
    <method selector='rectForLayoutAtPoint:inRect:textContainer:characterRange:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
      <arg index='3' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBorderColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBorderColor:forEdge:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='Q' />
    </method>
    <method selector='setContentWidth:type:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='I' />
    </method>
    <method selector='setValue:type:forDimension:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='I' />
      <arg index='2' type='I' />
    </method>
    <method selector='setVerticalAlignment:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setWidth:type:forLayer:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='I' />
      <arg index='2' type='i' />
    </method>
    <method selector='setWidth:type:forLayer:edge:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='I' />
      <arg index='2' type='i' />
      <arg index='3' type='i' type64='Q' />
    </method>
    <method selector='valueForDimension:'>
      <retval type='f' type64='d' />
      <arg index='0' type='I' />
    </method>
    <method selector='valueTypeForDimension:'>
      <retval type='I' />
      <arg index='0' type='I' />
    </method>
    <method selector='verticalAlignment'>
      <retval type='I' />
    </method>
    <method selector='widthForLayer:edge:'>
      <retval type='f' type64='d' />
      <arg index='0' type='i' />
      <arg index='1' type='i' type64='Q' />
    </method>
    <method selector='widthValueTypeForLayer:edge:'>
      <retval type='I' />
      <arg index='0' type='i' />
      <arg index='1' type='i' type64='Q' />
    </method>
  </class>
  <class name='NSTextContainer'>
    <method selector='containerSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='containsPoint:'>
      <retval type='B' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='heightTracksTextView'>
      <retval type='B' />
    </method>
    <method selector='initWithContainerSize:'>
      <retval type='@' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='isSimpleRectangularTextContainer'>
      <retval type='B' />
    </method>
    <method selector='layoutManager'>
      <retval type='@' />
    </method>
    <method selector='lineFragmentPadding'>
      <retval type='f' type64='d' />
    </method>
    <method selector='lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='I' />
      <arg index='2' type='I' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='replaceLayoutManager:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setContainerSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setHeightTracksTextView:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setLayoutManager:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLineFragmentPadding:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setTextView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setWidthTracksTextView:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='textView'>
      <retval type='@' />
    </method>
    <method selector='widthTracksTextView'>
      <retval type='B' />
    </method>
  </class>
  <class name='NSTextField'>
    <method selector='acceptsFirstResponder'>
      <retval type='B' />
    </method>
    <method selector='allowsEditingTextAttributes'>
      <retval type='B' />
    </method>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='bezelStyle'>
      <retval type='I' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='drawsBackground'>
      <retval type='B' />
    </method>
    <method selector='importsGraphics'>
      <retval type='B' />
    </method>
    <method selector='isBezeled'>
      <retval type='B' />
    </method>
    <method selector='isBordered'>
      <retval type='B' />
    </method>
    <method selector='isEditable'>
      <retval type='B' />
    </method>
    <method selector='isSelectable'>
      <retval type='B' />
    </method>
    <method selector='selectText:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAllowsEditingTextAttributes:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBezelStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setBezeled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setBordered:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDrawsBackground:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setEditable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setImportsGraphics:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSelectable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setTextColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleWithMnemonic:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textColor'>
      <retval type='@' />
    </method>
    <method selector='textDidBeginEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textDidChange:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textDidEndEditing:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textShouldBeginEditing:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='textShouldEndEditing:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSTextFieldCell'>
    <method selector='allowedInputSourceLocales'>
      <retval type='@' />
    </method>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='bezelStyle'>
      <retval type='I' />
    </method>
    <method selector='drawsBackground'>
      <retval type='B' />
    </method>
    <method selector='placeholderAttributedString'>
      <retval type='@' />
    </method>
    <method selector='placeholderString'>
      <retval type='@' />
    </method>
    <method selector='setAllowedInputSourceLocales:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBezelStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setDrawsBackground:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setPlaceholderAttributedString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPlaceholderString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTextColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setUpFieldEditorAttributes:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='setWantsNotificationForMarkedText:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='textColor'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSTextList'>
    <method selector='initWithMarkerFormat:options:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='listOptions'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='markerForItemNumber:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='markerFormat'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSTextStorage'>
    <method selector='addLayoutManager:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='attributeRuns'>
      <retval type='@' />
    </method>
    <method selector='changeInLength'>
      <retval type='i' type64='q' />
    </method>
    <method selector='characters'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='edited:range:changeInLength:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type='i' type64='q' />
    </method>
    <method selector='editedMask'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='editedRange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='ensureAttributesAreFixedInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='fixesAttributesLazily'>
      <retval type='B' />
    </method>
    <method selector='font'>
      <retval type='@' />
    </method>
    <method selector='foregroundColor'>
      <retval type='@' />
    </method>
    <method selector='invalidateAttributesInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='layoutManagers'>
      <retval type='@' />
    </method>
    <method selector='paragraphs'>
      <retval type='@' />
    </method>
    <method selector='processEditing'>
      <retval type='v' />
    </method>
    <method selector='removeLayoutManager:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAttributeRuns:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCharacters:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFont:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setForegroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setParagraphs:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setWords:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='words'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSTextTab'>
    <method selector='alignment'>
      <retval type='I' />
    </method>
    <method selector='initWithTextAlignment:location:options:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='@' />
    </method>
    <method selector='initWithType:location:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='f' type64='d' />
    </method>
    <method selector='location'>
      <retval type='f' type64='d' />
    </method>
    <method selector='options'>
      <retval type='@' />
    </method>
    <method selector='tabStopType'>
      <retval type='I' />
    </method>
  </class>
  <class name='NSTextTable'>
    <method selector='boundsRectForBlock:contentRect:inRect:textContainer:characterRange:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='3' type='@' />
      <arg index='4' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='collapsesBorders'>
      <retval type='B' />
    </method>
    <method selector='drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
      <arg index='3' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='4' type='@' />
    </method>
    <method selector='hidesEmptyCells'>
      <retval type='B' />
    </method>
    <method selector='layoutAlgorithm'>
      <retval type='I' />
    </method>
    <method selector='numberOfColumns'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='3' type='@' />
      <arg index='4' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setCollapsesBorders:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setHidesEmptyCells:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setLayoutAlgorithm:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setNumberOfColumns:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
  </class>
  <class name='NSTextTableBlock'>
    <method selector='columnSpan'>
      <retval type='i' type64='q' />
    </method>
    <method selector='initWithTable:startingRow:rowSpan:startingColumn:columnSpan:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='i' type64='q' />
      <arg index='4' type='i' type64='q' />
    </method>
    <method selector='rowSpan'>
      <retval type='i' type64='q' />
    </method>
    <method selector='startingColumn'>
      <retval type='i' type64='q' />
    </method>
    <method selector='startingRow'>
      <retval type='i' type64='q' />
    </method>
    <method selector='table'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSTextView'>
    <method selector='acceptableDragTypes'>
      <retval type='@' />
    </method>
    <method selector='acceptsGlyphInfo'>
      <retval type='B' />
    </method>
    <method selector='alignJustified:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='allowedInputSourceLocales'>
      <retval type='@' />
    </method>
    <method selector='allowsDocumentBackgroundColorChange'>
      <retval type='B' />
    </method>
    <method selector='allowsImageEditing'>
      <retval type='B' />
    </method>
    <method selector='allowsUndo'>
      <retval type='B' />
    </method>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='breakUndoCoalescing'>
      <retval type='v' />
    </method>
    <method selector='changeAttributes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='changeColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='changeDocumentBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='characterIndexForInsertionAtPoint:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='cleanUpAfterDragOperation'>
      <retval type='v' />
    </method>
    <method selector='clickedOnLink:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='complete:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='completionsForPartialWordRange:indexOfSelectedItem:'>
      <retval type='@' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='defaultParagraphStyle'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='didChangeText'>
      <retval type='v' />
    </method>
    <method selector='displaysLinkToolTips'>
      <retval type='B' />
    </method>
    <method selector='dragImageForSelectionWithEvent:origin:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='dragOperationForDraggingInfo:type:'>
      <retval type='I' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='dragSelectionWithEvent:offset:slideBack:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='2' type='B' />
    </method>
    <method selector='drawInsertionPointInRect:color:turnedOn:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method selector='drawViewBackgroundInRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='drawsBackground'>
      <retval type='B' />
    </method>
    <method selector='importsGraphics'>
      <retval type='B' />
    </method>
    <method selector='initWithFrame:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='initWithFrame:textContainer:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='insertCompletion:forPartialWordRange:movement:isFinal:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type='i' type64='q' />
      <arg index='3' type='B' />
    </method>
    <method selector='insertText:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertionPointColor'>
      <retval type='@' />
    </method>
    <method selector='invalidateTextContainerOrigin'>
      <retval type='v' />
    </method>
    <method selector='isAutomaticLinkDetectionEnabled'>
      <retval type='B' />
    </method>
    <method selector='isAutomaticQuoteSubstitutionEnabled'>
      <retval type='B' />
    </method>
    <method selector='isContinuousSpellCheckingEnabled'>
      <retval type='B' />
    </method>
    <method selector='isEditable'>
      <retval type='B' />
    </method>
    <method selector='isFieldEditor'>
      <retval type='B' />
    </method>
    <method selector='isGrammarCheckingEnabled'>
      <retval type='B' />
    </method>
    <method selector='isRichText'>
      <retval type='B' />
    </method>
    <method selector='isRulerVisible'>
      <retval type='B' />
    </method>
    <method selector='isSelectable'>
      <retval type='B' />
    </method>
    <method selector='layoutManager'>
      <retval type='@' />
    </method>
    <method selector='linkTextAttributes'>
      <retval type='@' />
    </method>
    <method selector='loosenKerning:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='lowerBaseline:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='markedTextAttributes'>
      <retval type='@' />
    </method>
    <method selector='orderFrontLinkPanel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='orderFrontListPanel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='orderFrontSpacingPanel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='orderFrontTablePanel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='outline:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='pasteAsPlainText:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='pasteAsRichText:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='performFindPanelAction:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='preferredPasteboardTypeFromArray:restrictedToTypesFromArray:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='raiseBaseline:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='rangeForUserCharacterAttributeChange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='rangeForUserCompletion'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='rangeForUserParagraphAttributeChange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='rangeForUserTextChange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='rangesForUserCharacterAttributeChange'>
      <retval type='@' />
    </method>
    <method selector='rangesForUserParagraphAttributeChange'>
      <retval type='@' />
    </method>
    <method selector='rangesForUserTextChange'>
      <retval type='@' />
    </method>
    <method selector='readSelectionFromPasteboard:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='readSelectionFromPasteboard:type:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='readablePasteboardTypes'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='registerForServices'>
      <retval type='v' />
    </method>
    <method selector='replaceTextContainer:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='rulerView:didAddMarker:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='rulerView:didMoveMarker:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='rulerView:didRemoveMarker:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='rulerView:handleMouseDown:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='rulerView:shouldAddMarker:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='rulerView:shouldMoveMarker:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='rulerView:shouldRemoveMarker:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='rulerView:willAddMarker:atLocation:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='f' type64='d' />
    </method>
    <method selector='rulerView:willMoveMarker:toLocation:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='f' type64='d' />
    </method>
    <method selector='selectedRanges'>
      <retval type='@' />
    </method>
    <method selector='selectedTextAttributes'>
      <retval type='@' />
    </method>
    <method selector='selectionAffinity'>
      <retval type='I' />
    </method>
    <method selector='selectionGranularity'>
      <retval type='I' />
    </method>
    <method selector='selectionRangeForProposedRange:granularity:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='I' />
    </method>
    <method selector='setAcceptsGlyphInfo:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAlignment:range:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setAllowedInputSourceLocales:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAllowsDocumentBackgroundColorChange:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAllowsImageEditing:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAllowsUndo:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAutomaticLinkDetectionEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAutomaticQuoteSubstitutionEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBaseWritingDirection:range:'>
      <retval type='v' />
      <arg index='0' type='i' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setConstrainedFrameSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setContinuousSpellCheckingEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDefaultParagraphStyle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDisplaysLinkToolTips:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDrawsBackground:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setEditable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setFieldEditor:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setGrammarCheckingEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setImportsGraphics:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setInsertionPointColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLinkTextAttributes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMarkedTextAttributes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setNeedsDisplayInRect:avoidAdditionalLayout:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='B' />
    </method>
    <method selector='setRichText:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setRulerVisible:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSelectable:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSelectedRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setSelectedRange:affinity:stillSelecting:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='I' />
      <arg index='2' type='B' />
    </method>
    <method selector='setSelectedRanges:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSelectedRanges:affinity:stillSelecting:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='B' />
    </method>
    <method selector='setSelectedTextAttributes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSelectionGranularity:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setSmartInsertDeleteEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSpellingState:range:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setTextContainer:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTextContainerInset:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setTypingAttributes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setUsesFindPanel:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setUsesFontPanel:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setUsesRuler:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='shouldChangeTextInRange:replacementString:'>
      <retval type='B' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
    </method>
    <method selector='shouldChangeTextInRanges:replacementStrings:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='shouldDrawInsertionPoint'>
      <retval type='B' />
    </method>
    <method selector='showFindIndicatorForRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='smartDeleteRangeForProposedRange:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='smartInsertAfterStringForString:replacingRange:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='smartInsertBeforeStringForString:replacingRange:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='smartInsertDeleteEnabled'>
      <retval type='B' />
    </method>
    <method selector='smartInsertForString:replacingRange:beforeString:afterString:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type_modifier='o' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='spellCheckerDocumentTag'>
      <retval type='i' type64='q' />
    </method>
    <method selector='startSpeaking:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='stopSpeaking:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='textContainer'>
      <retval type='@' />
    </method>
    <method selector='textContainerInset'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='textContainerOrigin'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='textStorage'>
      <retval type='@' />
    </method>
    <method selector='tightenKerning:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='toggleAutomaticLinkDetection:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='toggleAutomaticQuoteSubstitution:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='toggleBaseWritingDirection:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='toggleContinuousSpellChecking:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='toggleGrammarChecking:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='toggleSmartInsertDelete:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='toggleTraditionalCharacterShape:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='turnOffKerning:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='turnOffLigatures:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='typingAttributes'>
      <retval type='@' />
    </method>
    <method selector='updateDragTypeRegistration'>
      <retval type='v' />
    </method>
    <method selector='updateFontPanel'>
      <retval type='v' />
    </method>
    <method selector='updateInsertionPointStateAndRestartTimer:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='updateRuler'>
      <retval type='v' />
    </method>
    <method selector='useAllLigatures:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='useStandardKerning:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='useStandardLigatures:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='usesFindPanel'>
      <retval type='B' />
    </method>
    <method selector='usesFontPanel'>
      <retval type='B' />
    </method>
    <method selector='usesRuler'>
      <retval type='B' />
    </method>
    <method selector='validRequestorForSendType:returnType:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='writablePasteboardTypes'>
      <retval type='@' />
    </method>
    <method selector='writeSelectionToPasteboard:type:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='writeSelectionToPasteboard:types:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
  </class>
  <class name='NSTokenField'>
    <method selector='completionDelay'>
      <retval type='d' />
    </method>
    <method class_method='true' selector='defaultCompletionDelay'>
      <retval type='d' />
    </method>
    <method class_method='true' selector='defaultTokenizingCharacterSet'>
      <retval type='@' />
    </method>
    <method selector='setCompletionDelay:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setTokenStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setTokenizingCharacterSet:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tokenStyle'>
      <retval type='I' />
    </method>
    <method selector='tokenizingCharacterSet'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSTokenFieldCell'>
    <method selector='completionDelay'>
      <retval type='d' />
    </method>
    <method class_method='true' selector='defaultCompletionDelay'>
      <retval type='d' />
    </method>
    <method class_method='true' selector='defaultTokenizingCharacterSet'>
      <retval type='@' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='setCompletionDelay:'>
      <retval type='v' />
      <arg index='0' type='d' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTokenStyle:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setTokenizingCharacterSet:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='tokenStyle'>
      <retval type='I' />
    </method>
    <method selector='tokenizingCharacterSet'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSToolbar'>
    <method selector='allowsUserCustomization'>
      <retval type='B' />
    </method>
    <method selector='autosavesConfiguration'>
      <retval type='B' />
    </method>
    <method selector='configurationDictionary'>
      <retval type='@' />
    </method>
    <method selector='customizationPaletteIsRunning'>
      <retval type='B' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='displayMode'>
      <retval type='I' />
    </method>
    <method selector='identifier'>
      <retval type='@' />
    </method>
    <method selector='initWithIdentifier:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertItemWithItemIdentifier:atIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='isVisible'>
      <retval type='B' />
    </method>
    <method selector='items'>
      <retval type='@' />
    </method>
    <method selector='removeItemAtIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='runCustomizationPalette:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectedItemIdentifier'>
      <retval type='@' />
    </method>
    <method selector='setAllowsUserCustomization:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAutosavesConfiguration:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setConfigurationFromDictionary:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDisplayMode:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setSelectedItemIdentifier:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setShowsBaselineSeparator:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSizeMode:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setVisible:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='showsBaselineSeparator'>
      <retval type='B' />
    </method>
    <method selector='sizeMode'>
      <retval type='I' />
    </method>
    <method selector='validateVisibleItems'>
      <retval type='v' />
    </method>
    <method selector='visibleItems'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSToolbarItem'>
    <method selector='action'>
      <retval type=':' />
    </method>
    <method selector='allowsDuplicatesInToolbar'>
      <retval type='B' />
    </method>
    <method selector='autovalidates'>
      <retval type='B' />
    </method>
    <method selector='image'>
      <retval type='@' />
    </method>
    <method selector='initWithItemIdentifier:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isEnabled'>
      <retval type='B' />
    </method>
    <method selector='itemIdentifier'>
      <retval type='@' />
    </method>
    <method selector='label'>
      <retval type='@' />
    </method>
    <method selector='maxSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='menuFormRepresentation'>
      <retval type='@' />
    </method>
    <method selector='minSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='paletteLabel'>
      <retval type='@' />
    </method>
    <method selector='setAction:'>
      <retval type='v' />
      <arg index='0' sel_of_type='v@:@' />
    </method>
    <method selector='setAutovalidates:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLabel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMaxSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setMenuFormRepresentation:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMinSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setPaletteLabel:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTag:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setTarget:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setToolTip:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setVisibilityPriority:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='tag'>
      <retval type='i' type64='q' />
    </method>
    <method selector='target'>
      <retval type='@' />
    </method>
    <method selector='toolTip'>
      <retval type='@' />
    </method>
    <method selector='toolbar'>
      <retval type='@' />
    </method>
    <method selector='validate'>
      <retval type='v' />
    </method>
    <method selector='view'>
      <retval type='@' />
    </method>
    <method selector='visibilityPriority'>
      <retval type='i' type64='q' />
    </method>
  </class>
  <class name='NSToolbarItemGroup'>
    <method selector='setSubitems:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='subitems'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSTrackingArea'>
    <method selector='initWithRect:options:owner:userInfo:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='I' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
    </method>
    <method selector='options'>
      <retval type='I' />
    </method>
    <method selector='owner'>
      <retval type='@' />
    </method>
    <method selector='rect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='userInfo'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSTreeController'>
    <method selector='add:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addChild:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addSelectionIndexPaths:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='alwaysUsesMultipleValuesMarker'>
      <retval type='B' />
    </method>
    <method selector='arrangedObjects'>
      <retval type='@' />
    </method>
    <method selector='avoidsEmptySelection'>
      <retval type='B' />
    </method>
    <method selector='canAddChild'>
      <retval type='B' />
    </method>
    <method selector='canInsert'>
      <retval type='B' />
    </method>
    <method selector='canInsertChild'>
      <retval type='B' />
    </method>
    <method selector='childrenKeyPath'>
      <retval type='@' />
    </method>
    <method selector='childrenKeyPathForNode:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='content'>
      <retval type='@' />
    </method>
    <method selector='countKeyPath'>
      <retval type='@' />
    </method>
    <method selector='countKeyPathForNode:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='insert:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertChild:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='insertObject:atArrangedObjectIndexPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='insertObjects:atArrangedObjectIndexPaths:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='leafKeyPath'>
      <retval type='@' />
    </method>
    <method selector='leafKeyPathForNode:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='moveNode:toIndexPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='moveNodes:toIndexPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='preservesSelection'>
      <retval type='B' />
    </method>
    <method selector='rearrangeObjects'>
      <retval type='v' />
    </method>
    <method selector='remove:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeObjectAtArrangedObjectIndexPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeObjectsAtArrangedObjectIndexPaths:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeSelectionIndexPaths:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectedNodes'>
      <retval type='@' />
    </method>
    <method selector='selectedObjects'>
      <retval type='@' />
    </method>
    <method selector='selectionIndexPath'>
      <retval type='@' />
    </method>
    <method selector='selectionIndexPaths'>
      <retval type='@' />
    </method>
    <method selector='selectsInsertedObjects'>
      <retval type='B' />
    </method>
    <method selector='setAlwaysUsesMultipleValuesMarker:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAvoidsEmptySelection:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setChildrenKeyPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setContent:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setCountKeyPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setLeafKeyPath:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPreservesSelection:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSelectionIndexPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSelectionIndexPaths:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSelectsInsertedObjects:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setSortDescriptors:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='sortDescriptors'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSTreeNode'>
    <method selector='childNodes'>
      <retval type='@' />
    </method>
    <method selector='descendantNodeAtIndexPath:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='indexPath'>
      <retval type='@' />
    </method>
    <method selector='initWithRepresentedObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isLeaf'>
      <retval type='B' />
    </method>
    <method selector='mutableChildNodes'>
      <retval type='@' />
    </method>
    <method selector='parentNode'>
      <retval type='@' />
    </method>
    <method selector='representedObject'>
      <retval type='@' />
    </method>
    <method selector='sortWithSortDescriptors:recursively:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method class_method='true' selector='treeNodeWithRepresentedObject:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSTypesetter'>
    <method selector='actionForControlCharacterAtIndex:'>
      <retval type='I' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='attributedString'>
      <retval type='@' />
    </method>
    <method selector='attributesForExtraLineFragment'>
      <retval type='@' />
    </method>
    <method selector='baselineOffsetInLayoutManager:glyphIndex:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='beginLineWithGlyphAtIndex:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='beginParagraph'>
      <retval type='v' />
    </method>
    <method selector='bidiProcessingEnabled'>
      <retval type='B' />
    </method>
    <method selector='boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='3' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='4' type='I' type64='Q' />
    </method>
    <method selector='characterRangeForGlyphRange:actualGlyphRange:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='currentParagraphStyle'>
      <retval type='@' />
    </method>
    <method selector='currentTextContainer'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='defaultTypesetterBehavior'>
      <retval type='i' />
    </method>
    <method selector='deleteGlyphsInRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='endLineWithGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='endParagraph'>
      <retval type='v' />
    </method>
    <method selector='getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:'>
      <retval type='I' type64='Q' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg c_array_length_in_arg='0' index='1' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='2' type_modifier='o' />
      <arg c_array_length_in_arg='0' index='3' type_modifier='o' />
      <arg index='4' type='^B' type_modifier='o' c_array_length_in_arg='0' />
      <arg c_array_length_in_arg='0' index='5' type='^C' type_modifier='o' />
    </method>
    <method selector='getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='3' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:'>
      <retval type='v' />
      <arg index='0' type_modifier='N' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type_modifier='N' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
      <arg index='2' type_modifier='N' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'/>
      <arg index='3' type='I' type64='Q' />
      <arg index='4' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='5' type='f' type64='d' />
      <arg index='6' type='f' type64='d' />
      <arg index='7' type='f' type64='d' />
    </method>
    <method selector='glyphRangeForCharacterRange:actualCharacterRange:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='hyphenCharacterForGlyphAtIndex:'>
      <retval type='L' type64='I' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='hyphenationFactor'>
      <retval type='f' />
    </method>
    <method selector='hyphenationFactorForGlyphAtIndex:'>
      <retval type='f' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='insertGlyph:atGlyphIndex:characterIndex:'>
      <retval type='v' />
      <arg index='0' type='I' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='@' />
      <arg index='2' type='I' type64='Q' />
    </method>
    <method selector='layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' type64='Q' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='layoutManager'>
      <retval type='@' />
    </method>
    <method selector='layoutParagraphAtPoint:'>
      <retval type='I' type64='Q' />
      <arg index='0' type_modifier='N' />
    </method>
    <method selector='lineFragmentPadding'>
      <retval type='f' type64='d' />
    </method>
    <method selector='lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
      <retval type='f' type64='d' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='paragraphCharacterRange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='paragraphGlyphRange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='paragraphSeparatorCharacterRange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='paragraphSeparatorGlyphRange'>
      <retval type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:'>
      <retval type='f' type64='d' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:'>
      <retval type='f' type64='d' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method class_method='true' selector='printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg c_array_length_in_arg='3' index='2' type='^v' type_modifier='n' />
      <arg index='3' type='I' type64='Q' />
    </method>
    <method selector='setAttachmentSize:forGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setAttributedString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBidiLevels:forGlyphRange:'>
      <retval type='v' />
      <arg c_array_length_in_arg='1' index='0' type='^z' type_modifier='n' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setBidiProcessingEnabled:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDrawsOutsideLineFragment:forGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setHardInvalidation:forGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setHyphenationFactor:'>
      <retval type='v' />
      <arg index='0' type='f' />
    </method>
    <method selector='setLineFragmentPadding:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method selector='setLocation:withAdvancements:forStartOfGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg c_array_length_in_arg='2' index='1' type_modifier='n' />
      <arg index='2' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setNotShownAttribute:forGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setParagraphGlyphRange:separatorGlyphRange:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
    </method>
    <method selector='setTypesetterBehavior:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setUsesFontLeading:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='sharedSystemTypesetter'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='sharedSystemTypesetterForBehavior:'>
      <retval type='@' />
      <arg index='0' type='i' />
    </method>
    <method selector='shouldBreakLineByHyphenatingBeforeCharacterAtIndex:'>
      <retval type='B' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='shouldBreakLineByWordBeforeCharacterAtIndex:'>
      <retval type='B' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='substituteFontForFont:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='substituteGlyphsInRange:withGlyphs:'>
      <retval type='v' />
      <arg index='0' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg c_array_length_in_arg='0' index='1' type_modifier='n' />
    </method>
    <method selector='textContainers'>
      <retval type='@' />
    </method>
    <method selector='textTabForGlyphLocation:writingDirection:maxLocation:'>
      <retval type='@' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='i' />
      <arg index='2' type='f' type64='d' />
    </method>
    <method selector='typesetterBehavior'>
      <retval type='i' />
    </method>
    <method selector='usesFontLeading'>
      <retval type='B' />
    </method>
    <method selector='willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:'>
      <retval type='v' />
      <arg index='0' type_modifier='N' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'  />
      <arg index='1' type='{_NSRange=II}' type64='{_NSRange=QQ}' />
      <arg index='2' type_modifier='N' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}'  />
      <arg index='3' type_modifier='N' type='^f' type64='^d'  />
    </method>
  </class>
  <class name='NSURL'>
    <method class_method='true' selector='URLFromPasteboard:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='writeToPasteboard:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSUserDefaultsController'>
    <method selector='appliesImmediately'>
      <retval type='B' />
    </method>
    <method selector='defaults'>
      <retval type='@' />
    </method>
    <method selector='hasUnappliedChanges'>
      <retval type='B' />
    </method>
    <method selector='initWithDefaults:initialValues:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initialValues'>
      <retval type='@' />
    </method>
    <method selector='revert:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='revertToInitialValues:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='save:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAppliesImmediately:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setInitialValues:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='sharedUserDefaultsController'>
      <retval type='@' />
    </method>
    <method selector='values'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSView'>
    <method selector='sortSubviewsUsingFunction:context:'>
	    <arg index='0' type='^?' function_pointer='true' function_pointer_retained='false'>
		    <retval type='i'/>
		    <arg type='@'/>
		    <arg type='@'/>
		    <arg type='@'/>
	    </arg>
	    <arg index='1' type='@' />
    </method>
    <method selector='acceptsFirstMouse:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='addCursorRect:cursor:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='addSubview:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addSubview:positioned:relativeTo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' />
      <arg index='2' type='@' />
    </method>
    <method selector='addToolTipRect:owner:userData:'>
      <retval type='i' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
      <arg index='2' type='^v' />
    </method>
    <method selector='addTrackingArea:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='addTrackingRect:owner:userData:assumeInside:'>
      <retval type='i' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
      <arg index='2' type='^v' />
      <arg index='3' type='B' />
    </method>
    <method selector='adjustPageHeightNew:top:bottom:limit:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='f' type64='d' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method selector='adjustPageWidthNew:left:right:limit:'>
      <retval type='v' />
      <arg index='0' type_modifier='o' />
      <arg index='1' type='f' type64='d' />
      <arg index='2' type='f' type64='d' />
      <arg index='3' type='f' type64='d' />
    </method>
    <method selector='adjustScroll:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='allocateGState'>
      <retval type='v' />
    </method>
    <method selector='alphaValue'>
      <retval type='f' type64='d' />
    </method>
    <method selector='ancestorSharedWithView:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='autoresizesSubviews'>
      <retval type='B' />
    </method>
    <method selector='autoresizingMask'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='autoscroll:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='backgroundFilters'>
      <retval type='@' />
    </method>
    <method selector='beginDocument'>
      <retval type='v' />
    </method>
    <method selector='beginPageInRect:atPlacement:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='bitmapImageRepForCachingDisplayInRect:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='bounds'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='boundsRotation'>
      <retval type='f' type64='d' />
    </method>
    <method selector='cacheDisplayInRect:toBitmapImageRep:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='canBecomeKeyView'>
      <retval type='B' />
    </method>
    <method selector='canDraw'>
      <retval type='B' />
    </method>
    <method selector='centerScanRect:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='compositingFilter'>
      <retval type='@' />
    </method>
    <method selector='contentFilters'>
      <retval type='@' />
    </method>
    <method selector='context:'>
      <retval type='v' />
      <arg index='0' type='^v' />
    </method>
    <method selector='convertPoint:fromView:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='@' />
    </method>
    <method selector='convertPoint:toView:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='@' />
    </method>
    <method selector='convertPointFromBase:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='convertPointToBase:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='convertRect:fromView:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='convertRect:toView:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='convertRectFromBase:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='convertRectToBase:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='convertSize:fromView:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='1' type='@' />
    </method>
    <method selector='convertSize:toView:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='1' type='@' />
    </method>
    <method selector='convertSizeFromBase:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='convertSizeToBase:'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='dataWithEPSInsideRect:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='dataWithPDFInsideRect:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method class_method='true' selector='defaultFocusRingType'>
      <retval type='I' />
    </method>
    <method class_method='true' selector='defaultMenu'>
      <retval type='@' />
    </method>
    <method selector='didAddSubview:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='discardCursorRects'>
      <retval type='v' />
    </method>
    <method selector='display'>
      <retval type='v' />
    </method>
    <method selector='displayIfNeeded'>
      <retval type='v' />
    </method>
    <method selector='displayIfNeededIgnoringOpacity'>
      <retval type='v' />
    </method>
    <method selector='displayIfNeededInRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='displayIfNeededInRectIgnoringOpacity:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='displayRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='displayRectIgnoringOpacity:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='displayRectIgnoringOpacity:inContext:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='dragFile:fromRect:slideBack:event:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='B' />
      <arg index='3' type='@' />
    </method>
    <method selector='dragImage:at:offset:event:pasteboard:source:slideBack:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='3' type='@' />
      <arg index='4' type='@' />
      <arg index='5' type='@' />
      <arg index='6' type='B' />
    </method>
    <method selector='dragPromisedFilesOfTypes:fromRect:source:slideBack:event:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='2' type='@' />
      <arg index='3' type='B' />
      <arg index='4' type='@' />
    </method>
    <method selector='drawPageBorderWithSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='drawRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='drawSheetBorderWithSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='enclosingMenuItem'>
      <retval type='@' />
    </method>
    <method selector='enclosingScrollView'>
      <retval type='@' />
    </method>
    <method selector='endDocument'>
      <retval type='v' />
    </method>
    <method selector='endPage'>
      <retval type='v' />
    </method>
    <method selector='enterFullScreenMode:withOptions:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='exitFullScreenModeWithOptions:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='focusRingType'>
      <retval type='I' />
    </method>
    <method class_method='true' selector='focusView'>
      <retval type='@' />
    </method>
    <method selector='frame'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='frameCenterRotation'>
      <retval type='f' type64='d' />
    </method>
    <method selector='frameRotation'>
      <retval type='f' type64='d' />
    </method>
    <method selector='gState'>
      <retval type='i' type64='q' />
    </method>
    <method selector='getRectsBeingDrawn:count:'>
      <retval type='v' />
      <arg index='0' type='^^{_NSRect}' type64='^^{CGRect}' />
      <arg index='1' type='^i' type64='^q' />
    </method>
    <method selector='getRectsExposedDuringLiveResize:count:'>
      <retval type='v' />
      <arg index='0' type='^{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='^{CGRect={CGPoint=dd}{CGSize=dd}}' type_modifier='o' c_array_of_fixed_length='4' />
      <arg index='1' type='^i' type64='^q' type_modifier='o' />
    </method>
    <method selector='heightAdjustLimit'>
      <retval type='f' type64='d' />
    </method>
    <method selector='hitTest:'>
      <retval type='@' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='inLiveResize'>
      <retval type='B' />
    </method>
    <method selector='initWithFrame:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='isDescendantOf:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='isFlipped'>
      <retval type='B' />
    </method>
    <method selector='isHidden'>
      <retval type='B' />
    </method>
    <method selector='isHiddenOrHasHiddenAncestor'>
      <retval type='B' />
    </method>
    <method selector='isInFullScreenMode'>
      <retval type='B' />
    </method>
    <method selector='isOpaque'>
      <retval type='B' />
    </method>
    <method selector='isRotatedFromBase'>
      <retval type='B' />
    </method>
    <method selector='isRotatedOrScaledFromBase'>
      <retval type='B' />
    </method>
    <method selector='knowsPageRange:'>
      <retval type='B' />
      <arg index='0' type_modifier='o' />
    </method>
    <method selector='layer'>
      <retval type='@' />
    </method>
    <method selector='locationOfPrintRect:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='lockFocus'>
      <retval type='v' />
    </method>
    <method selector='lockFocusIfCanDraw'>
      <retval type='B' />
    </method>
    <method selector='lockFocusIfCanDrawInContext:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='menuForEvent:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='mouse:inRect:'>
      <retval type='B' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='1' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='mouseDownCanMoveWindow'>
      <retval type='B' />
    </method>
    <method selector='needsDisplay'>
      <retval type='B' />
    </method>
    <method selector='needsPanelToBecomeKey'>
      <retval type='B' />
    </method>
    <method selector='needsToDrawRect:'>
      <retval type='B' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='nextKeyView'>
      <retval type='@' />
    </method>
    <method selector='nextValidKeyView'>
      <retval type='@' />
    </method>
    <method selector='opaqueAncestor'>
      <retval type='@' />
    </method>
    <method selector='pageFooter'>
      <retval type='@' />
    </method>
    <method selector='pageHeader'>
      <retval type='@' />
    </method>
    <method selector='performKeyEquivalent:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='performMnemonic:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='postsBoundsChangedNotifications'>
      <retval type='B' />
    </method>
    <method selector='postsFrameChangedNotifications'>
      <retval type='B' />
    </method>
    <method selector='preservesContentDuringLiveResize'>
      <retval type='B' />
    </method>
    <method selector='previousKeyView'>
      <retval type='@' />
    </method>
    <method selector='previousValidKeyView'>
      <retval type='@' />
    </method>
    <method selector='print:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='printJobTitle'>
      <retval type='@' />
    </method>
    <method selector='rectForPage:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='rectPreservedDuringLiveResize'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='reflectScrolledClipView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='registerForDraggedTypes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='registeredDraggedTypes'>
      <retval type='@' />
    </method>
    <method selector='releaseGState'>
      <retval type='v' />
    </method>
    <method selector='removeAllToolTips'>
      <retval type='v' />
    </method>
    <method selector='removeCursorRect:cursor:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='removeFromSuperview'>
      <retval type='v' />
    </method>
    <method selector='removeFromSuperviewWithoutNeedingDisplay'>
      <retval type='v' />
    </method>
    <method selector='removeToolTip:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='removeTrackingArea:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeTrackingRect:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='renewGState'>
      <retval type='v' />
    </method>
    <method selector='replaceSubview:with:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='resetCursorRects'>
      <retval type='v' />
    </method>
    <method selector='resizeSubviewsWithOldSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='resizeWithOldSuperviewSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='rotateByAngle:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='rulerView:didAddMarker:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='rulerView:didMoveMarker:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='rulerView:didRemoveMarker:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='rulerView:handleMouseDown:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='rulerView:shouldAddMarker:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='rulerView:shouldMoveMarker:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='rulerView:shouldRemoveMarker:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='rulerView:willAddMarker:atLocation:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='f' type64='d' />
    </method>
    <method selector='rulerView:willMoveMarker:toLocation:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='f' type64='d' />
    </method>
    <method selector='rulerView:willSetClientView:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='scaleUnitSquareToSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='scrollClipView:toPoint:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='scrollPoint:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='scrollRect:by:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='scrollRectToVisible:'>
      <retval type='B' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='setAlphaValue:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setAutoresizesSubviews:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAutoresizingMask:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='setBackgroundFilters:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBounds:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='setBoundsOrigin:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='setBoundsRotation:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setBoundsSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setCompositingFilter:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setContentFilters:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFocusRingType:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setFrame:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='setFrameCenterRotation:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setFrameOrigin:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='setFrameRotation:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setFrameSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setHidden:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setKeyboardFocusRingNeedsDisplayInRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='setLayer:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setNeedsDisplay:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setNeedsDisplayInRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='setNextKeyView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPostsBoundsChangedNotifications:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setPostsFrameChangedNotifications:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setShadow:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setSubviews:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setToolTip:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setUpGState'>
      <retval type='v' />
    </method>
    <method selector='setWantsLayer:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='shadow'>
      <retval type='@' />
    </method>
    <method selector='shouldDelayWindowOrderingForEvent:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='shouldDrawColor'>
      <retval type='B' />
    </method>
    <method selector='subviews'>
      <retval type='@' />
    </method>
    <method selector='superview'>
      <retval type='@' />
    </method>
    <method selector='tag'>
      <retval type='i' type64='q' />
    </method>
    <method selector='toolTip'>
      <retval type='@' />
    </method>
    <method selector='trackingAreas'>
      <retval type='@' />
    </method>
    <method selector='translateOriginToPoint:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='translateRectsNeedingDisplayInRect:by:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='unlockFocus'>
      <retval type='v' />
    </method>
    <method selector='unregisterDraggedTypes'>
      <retval type='v' />
    </method>
    <method selector='updateTrackingAreas'>
      <retval type='v' />
    </method>
    <method selector='viewDidEndLiveResize'>
      <retval type='v' />
    </method>
    <method selector='viewDidHide'>
      <retval type='v' />
    </method>
    <method selector='viewDidMoveToSuperview'>
      <retval type='v' />
    </method>
    <method selector='viewDidMoveToWindow'>
      <retval type='v' />
    </method>
    <method selector='viewDidUnhide'>
      <retval type='v' />
    </method>
    <method selector='viewWillDraw'>
      <retval type='v' />
    </method>
    <method selector='viewWillMoveToSuperview:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='viewWillMoveToWindow:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='viewWillStartLiveResize'>
      <retval type='v' />
    </method>
    <method selector='viewWithTag:'>
      <retval type='@' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='visibleRect'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='wantsDefaultClipping'>
      <retval type='B' />
    </method>
    <method selector='wantsLayer'>
      <retval type='B' />
    </method>
    <method selector='widthAdjustLimit'>
      <retval type='f' type64='d' />
    </method>
    <method selector='willRemoveSubview:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='window'>
      <retval type='@' />
    </method>
    <method selector='writeEPSInsideRect:toPasteboard:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='writePDFInsideRect:toPasteboard:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
  </class>
  <class name='NSViewAnimation'>
    <method selector='initWithViewAnimations:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='setViewAnimations:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='viewAnimations'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSViewController'>
    <method selector='commitEditing'>
      <retval type='B' />
    </method>
    <method selector='commitEditingWithDelegate:didCommitSelector:contextInfo:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' sel_of_type='v@:@B^v' />
      <arg index='2' type='^v' />
    </method>
    <method selector='discardEditing'>
      <retval type='v' />
    </method>
    <method selector='initWithNibName:bundle:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='loadView'>
      <retval type='v' />
    </method>
    <method selector='nibBundle'>
      <retval type='@' />
    </method>
    <method selector='nibName'>
      <retval type='@' />
    </method>
    <method selector='representedObject'>
      <retval type='@' />
    </method>
    <method selector='setRepresentedObject:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='title'>
      <retval type='@' />
    </method>
    <method selector='view'>
      <retval type='@' />
    </method>
  </class>
  <class name='NSWindow'>
    <method selector='canBeVisibleOnAllSpaces'>
      <retval type='B' />
    </method>
    <method selector='acceptsMouseMovedEvents'>
      <retval type='B' />
    </method>
    <method selector='addChildWindow:ordered:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='i' />
    </method>
    <method selector='allowsToolTipsWhenApplicationIsInactive'>
      <retval type='B' />
    </method>
    <method selector='alphaValue'>
      <retval type='f' type64='d' />
    </method>
    <method selector='animationResizeTime:'>
      <retval type='d' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='areCursorRectsEnabled'>
      <retval type='B' />
    </method>
    <method selector='aspectRatio'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='attachedSheet'>
      <retval type='@' />
    </method>
    <method selector='autorecalculatesContentBorderThicknessForEdge:'>
      <retval type='B' />
      <arg index='0' type='i' type64='Q' />
    </method>
    <method selector='autorecalculatesKeyViewLoop'>
      <retval type='B' />
    </method>
    <method selector='backgroundColor'>
      <retval type='@' />
    </method>
    <method selector='backingLocation'>
      <retval type='I' />
    </method>
    <method selector='backingType'>
      <retval type='I' />
    </method>
    <method selector='becomeKeyWindow'>
      <retval type='v' />
    </method>
    <method selector='becomeMainWindow'>
      <retval type='v' />
    </method>
    <method selector='cacheImageInRect:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='canBecomeKeyWindow'>
      <retval type='B' />
    </method>
    <method selector='canBecomeMainWindow'>
      <retval type='B' />
    </method>
    <method selector='canBecomeVisibleWithoutLogin'>
      <retval type='B' />
    </method>
    <method selector='canHide'>
      <retval type='B' />
    </method>
    <method selector='canStoreColor'>
      <retval type='B' />
    </method>
    <method selector='cascadeTopLeftFromPoint:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='center'>
      <retval type='v' />
    </method>
    <method selector='childWindows'>
      <retval type='@' />
    </method>
    <method selector='close'>
      <retval type='v' />
    </method>
    <method selector='collectionBehavior'>
      <retval type='I' />
    </method>
    <method selector='contentAspectRatio'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='contentBorderThicknessForEdge:'>
      <retval type='f' type64='d' />
      <arg index='0' type='i' type64='Q' />
    </method>
    <method selector='contentMaxSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='contentMinSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='contentRectForFrameRect:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method class_method='true' selector='contentRectForFrameRect:styleMask:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='contentResizeIncrements'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='contentView'>
      <retval type='@' />
    </method>
    <method selector='convertBaseToScreen:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='convertScreenToBase:'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='currentEvent'>
      <retval type='@' />
    </method>
    <method selector='dataWithEPSInsideRect:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='dataWithPDFInsideRect:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='deepestScreen'>
      <retval type='@' />
    </method>
    <method selector='defaultButtonCell'>
      <retval type='@' />
    </method>
    <method class_method='true' selector='defaultDepthLimit'>
      <retval type='i' />
    </method>
    <method selector='delegate'>
      <retval type='@' />
    </method>
    <method selector='deminiaturize:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='depthLimit'>
      <retval type='i' />
    </method>
    <method selector='deviceDescription'>
      <retval type='@' />
    </method>
    <method selector='disableCursorRects'>
      <retval type='v' />
    </method>
    <method selector='disableFlushWindow'>
      <retval type='v' />
    </method>
    <method selector='disableKeyEquivalentForDefaultButtonCell'>
      <retval type='v' />
    </method>
    <method selector='disableScreenUpdatesUntilFlush'>
      <retval type='v' />
    </method>
    <method selector='discardCachedImage'>
      <retval type='v' />
    </method>
    <method selector='discardCursorRects'>
      <retval type='v' />
    </method>
    <method selector='discardEventsMatchingMask:beforeEvent:'>
      <retval type='v' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
    </method>
    <method selector='display'>
      <retval type='v' />
    </method>
    <method selector='displayIfNeeded'>
      <retval type='v' />
    </method>
    <method selector='displaysWhenScreenProfileChanges'>
      <retval type='B' />
    </method>
    <method selector='dockTile'>
      <retval type='@' />
    </method>
    <method selector='dragImage:at:offset:event:pasteboard:source:slideBack:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='{_NSSize=ff}' type64='{CGSize=dd}' />
      <arg index='3' type='@' />
      <arg index='4' type='@' />
      <arg index='5' type='@' />
      <arg index='6' type='B' />
    </method>
    <method selector='drawers'>
      <retval type='@' />
    </method>
    <method selector='enableCursorRects'>
      <retval type='v' />
    </method>
    <method selector='enableFlushWindow'>
      <retval type='v' />
    </method>
    <method selector='enableKeyEquivalentForDefaultButtonCell'>
      <retval type='v' />
    </method>
    <method selector='endEditingFor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='fieldEditor:forObject:'>
      <retval type='@' />
      <arg index='0' type='B' />
      <arg index='1' type='@' />
    </method>
    <method selector='firstResponder'>
      <retval type='@' />
    </method>
    <method selector='flushWindow'>
      <retval type='v' />
    </method>
    <method selector='flushWindowIfNeeded'>
      <retval type='v' />
    </method>
    <method selector='frame'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method selector='frameAutosaveName'>
      <retval type='@' />
    </method>
    <method selector='frameRectForContentRect:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
    </method>
    <method class_method='true' selector='frameRectForContentRect:styleMask:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='gState'>
      <retval type='i' type64='q' />
    </method>
    <method selector='graphicsContext'>
      <retval type='@' />
    </method>
    <method selector='handleCloseScriptCommand:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='handlePrintScriptCommand:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='handleSaveScriptCommand:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='hasCloseBox'>
      <retval type='B' />
    </method>
    <method selector='hasDynamicDepthLimit'>
      <retval type='B' />
    </method>
    <method selector='hasShadow'>
      <retval type='B' />
    </method>
    <method selector='hasTitleBar'>
      <retval type='B' />
    </method>
    <method selector='hidesOnDeactivate'>
      <retval type='B' />
    </method>
    <method selector='ignoresMouseEvents'>
      <retval type='B' />
    </method>
    <method selector='initWithContentRect:styleMask:backing:defer:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' />
      <arg index='3' type='B' />
    </method>
    <method selector='initWithContentRect:styleMask:backing:defer:screen:'>
      <retval type='@' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='I' type64='Q' />
      <arg index='2' type='I' />
      <arg index='3' type='B' />
      <arg index='4' type='@' />
    </method>
    <method selector='initWithWindowRef:'>
      <retval type='@' />
      <arg index='0' type='^{OpaqueWindowPtr=}' />
    </method>
    <method selector='initialFirstResponder'>
      <retval type='@' />
    </method>
    <method selector='invalidateCursorRectsForView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='invalidateShadow'>
      <retval type='v' />
    </method>
    <method selector='isAutodisplay'>
      <retval type='B' />
    </method>
    <method selector='isDocumentEdited'>
      <retval type='B' />
    </method>
    <method selector='isExcludedFromWindowsMenu'>
      <retval type='B' />
    </method>
    <method selector='isFloatingPanel'>
      <retval type='B' />
    </method>
    <method selector='isFlushWindowDisabled'>
      <retval type='B' />
    </method>
    <method selector='isKeyWindow'>
      <retval type='B' />
    </method>
    <method selector='isMainWindow'>
      <retval type='B' />
    </method>
    <method selector='isMiniaturizable'>
      <retval type='B' />
    </method>
    <method selector='isMiniaturized'>
      <retval type='B' />
    </method>
    <method selector='isModalPanel'>
      <retval type='B' />
    </method>
    <method selector='isMovableByWindowBackground'>
      <retval type='B' />
    </method>
    <method selector='isOneShot'>
      <retval type='B' />
    </method>
    <method selector='isOpaque'>
      <retval type='B' />
    </method>
    <method selector='isReleasedWhenClosed'>
      <retval type='B' />
    </method>
    <method selector='isResizable'>
      <retval type='B' />
    </method>
    <method selector='isSheet'>
      <retval type='B' />
    </method>
    <method selector='isVisible'>
      <retval type='B' />
    </method>
    <method selector='isZoomable'>
      <retval type='B' />
    </method>
    <method selector='isZoomed'>
      <retval type='B' />
    </method>
    <method selector='keyDown:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='keyViewSelectionDirection'>
      <retval type='I' />
    </method>
    <method selector='level'>
      <retval type='i' type64='q' />
    </method>
    <method selector='makeFirstResponder:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='makeKeyAndOrderFront:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='makeKeyWindow'>
      <retval type='v' />
    </method>
    <method selector='makeMainWindow'>
      <retval type='v' />
    </method>
    <method selector='maxSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method class_method='true' selector='menuChanged:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='minFrameWidthWithTitle:styleMask:'>
      <retval type='f' type64='d' />
      <arg index='0' type='@' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='minSize'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='miniaturize:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='miniwindowImage'>
      <retval type='@' />
    </method>
    <method selector='miniwindowTitle'>
      <retval type='@' />
    </method>
    <method selector='mouseLocationOutsideOfEventStream'>
      <retval type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='nextEventMatchingMask:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
    </method>
    <method selector='nextEventMatchingMask:untilDate:inMode:dequeue:'>
      <retval type='@' />
      <arg index='0' type='I' type64='Q' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='B' />
    </method>
    <method selector='onstrainFrameRect:toScreen:'>
      <retval type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='@' />
    </method>
    <method selector='orderBack:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='orderFront:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='orderFrontRegardless'>
      <retval type='v' />
    </method>
    <method selector='orderOut:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='orderWindow:relativeTo:'>
      <retval type='v' />
      <arg index='0' type='i' />
      <arg index='1' type='i' type64='q' />
    </method>
    <method selector='orderedIndex'>
      <retval type='i' type64='q' />
    </method>
    <method selector='parentWindow'>
      <retval type='@' />
    </method>
    <method selector='performClose:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='performMiniaturize:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='performZoom:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='postEvent:atStart:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='preferredBackingLocation'>
      <retval type='I' />
    </method>
    <method selector='preservesContentDuringLiveResize'>
      <retval type='B' />
    </method>
    <method selector='print:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='recalculateKeyViewLoop'>
      <retval type='v' />
    </method>
    <method selector='registerForDraggedTypes:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='removeChildWindow:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method class_method='true' selector='removeFrameUsingName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='representedFilename'>
      <retval type='@' />
    </method>
    <method selector='representedURL'>
      <retval type='@' />
    </method>
    <method selector='resetCursorRects'>
      <retval type='v' />
    </method>
    <method selector='resignKeyWindow'>
      <retval type='v' />
    </method>
    <method selector='resignMainWindow'>
      <retval type='v' />
    </method>
    <method selector='resizeFlags'>
      <retval type='i' type64='q' />
    </method>
    <method selector='resizeIncrements'>
      <retval type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='restoreCachedImage'>
      <retval type='v' />
    </method>
    <method selector='runToolbarCustomizationPalette:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='saveFrameUsingName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='screen'>
      <retval type='@' />
    </method>
    <method selector='selectKeyViewFollowingView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectKeyViewPrecedingView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectNextKeyView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectPreviousKeyView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='sendEvent:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setAcceptsMouseMovedEvents:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAllowsToolTipsWhenApplicationIsInactive:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAlphaValue:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
    </method>
    <method selector='setAspectRatio:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setAutodisplay:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setAutorecalculatesContentBorderThickness:forEdge:'>
      <retval type='v' />
      <arg index='0' type='B' />
      <arg index='1' type='i' type64='Q' />
    </method>
    <method selector='setAutorecalculatesKeyViewLoop:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setBackgroundColor:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setBackingType:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setCanBeVisibleOnAllSpaces:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setCanBecomeVisibleWithoutLogin:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setCanHide:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setCollectionBehavior:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setContentAspectRatio:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setContentBorderThickness:forEdge:'>
      <retval type='v' />
      <arg index='0' type='f' type64='d' />
      <arg index='1' type='i' type64='Q' />
    </method>
    <method selector='setContentMaxSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setContentMinSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setContentResizeIncrements:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setContentSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setContentView:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDefaultButtonCell:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDelegate:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDepthLimit:'>
      <retval type='v' />
      <arg index='0' type='i' />
    </method>
    <method selector='setDisplaysWhenScreenProfileChanges:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDocumentEdited:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setDynamicDepthLimit:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setExcludedFromWindowsMenu:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setFrame:display:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='B' />
    </method>
    <method selector='setFrame:display:animate:'>
      <retval type='v' />
      <arg index='0' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' />
      <arg index='1' type='B' />
      <arg index='2' type='B' />
    </method>
    <method selector='setFrameAutosaveName:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFrameFromString:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFrameOrigin:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='setFrameTopLeftPoint:'>
      <retval type='v' />
      <arg index='0' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='setFrameUsingName:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='setFrameUsingName:force:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
    </method>
    <method selector='setHasShadow:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setHidesOnDeactivate:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setIgnoresMouseEvents:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setInitialFirstResponder:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setIsMiniaturized:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setIsVisible:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setIsZoomed:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setLevel:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setMaxSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setMinSize:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setMiniwindowImage:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMiniwindowTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setMovableByWindowBackground:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setOneShot:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setOpaque:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setOrderedIndex:'>
      <retval type='v' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='setParentWindow:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setPreferredBackingLocation:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setPreservesContentDuringLiveResize:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setReleasedWhenClosed:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setRepresentedFilename:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setRepresentedURL:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setResizeIncrements:'>
      <retval type='v' />
      <arg index='0' type='{_NSSize=ff}' type64='{CGSize=dd}' />
    </method>
    <method selector='setSharingType:'>
      <retval type='v' />
      <arg index='0' type='I' />
    </method>
    <method selector='setShowsResizeIndicator:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setShowsToolbarButton:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setTitle:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setTitleWithRepresentedFilename:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setToolbar:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setViewsNeedDisplay:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setWindowController:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='sharingType'>
      <retval type='I' />
    </method>
    <method selector='showsResizeIndicator'>
      <retval type='B' />
    </method>
    <method selector='showsToolbarButton'>
      <retval type='B' />
    </method>
    <method selector='standardWindowButton:'>
      <retval type='@' />
      <arg index='0' type='I' />
    </method>
    <method class_method='true' selector='standardWindowButton:forStyleMask:'>
      <retval type='@' />
      <arg index='0' type='I' />
      <arg index='1' type='I' type64='Q' />
    </method>
    <method selector='stringWithSavedFrame'>
      <retval type='@' />
    </method>
    <method selector='styleMask'>
      <retval type='I' type64='Q' />
    </method>
    <method selector='title'>
      <retval type='@' />
    </method>
    <method selector='toggleToolbarShown:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='toolbar'>
      <retval type='@' />
    </method>
    <method selector='tryToPerform:with:'>
      <retval type='B' />
      <arg index='0' sel_of_type='v@:@' />
      <arg index='1' type='@' />
    </method>
    <method selector='unregisterDraggedTypes'>
      <retval type='v' />
    </method>
    <method selector='update'>
      <retval type='v' />
    </method>
    <method selector='useOptimizedDrawing:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='userSpaceScaleFactor'>
      <retval type='f' type64='d' />
    </method>
    <method selector='validRequestorForSendType:returnType:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='viewsNeedDisplay'>
      <retval type='B' />
    </method>
    <method selector='windowController'>
      <retval type='@' />
    </method>
    <method selector='windowNumber'>
      <retval type='i' type64='q' />
    </method>
    <method selector='worksWhenModal'>
      <retval type='B' />
    </method>
    <method selector='zoom:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
  </class>
  <class name='NSWindowController'>
   
    <method selector='close'>
      <retval type='v' />
    </method>
    <method selector='document'>
      <retval type='@' />
    </method>
    <method selector='initWithWindow:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithWindowNibName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='initWithWindowNibName:owner:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='initWithWindowNibPath:owner:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='isWindowLoaded'>
      <retval type='B' />
    </method>
    <method selector='loadWindow'>
      <retval type='v' />
    </method>
    <method selector='owner'>
      <retval type='@' />
    </method>
    <method selector='setDocument:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setDocumentEdited:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setShouldCascadeWindows:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setShouldCloseDocument:'>
      <retval type='v' />
      <arg index='0' type='B' />
    </method>
    <method selector='setWindow:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='setWindowFrameAutosaveName:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='shouldCascadeWindows'>
      <retval type='B' />
    </method>
    <method selector='shouldCloseDocument'>
      <retval type='B' />
    </method>
    <method selector='showWindow:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='synchronizeWindowTitleWithDocumentName'>
      <retval type='v' />
    </method>
    <method selector='window'>
      <retval type='@' />
    </method>
    <method selector='windowDidLoad'>
      <retval type='v' />
    </method>
    <method selector='windowFrameAutosaveName'>
      <retval type='@' />
    </method>
    <method selector='windowNibName'>
      <retval type='@' />
    </method>
    <method selector='windowNibPath'>
      <retval type='@' />
    </method>
    <method selector='windowTitleForDocumentDisplayName:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='windowWillLoad'>
      <retval type='v' />
    </method>
  </class>
  <class name='NSWorkspace'>
    <method selector='absolutePathForAppBundleWithIdentifier:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='activeApplication'>
      <retval type='@' />
    </method>
    <method selector='checkForRemovableMedia'>
      <retval type='v' />
    </method>
    <method selector='extendPowerOffBy:'>
      <retval type='i' type64='q' />
      <arg index='0' type='i' type64='q' />
    </method>
    <method selector='fileSystemChanged'>
      <retval type='B' />
    </method>
    <method selector='filenameExtension:isValidForType:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='findApplications'>
      <retval type='v' />
    </method>
    <method selector='fullPathForApplication:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='^B' type_modifier='o' />
      <arg index='2' type='^B' type_modifier='o' />
      <arg index='3' type='^B' type_modifier='o' />
      <arg index='4' type_modifier='o' />
      <arg index='5' type_modifier='o' />
    </method>
    <method selector='getInfoForFile:application:type:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
      <arg index='2' type_modifier='o' />
    </method>
    <method selector='hideOtherApplications'>
      <retval type='v' />
    </method>
    <method selector='iconForFile:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='iconForFileType:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='iconForFiles:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='isFilePackageAtPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='I' />
      <arg index='2' type='@' />
      <arg index='3' type_modifier='o' />
    </method>
    <method selector='launchApplication:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='launchApplication:showIcon:autolaunch:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='B' />
      <arg index='2' type='B' />
    </method>
    <method selector='launchedApplications'>
      <retval type='@' />
    </method>
    <method selector='localizedDescriptionForType:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='mountNewRemovableMedia'>
      <retval type='@' />
    </method>
    <method selector='mountedLocalVolumePaths'>
      <retval type='@' />
    </method>
    <method selector='mountedRemovableMedia'>
      <retval type='@' />
    </method>
    <method selector='noteFileSystemChanged'>
      <retval type='v' />
    </method>
    <method selector='noteFileSystemChanged:'>
      <retval type='v' />
      <arg index='0' type='@' />
    </method>
    <method selector='noteUserDefaultsChanged'>
      <retval type='v' />
    </method>
    <method selector='notificationCenter'>
      <retval type='@' />
    </method>
    <method selector='openFile:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='openFile:fromImage:at:inView:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='3' type='@' />
    </method>
    <method selector='openFile:withApplication:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='openFile:withApplication:andDeactivate:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='B' />
    </method>
    <method selector='openTempFile:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='openURL:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
      <arg index='3' type='@' />
      <arg index='4' type_modifier='o' />
    </method>
    <method selector='performFileOperation:source:destination:files:tag:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='@' />
      <arg index='3' type='@' />
      <arg index='4' type_modifier='o' />
    </method>
    <method selector='preferredFilenameExtensionForType:'>
      <retval type='@' />
      <arg index='0' type='@' />
    </method>
    <method selector='selectFile:inFileViewerRootedAtPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='setIcon:forFile:options:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
      <arg index='2' type='I' />
    </method>
    <method class_method='true' selector='sharedWorkspace'>
      <retval type='@' />
    </method>
    <method selector='slideImage:from:to:'>
      <retval type='v' />
      <arg index='0' type='@' />
      <arg index='1' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
      <arg index='2' type='{_NSPoint=ff}' type64='{CGPoint=dd}' />
    </method>
    <method selector='type:conformsToType:'>
      <retval type='B' />
      <arg index='0' type='@' />
      <arg index='1' type='@' />
    </method>
    <method selector='typeOfFile:error:'>
      <retval type='@' />
      <arg index='0' type='@' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='unmountAndEjectDeviceAtPath:'>
      <retval type='B' />
      <arg index='0' type='@' />
    </method>
    <method selector='userDefaultsChanged'>
      <retval type='B' />
    </method>
  </class>
</signatures>
