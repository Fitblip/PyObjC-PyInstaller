<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
  <constant name='LKTransformIdentity' type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
  <enum name='CA_WARN_DEPRECATED' value='1' />
  <enum name='CGFLOAT_MAX' value='3.4028234663852886e+38' value64='1.7976931348623157e+308' />
  <enum name='CGFLOAT_MAX' value='3.4028234663852886e+38' value64='1.7976931348623157e+308' />
  <enum name='CGFLOAT_MIN' value='1.1754943508222875e-38' value64='2.2250738585072014e-308' />
  <enum name='CGFLOAT_MIN' value='1.1754943508222875e-38' value64='2.2250738585072014e-308' />
  <function name='CATransform3DConcat'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
  </function>
  <function name='CATransform3DEqualToTransform'>
    <retval type='B' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
  </function>
  <function name='CATransform3DGetAffineTransform'>
    <retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
  </function>
  <function name='CATransform3DInvert'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
  </function>
  <function name='CATransform3DIsAffine'>
    <retval type='B' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
  </function>
  <function name='CATransform3DIsIdentity'>
    <retval type='B' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
  </function>
  <function name='CATransform3DMakeAffineTransform'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}' />
  </function>
  <function name='CATransform3DMakeRotation'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function name='CATransform3DMakeScale'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function name='CATransform3DMakeTranslation'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function name='CATransform3DRotate'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function name='CATransform3DScale'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function name='CATransform3DTranslate'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function name='LKTransformConcat'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
  </function>
  <function name='LKTransformEqualToTransform'>
    <retval type='B' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
  </function>
  <function name='LKTransformGetAffineTransform'>
    <retval type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
  </function>
  <function name='LKTransformInvert'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
  </function>
  <function name='LKTransformIsAffine'>
    <retval type='B' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
  </function>
  <function name='LKTransformIsIdentity'>
    <retval type='B' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
  </function>
  <function name='LKTransformMakeAffineTransform'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CGAffineTransform=ffffff}' type64='{CGAffineTransform=dddddd}' />
  </function>
  <function name='LKTransformMakeRotation'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function name='LKTransformMakeScale'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function name='LKTransformMakeTranslation'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function name='LKTransformRotate'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function name='LKTransformScale'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <function name='LKTransformTranslate'>
    <retval type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='{CATransform3D=ffffffffffffffff}' type64='{CATransform3D=dddddddddddddddd}' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
    <arg type='f' type64='d' />
  </function>
  <class name='CAAnimationDelegate'>
    <method selector='animationDidStart:' type='v@:@' />
    <method selector='animationDidStop:finished:' type='v@:@B' />
  </class>
  <class name='CALayerDelegate'>
    <method selector='actionForLayer:forKey:' type='@@:@@' />
    <method selector='displayLayer:' type='v@:@' />
    <method selector='drawLayer:inContext:' type='v@:@^{CGContext=}' />
  </class>
  <class name='CALayoutManager'>
    <method selector='invalidateLayoutOfLayer:' type='v@:@' />
    <method selector='layoutSublayersOfLayer:' type='v@:@' />
    <method selector='preferredSizeOfLayer:' type='{CGSize=ff}@:@' type64='{CGSize=dd}@:@' />
  </class>
  <class name='CIImageProvider'>
    <method selector='provideImageData:bytesPerRow:origin:size:userInfo:' type='v@:^vLLL@' type64='v@:^vQQQ@' />
  </class>
  <class name='CALayer'>
    <method selector='drawInContext:'>
      <arg index='0' type='^{CGContext=}' />
    </method>
    <method selector='renderInContext:'>
      <arg index='0' type='^{CGContext=}' />
    </method>
  </class>
  <class name='CAOpenGLLayer'>
    <method selector='canDrawInCGLContext:pixelFormat:forLayerTime:displayTime:'>
      <retval type='B' />
      <arg index='0' type='^{_CGLContextObject=}' />
      <arg index='1' type='^{_CGLPixelFormatObject=}' />
      <arg index='3' type='r^{?=IiqQdq{CVSMPTETime=ssIIIssss}QQ}' />
    </method>
    <method selector='copyCGLContextForPixelFormat:'>
      <retval type='^{_CGLContextObject=}' />
      <arg index='0' type='^{_CGLPixelFormatObject=}' />
    </method>
    <method selector='copyCGLPixelFormatForDisplayMask:'>
      <retval type='^{_CGLPixelFormatObject=}' />
    </method>
    <method selector='drawInCGLContext:pixelFormat:forLayerTime:displayTime:'>
      <arg index='0' type='^{_CGLContextObject=}' />
      <arg index='1' type='^{_CGLPixelFormatObject=}' />
      <arg index='3' type='r^{?=IiqQdq{CVSMPTETime=ssIIIssss}QQ}' />
    </method>
    <method selector='releaseCGLContext:'>
      <arg index='0' type='^{_CGLContextObject=}' />
    </method>
    <method selector='releaseCGLPixelFormat:'>
      <arg index='0' type='^{_CGLPixelFormatObject=}' />
    </method>
  </class>
  <class name='CARenderer'>
    <method selector='beginFrameAtTime:timeStamp:'>
      <arg index='1' type='r^{?=IiqQdq{CVSMPTETime=ssIIIssss}QQ}' />
    </method>
    <method class_method='true' selector='rendererWithCGLContext:options:'>
      <arg index='0' type='^v' />
    </method>
  </class>
  <class name='CIColor'>
    <method selector='colorSpace'>
      <retval type='^{CGColorSpace=}' />
    </method>
    <method class_method='true' selector='colorWithCGColor:'>
      <arg index='0' type='^{CGColor=}' />
    </method>
    <method selector='components'>
      <retval c_array_of_variable_length='true' type='r^f' type64='r^d' />
    </method>
    <method selector='initWithCGColor:'>
      <arg index='0' type='^{CGColor=}' />
    </method>
  </class>
  <class name='CIContext'>
    <method class_method='true' selector='contextWithCGContext:options:'>
      <arg index='0' type='^{CGContext=}' />
    </method>
    <method class_method='true' selector='contextWithCGLContext:pixelFormat:options:'>
      <arg index='0' type='^{_CGLContextObject=}' />
      <arg index='1' type='^{_CGLPixelFormatObject=}' />
    </method>
    <method selector='createCGImage:fromRect:'>
      <retval type='^{CGImage=}' />
    </method>
    <method selector='createCGImage:fromRect:format:colorSpace:'>
      <retval type='^{CGImage=}' />
      <arg index='3' type='^{CGColorSpace=}' />
    </method>
    <method selector='createCGLayerWithSize:info:'>
      <retval type='^{CGLayer=}' />
      <arg index='1' type='^{__CFDictionary=}' />
    </method>
    <method selector='render:toBitmap:rowBytes:bounds:format:colorSpace:'>
      <arg index='1' type='^v' />
      <arg index='5' type='^{CGColorSpace=}' />
    </method>
  </class>
  <class name='CIFilter'>
    <method selector='apply:' variadic='true' />
    <method class_method='true' selector='filterWithName:keysAndValues:' variadic='true' />
  </class>
  <class name='CIImage'>
    <method class_method='true' selector='imageWithBitmapData:bytesPerRow:size:format:colorSpace:'>
      <arg index='4' type='^{CGColorSpace=}' />
    </method>
    <method class_method='true' selector='imageWithCGImage:'>
      <arg index='0' type='^{CGImage=}' />
    </method>
    <method class_method='true' selector='imageWithCGImage:options:'>
      <arg index='0' type='^{CGImage=}' />
    </method>
    <method class_method='true' selector='imageWithCGLayer:'>
      <arg index='0' type='^{CGLayer=}' />
    </method>
    <method class_method='true' selector='imageWithCGLayer:options:'>
      <arg index='0' type='^{CGLayer=}' />
    </method>
    <method class_method='true' selector='imageWithCVImageBuffer:'>
      <arg index='0' type='^{__CVBuffer=}' />
    </method>
    <method class_method='true' selector='imageWithCVImageBuffer:options:'>
      <arg index='0' type='^{__CVBuffer=}' />
    </method>
    <method class_method='true' selector='imageWithImageProvider:size:format:colorSpace:options:'>
      <arg index='3' type='^{CGColorSpace=}' />
    </method>
    <method class_method='true' selector='imageWithTexture:size:flipped:colorSpace:'>
      <arg index='2' type='B' />
      <arg index='3' type='^{CGColorSpace=}' />
    </method>
    <method selector='initWithBitmapData:bytesPerRow:size:format:colorSpace:'>
      <arg index='4' type='^{CGColorSpace=}' />
    </method>
    <method selector='initWithCGImage:'>
      <arg index='0' type='^{CGImage=}' />
    </method>
    <method selector='initWithCGImage:options:'>
      <arg index='0' type='^{CGImage=}' />
    </method>
    <method selector='initWithCGLayer:'>
      <arg index='0' type='^{CGLayer=}' />
    </method>
    <method selector='initWithCGLayer:options:'>
      <arg index='0' type='^{CGLayer=}' />
    </method>
    <method selector='initWithCVImageBuffer:'>
      <arg index='0' type='^{__CVBuffer=}' />
    </method>
    <method selector='initWithCVImageBuffer:options:'>
      <arg index='0' type='^{__CVBuffer=}' />
    </method>
    <method selector='initWithImageProvider:size:format:colorSpace:options:'>
      <arg index='3' type='^{CGColorSpace=}' />
    </method>
    <method selector='initWithTexture:size:flipped:colorSpace:'>
      <arg index='2' type='B' />
      <arg index='3' type='^{CGColorSpace=}' />
    </method>
  </class>
  <class name='CIKernel'>
    <method selector='setROISelector:'>
      <arg index='0' sel_of_type='{CGRect={CGPoint=ff}{CGSize=ff}}@:i{CGRect={CGPoint=ff}{CGSize=ff}}@' sel_of_type64='{CGRect={CGPoint=dd}{CGSize=dd}}@:i{CGRect={CGPoint=dd}{CGSize=dd}}@' />
    </method>
  </class>
  <class name='CISampler'>
    <method selector='initWithImage:keysAndValues:' variadic='true' />
    <method class_method='true' selector='samplerWithImage:keysAndValues:' variadic='true' />
  </class>
  <class name='CIVector'>
    <method selector='initWithValues:count:'>
      <arg c_array_length_in_arg='1' index='0' type='r^f' type64='r^d' type_modifier='n' />
    </method>
    <method class_method='true' selector='vectorWithValues:count:'>
      <arg c_array_length_in_arg='1' index='0' type='r^f' type64='r^d' type_modifier='n' />
    </method>
  </class>
  <class name='NSObject'>
    <method selector='drawLayer:inContext:'>
      <arg index='1' type='^{CGContext=}' />
    </method>
    <method selector='load:'>
      <retval type='B' />
      <arg index='0' type='^v' />
    </method>
    <method selector='provideImageData:bytesPerRow:origin:size:userInfo:'>
      <arg index='0' type='^v' />
    </method>
  </class>
</signatures>

