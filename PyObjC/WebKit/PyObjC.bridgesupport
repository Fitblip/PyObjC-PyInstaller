<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
  <struct name='NPAnyCallbackStruct' type='' />
  <struct name='NPByteRange' type='{_NPByteRange="offset"i"length"I"next"^{_NPByteRange}}' />
  <struct name='NPClass' type='{NPClass="structVersion"I"allocate"^?"deallocate"^?"invalidate"^?"hasMethod"^?"invoke"^?"invokeDefault"^?"hasProperty"^?"getProperty"^?"setProperty"^?"removeProperty"^?"enumerate"^?}' />
  <struct name='NPEmbedPrint' type='{_NPEmbedPrint="window"{_NPWindow="window"^v"x"i"y"i"width"I"height"I"clipRect"{_NPRect="top"S"left"S"bottom"S"right"S}"type"i}"platformPrint"^v}' />
  <struct name='NPEvent' type='{EventRecord="what"S"message"L"when"I"where"{Point="v"s"h"s}"modifiers"S}' />
  <struct name='NPFullPrint' type='{_NPFullPrint="pluginPrinted"C"printOne"C"platformPrint"^v}' />
  <struct name='NPNetscapeFuncs' type='{_NPNetscapeFuncs="size"S"version"S"geturl"^?"posturl"^?"requestread"^?"newstream"^?"write"^?"destroystream"^?"status"^?"uagent"^?"memalloc"^?"memfree"^?"memflush"^?"reloadplugins"^?"getJavaEnv"^?"getJavaPeer"^?"geturlnotify"^?"posturlnotify"^?"getvalue"^?"setvalue"^?"invalidaterect"^?"invalidateregion"^?"forceredraw"^?"getstringidentifier"^?"getstringidentifiers"^?"getintidentifier"^?"identifierisstring"^?"utf8fromidentifier"^?"intfromidentifier"^?"createobject"^?"retainobject"^?"releaseobject"^?"invoke"^?"invokeDefault"^?"evaluate"^?"getproperty"^?"setproperty"^?"removeproperty"^?"hasproperty"^?"hasmethod"^?"releasevariantvalue"^?"setexception"^?"pushpopupsenabledstate"^?"poppopupsenabledstate"^?"enumerate"^?}' />
  <struct name='NPObject' type='{NPObject="_class"^{NPClass}"referenceCount"I}' />
  <struct name='NPP_t' type='{_NPP="pdata"^v"ndata"^v}' />
  <struct name='NPPluginFuncs' type='{_NPPluginFuncs="size"S"version"S"newp"^?"destroy"^?"setwindow"^?"newstream"^?"destroystream"^?"asfile"^?"writeready"^?"write"^?"print"^?"event"^?"urlnotify"^?"javaClass"^v"getvalue"^?"setvalue"^?}' />
  <struct name='NPPrint' type='{_NPPrint="mode"S"print"(?="fullPrint"{_NPFullPrint="pluginPrinted"C"printOne"C"platformPrint"^v}"embedPrint"{_NPEmbedPrint="window"{_NPWindow="window"^v"x"i"y"i"width"I"height"I"clipRect"{_NPRect="top"S"left"S"bottom"S"right"S}"type"i}"platformPrint"^v})}' />
  <struct name='NPPrintCallbackStruct' type='' />
  <struct name='NPRect' type='{_NPRect="top"S"left"S"bottom"S"right"S}' />
  <struct name='NPSavedData' type='{_NPSavedData="len"i"buf"^v}' />
  <struct name='NPSetWindowCallbackStruct' type='' />
  <struct name='NPStream' type='{_NPStream="pdata"^v"ndata"^v"url"*"end"I"lastmodified"I"notifyData"^v"headers"*}' />
  <struct name='NPString' type='{_NPString="UTF8Characters"*"UTF8Length"I}' />
  <struct name='NPVariant' type='{_NPVariant="type"i"value"(?="boolValue"B"intValue"i"doubleValue"d"stringValue"{_NPString="UTF8Characters"*"UTF8Length"I}"objectValue"^{NPObject})}' />
  <struct name='NPWindow' type='{_NPWindow="window"^v"x"i"y"i"width"I"height"I"clipRect"{_NPRect="top"S"left"S"bottom"S"right"S}"type"i}' />
  <struct name='NP_CGContext' type='{NP_CGContext="context"^{CGContext}"window"^{OpaqueWindowPtr}}' />
  <struct name='NP_GLContext' type='{NP_GLContext="context"^{_CGLContextObject}"window"^{OpaqueWindowPtr}}' />
  <struct name='NP_Port' type='{NP_Port="port"^{OpaqueGrafPtr}"portx"i"porty"i}' />
  <opaque name='DOMObjectInternal*' type='^{DOMObjectInternal=}' type64='^{DOMObjectInternal=}' />
  <constant name='DOMEventException' type='@' />
  <constant name='DOMException' type='@' />
  <constant name='DOMRangeException' type='@' />
  <constant name='DOMXPathException' type='@' />
  <constant name='WebActionButtonKey' type='@' />
  <constant name='WebActionElementKey' type='@' />
  <constant name='WebActionModifierFlagsKey' type='@' />
  <constant name='WebActionNavigationTypeKey' type='@' />
  <constant name='WebActionOriginalURLKey' type='@' />
  <constant name='WebArchivePboardType' type='@' />
  <constant name='WebElementDOMNodeKey' type='@' />
  <constant name='WebElementFrameKey' type='@' />
  <constant name='WebElementImageAltStringKey' type='@' />
  <constant name='WebElementImageKey' type='@' />
  <constant name='WebElementImageRectKey' type='@' />
  <constant name='WebElementImageURLKey' type='@' />
  <constant name='WebElementIsSelectedKey' type='@' />
  <constant name='WebElementLinkLabelKey' type='@' />
  <constant name='WebElementLinkTargetFrameKey' type='@' />
  <constant name='WebElementLinkTitleKey' type='@' />
  <constant name='WebElementLinkURLKey' type='@' />
  <constant name='WebHistoryAllItemsRemovedNotification' type='@' />
  <constant name='WebHistoryItemChangedNotification' type='@' />
  <constant name='WebHistoryItemsAddedNotification' type='@' />
  <constant name='WebHistoryItemsKey' type='@' />
  <constant name='WebHistoryItemsRemovedNotification' type='@' />
  <constant name='WebHistoryLoadedNotification' type='@' />
  <constant name='WebHistorySavedNotification' type='@' />
  <constant name='WebKitErrorDomain' type='@' />
  <constant name='WebKitErrorMIMETypeKey' type='@' />
  <constant name='WebKitErrorPlugInNameKey' type='@' />
  <constant name='WebKitErrorPlugInPageURLStringKey' type='@' />
  <constant name='WebPlugInAttributesKey' type='@' />
  <constant name='WebPlugInBaseURLKey' type='@' />
  <constant name='WebPlugInContainerKey' type='@' />
  <constant name='WebPlugInContainingElementKey' type='@' />
  <constant name='WebPreferencesChangedNotification' type='@' />
  <constant name='WebViewDidBeginEditingNotification' type='@' />
  <constant name='WebViewDidChangeNotification' type='@' />
  <constant name='WebViewDidChangeSelectionNotification' type='@' />
  <constant name='WebViewDidChangeTypingStyleNotification' type='@' />
  <constant name='WebViewDidEndEditingNotification' type='@' />
  <constant name='WebViewProgressEstimateChangedNotification' type='@' />
  <constant name='WebViewProgressFinishedNotification' type='@' />
  <constant name='WebViewProgressStartedNotification' type='@' />
  <enum name='DOM_ADDITION' value='2' />
  <enum name='DOM_ANY_TYPE' value='0' />
  <enum name='DOM_ANY_UNORDERED_NODE_TYPE' value='8' />
  <enum name='DOM_ATTRIBUTE_NODE' value='2' />
  <enum name='DOM_AT_TARGET' value='2' />
  <enum name='DOM_BAD_BOUNDARYPOINTS_ERR' value='1' />
  <enum name='DOM_BOOLEAN_TYPE' value='3' />
  <enum name='DOM_BOTH' value='2' />
  <enum name='DOM_BUBBLING_PHASE' value='3' />
  <enum name='DOM_CAPTURING_PHASE' value='1' />
  <enum name='DOM_CDATA_SECTION_NODE' value='4' />
  <enum name='DOM_CHARSET_RULE' value='2' />
  <enum name='DOM_COMMENT_NODE' value='8' />
  <enum name='DOM_CSS_ATTR' value='22' />
  <enum name='DOM_CSS_CM' value='6' />
  <enum name='DOM_CSS_COUNTER' value='23' />
  <enum name='DOM_CSS_CUSTOM' value='3' />
  <enum name='DOM_CSS_DEG' value='11' />
  <enum name='DOM_CSS_DIMENSION' value='18' />
  <enum name='DOM_CSS_EMS' value='3' />
  <enum name='DOM_CSS_EXS' value='4' />
  <enum name='DOM_CSS_GRAD' value='13' />
  <enum name='DOM_CSS_HZ' value='16' />
  <enum name='DOM_CSS_IDENT' value='21' />
  <enum name='DOM_CSS_IN' value='8' />
  <enum name='DOM_CSS_INHERIT' value='0' />
  <enum name='DOM_CSS_KHZ' value='17' />
  <enum name='DOM_CSS_MM' value='7' />
  <enum name='DOM_CSS_MS' value='14' />
  <enum name='DOM_CSS_NUMBER' value='1' />
  <enum name='DOM_CSS_PC' value='10' />
  <enum name='DOM_CSS_PERCENTAGE' value='2' />
  <enum name='DOM_CSS_PRIMITIVE_VALUE' value='1' />
  <enum name='DOM_CSS_PT' value='9' />
  <enum name='DOM_CSS_PX' value='5' />
  <enum name='DOM_CSS_RAD' value='12' />
  <enum name='DOM_CSS_RECT' value='24' />
  <enum name='DOM_CSS_RGBCOLOR' value='25' />
  <enum name='DOM_CSS_S' value='15' />
  <enum name='DOM_CSS_STRING' value='19' />
  <enum name='DOM_CSS_UNKNOWN' value='0' />
  <enum name='DOM_CSS_URI' value='20' />
  <enum name='DOM_CSS_VALUE_LIST' value='2' />
  <enum name='DOM_DOCUMENT_FRAGMENT_NODE' value='11' />
  <enum name='DOM_DOCUMENT_NODE' value='9' />
  <enum name='DOM_DOCUMENT_TYPE_NODE' value='10' />
  <enum name='DOM_DOMSTRING_SIZE_ERR' value='2' />
  <enum name='DOM_ELEMENT_NODE' value='1' />
  <enum name='DOM_END_TO_END' value='2' />
  <enum name='DOM_END_TO_START' value='3' />
  <enum name='DOM_ENTITY_NODE' value='6' />
  <enum name='DOM_ENTITY_REFERENCE_NODE' value='5' />
  <enum name='DOM_FILTER_ACCEPT' value='1' />
  <enum name='DOM_FILTER_REJECT' value='2' />
  <enum name='DOM_FILTER_SKIP' value='3' />
  <enum name='DOM_FIRST_ORDERED_NODE_TYPE' value='9' />
  <enum name='DOM_FONT_FACE_RULE' value='5' />
  <enum name='DOM_HIERARCHY_REQUEST_ERR' value='3' />
  <enum name='DOM_HORIZONTAL' value='0' />
  <enum name='DOM_IMPORT_RULE' value='3' />
  <enum name='DOM_INDEX_SIZE_ERR' value='1' />
  <enum name='DOM_INUSE_ATTRIBUTE_ERR' value='10' />
  <enum name='DOM_INVALID_ACCESS_ERR' value='15' />
  <enum name='DOM_INVALID_CHARACTER_ERR' value='5' />
  <enum name='DOM_INVALID_EXPRESSION_ERR' value='51' />
  <enum name='DOM_INVALID_MODIFICATION_ERR' value='13' />
  <enum name='DOM_INVALID_NODE_TYPE_ERR' value='2' />
  <enum name='DOM_INVALID_STATE_ERR' value='11' />
  <enum name='DOM_KEY_LOCATION_LEFT' value='1' />
  <enum name='DOM_KEY_LOCATION_NUMPAD' value='3' />
  <enum name='DOM_KEY_LOCATION_RIGHT' value='2' />
  <enum name='DOM_KEY_LOCATION_STANDARD' value='0' />
  <enum name='DOM_MEDIA_RULE' value='4' />
  <enum name='DOM_MODIFICATION' value='1' />
  <enum name='DOM_NAMESPACE_ERR' value='14' />
  <enum name='DOM_NODE_AFTER' value='1' />
  <enum name='DOM_NODE_BEFORE' value='0' />
  <enum name='DOM_NODE_BEFORE_AND_AFTER' value='2' />
  <enum name='DOM_NODE_INSIDE' value='3' />
  <enum name='DOM_NOTATION_NODE' value='12' />
  <enum name='DOM_NOT_FOUND_ERR' value='8' />
  <enum name='DOM_NOT_SUPPORTED_ERR' value='9' />
  <enum name='DOM_NO_DATA_ALLOWED_ERR' value='6' />
  <enum name='DOM_NO_MODIFICATION_ALLOWED_ERR' value='7' />
  <enum name='DOM_NUMBER_TYPE' value='1' />
  <enum name='DOM_ORDERED_NODE_ITERATOR_TYPE' value='5' />
  <enum name='DOM_ORDERED_NODE_SNAPSHOT_TYPE' value='7' />
  <enum name='DOM_PAGE_RULE' value='6' />
  <enum name='DOM_PROCESSING_INSTRUCTION_NODE' value='7' />
  <enum name='DOM_REMOVAL' value='3' />
  <enum name='DOM_SHOW_ALL' value='-1' />
  <enum name='DOM_SHOW_ATTRIBUTE' value='2' />
  <enum name='DOM_SHOW_CDATA_SECTION' value='8' />
  <enum name='DOM_SHOW_COMMENT' value='128' />
  <enum name='DOM_SHOW_DOCUMENT' value='256' />
  <enum name='DOM_SHOW_DOCUMENT_FRAGMENT' value='1024' />
  <enum name='DOM_SHOW_DOCUMENT_TYPE' value='512' />
  <enum name='DOM_SHOW_ELEMENT' value='1' />
  <enum name='DOM_SHOW_ENTITY' value='32' />
  <enum name='DOM_SHOW_ENTITY_REFERENCE' value='16' />
  <enum name='DOM_SHOW_NOTATION' value='2048' />
  <enum name='DOM_SHOW_PROCESSING_INSTRUCTION' value='64' />
  <enum name='DOM_SHOW_TEXT' value='4' />
  <enum name='DOM_START_TO_END' value='1' />
  <enum name='DOM_START_TO_START' value='0' />
  <enum name='DOM_STRING_TYPE' value='2' />
  <enum name='DOM_STYLE_RULE' value='1' />
  <enum name='DOM_SYNTAX_ERR' value='12' />
  <enum name='DOM_TEXT_NODE' value='3' />
  <enum name='DOM_TYPE_ERR' value='52' />
  <enum name='DOM_UNKNOWN_RULE' value='0' />
  <enum name='DOM_UNORDERED_NODE_ITERATOR_TYPE' value='4' />
  <enum name='DOM_UNORDERED_NODE_SNAPSHOT_TYPE' value='6' />
  <enum name='DOM_UNSPECIFIED_EVENT_TYPE_ERR' value='0' />
  <enum name='DOM_VERTICAL' value='1' />
  <enum name='DOM_WRONG_DOCUMENT_ERR' value='4' />
  <enum name='FALSE' value='0' />
  <enum name='NPDrawingModelCoreGraphics' value='1' />
  <enum name='NPDrawingModelOpenGL' value='2' />
  <enum name='NPDrawingModelQuickDraw' value='0' />
  <enum name='NPERR_BASE' value='0' />
  <enum name='NPERR_FILE_NOT_FOUND' value='11' />
  <enum name='NPERR_GENERIC_ERROR' value='1' />
  <enum name='NPERR_INCOMPATIBLE_VERSION_ERROR' value='8' />
  <enum name='NPERR_INVALID_FUNCTABLE_ERROR' value='3' />
  <enum name='NPERR_INVALID_INSTANCE_ERROR' value='2' />
  <enum name='NPERR_INVALID_PARAM' value='9' />
  <enum name='NPERR_INVALID_PLUGIN_DIR_ERROR' value='7' />
  <enum name='NPERR_INVALID_PLUGIN_ERROR' value='6' />
  <enum name='NPERR_INVALID_URL' value='10' />
  <enum name='NPERR_MODULE_LOAD_FAILED_ERROR' value='4' />
  <enum name='NPERR_NO_DATA' value='12' />
  <enum name='NPERR_NO_ERROR' value='0' />
  <enum name='NPERR_OUT_OF_MEMORY_ERROR' value='5' />
  <enum name='NPERR_STREAM_NOT_SEEKABLE' value='13' />
  <enum name='NPNVDOMElement' value='16777227' />
  <enum name='NPNVDOMWindow' value='16777228' />
  <enum name='NPNVPluginElementNPObject' value='16' />
  <enum name='NPNVSupportsXEmbedBool' value='14' />
  <enum name='NPNVToolkit' value='16777229' />
  <enum name='NPNVWindowNPObject' value='15' />
  <enum name='NPNVasdEnabledBool' value='5' />
  <enum name='NPNVisOfflineBool' value='6' />
  <enum name='NPNVjavascriptEnabledBool' value='4' />
  <enum name='NPNVnetscapeWindow' value='3' />
  <enum name='NPNVpluginDrawingModel' value='1000' />
  <enum name='NPNVserviceManager' value='16777226' />
  <enum name='NPNVsupportsCoreGraphicsBool' value='2001' />
  <enum name='NPNVsupportsOpenGLBool' value='2002' />
  <enum name='NPNVsupportsQuickDrawBool' value='2000' />
  <enum name='NPNVxDisplay' value='1' />
  <enum name='NPNVxtAppContext' value='2' />
  <enum name='NPPVformValue' value='16' />
  <enum name='NPPVjavaClass' value='5' />
  <enum name='NPPVjavascriptPushCallerBool' value='12' />
  <enum name='NPPVpluginDescriptionString' value='2' />
  <enum name='NPPVpluginKeepLibraryInMemory' value='13' />
  <enum name='NPPVpluginNameString' value='1' />
  <enum name='NPPVpluginNeedsXEmbed' value='14' />
  <enum name='NPPVpluginScriptableIID' value='11' />
  <enum name='NPPVpluginScriptableInstance' value='16777226' />
  <enum name='NPPVpluginScriptableNPObject' value='15' />
  <enum name='NPPVpluginTimerInterval' value='7' />
  <enum name='NPPVpluginTransparentBool' value='4' />
  <enum name='NPPVpluginWindowBool' value='3' />
  <enum name='NPPVpluginWindowSize' value='6' />
  <enum name='NPRES_BASE' value='0' />
  <enum name='NPRES_DONE' value='0' />
  <enum name='NPRES_NETWORK_ERR' value='1' />
  <enum name='NPRES_USER_BREAK' value='2' />
  <enum name='NPVERS_68K_HAS_LIVECONNECT' value='11' />
  <enum name='NPVERS_HAS_FORM_VALUES' value='15' />
  <enum name='NPVERS_HAS_LIVECONNECT' value='9' />
  <enum name='NPVERS_HAS_NOTIFICATION' value='9' />
  <enum name='NPVERS_HAS_NPOBJECT_ENUM' value='18' />
  <enum name='NPVERS_HAS_NPRUNTIME_SCRIPTING' value='14' />
  <enum name='NPVERS_HAS_POPUPS_ENABLED_STATE' value='16' />
  <enum name='NPVERS_HAS_RESPONSE_HEADERS' value='17' />
  <enum name='NPVERS_HAS_STREAMOUTPUT' value='8' />
  <enum name='NPVERS_HAS_WINDOWLESS' value='11' />
  <enum name='NPVERS_HAS_XPCONNECT_SCRIPTING' value='13' />
  <enum name='NPVERS_WIN16_HAS_LIVECONNECT' value='9' />
  <enum name='NPVariantType_Bool' value='2' />
  <enum name='NPVariantType_Double' value='4' />
  <enum name='NPVariantType_Int32' value='3' />
  <enum name='NPVariantType_Null' value='1' />
  <enum name='NPVariantType_Object' value='6' />
  <enum name='NPVariantType_String' value='5' />
  <enum name='NPVariantType_Void' value='0' />
  <enum name='NPWindowTypeDrawable' value='2' />
  <enum name='NPWindowTypeWindow' value='1' />
  <enum name='NP_ABI_GCC3_MASK' value='268435456' />
  <enum name='NP_ABI_MACHO_MASK' value='16777216' />
  <enum name='NP_ABI_MASK' value='16777216' />
  <enum name='NP_ASFILE' value='3' />
  <enum name='NP_ASFILEONLY' value='4' />
  <enum name='NP_CLASS_STRUCT_VERSION' value='2' />
  <enum name='NP_CLASS_STRUCT_VERSION_ENUM' value='2' />
  <enum name='NP_EMBED' value='1' />
  <enum name='NP_FULL' value='2' />
  <enum name='NP_NORMAL' value='1' />
  <enum name='NP_SEEK' value='2' />
  <enum name='NP_VERSION_MAJOR' value='0' />
  <enum name='NP_VERSION_MINOR' value='18' />
  <enum name='TRUE' value='1' />
  <enum name='WebCacheModelDocumentBrowser' value='1' />
  <enum name='WebCacheModelDocumentViewer' value='0' />
  <enum name='WebCacheModelPrimaryWebBrowser' value='2' />
  <enum name='WebDragDestinationActionAny' value='-1' />
  <enum name='WebDragDestinationActionDHTML' value='1' />
  <enum name='WebDragDestinationActionEdit' value='2' />
  <enum name='WebDragDestinationActionLoad' value='4' />
  <enum name='WebDragDestinationActionNone' value='0' />
  <enum name='WebDragSourceActionAny' value='-1' />
  <enum name='WebDragSourceActionDHTML' value='1' />
  <enum name='WebDragSourceActionImage' value='2' />
  <enum name='WebDragSourceActionLink' value='4' />
  <enum name='WebDragSourceActionNone' value='0' />
  <enum name='WebDragSourceActionSelection' value='8' />
  <enum name='WebJNIReturnTypeBoolean' value='3' />
  <enum name='WebJNIReturnTypeByte' value='4' />
  <enum name='WebJNIReturnTypeChar' value='5' />
  <enum name='WebJNIReturnTypeDouble' value='10' />
  <enum name='WebJNIReturnTypeFloat' value='9' />
  <enum name='WebJNIReturnTypeInt' value='7' />
  <enum name='WebJNIReturnTypeInvalid' value='0' />
  <enum name='WebJNIReturnTypeLong' value='8' />
  <enum name='WebJNIReturnTypeObject' value='2' />
  <enum name='WebJNIReturnTypeShort' value='6' />
  <enum name='WebJNIReturnTypeVoid' value='1' />
  <enum name='WebKitErrorCannotFindPlugIn' value='200' />
  <enum name='WebKitErrorCannotLoadPlugIn' value='201' />
  <enum name='WebKitErrorCannotShowMIMEType' value='100' />
  <enum name='WebKitErrorCannotShowURL' value='101' />
  <enum name='WebKitErrorFrameLoadInterruptedByPolicyChange' value='102' />
  <enum name='WebKitErrorJavaUnavailable' value='202' />
  <enum name='WebMenuItemPDFActualSize' value='24' />
  <enum name='WebMenuItemPDFAutoSize' value='27' />
  <enum name='WebMenuItemPDFContinuous' value='30' />
  <enum name='WebMenuItemPDFFacingPages' value='29' />
  <enum name='WebMenuItemPDFNextPage' value='31' />
  <enum name='WebMenuItemPDFPreviousPage' value='32' />
  <enum name='WebMenuItemPDFSinglePage' value='28' />
  <enum name='WebMenuItemPDFZoomIn' value='25' />
  <enum name='WebMenuItemPDFZoomOut' value='26' />
  <enum name='WebMenuItemTagCopy' value='8' />
  <enum name='WebMenuItemTagCopyImageToClipboard' value='6' />
  <enum name='WebMenuItemTagCopyLinkToClipboard' value='3' />
  <enum name='WebMenuItemTagCut' value='13' />
  <enum name='WebMenuItemTagDownloadImageToDisk' value='5' />
  <enum name='WebMenuItemTagDownloadLinkToDisk' value='2' />
  <enum name='WebMenuItemTagGoBack' value='9' />
  <enum name='WebMenuItemTagGoForward' value='10' />
  <enum name='WebMenuItemTagIgnoreSpelling' value='17' />
  <enum name='WebMenuItemTagLearnSpelling' value='18' />
  <enum name='WebMenuItemTagLookUpInDictionary' value='22' />
  <enum name='WebMenuItemTagNoGuessesFound' value='16' />
  <enum name='WebMenuItemTagOpenFrameInNewWindow' value='7' />
  <enum name='WebMenuItemTagOpenImageInNewWindow' value='4' />
  <enum name='WebMenuItemTagOpenLinkInNewWindow' value='1' />
  <enum name='WebMenuItemTagOpenWithDefaultApplication' value='23' />
  <enum name='WebMenuItemTagOther' value='19' />
  <enum name='WebMenuItemTagPaste' value='14' />
  <enum name='WebMenuItemTagReload' value='12' />
  <enum name='WebMenuItemTagSearchInSpotlight' value='20' />
  <enum name='WebMenuItemTagSearchWeb' value='21' />
  <enum name='WebMenuItemTagSpellingGuess' value='15' />
  <enum name='WebMenuItemTagStop' value='11' />
  <enum name='WebNavigationTypeBackForward' value='2' />
  <enum name='WebNavigationTypeFormResubmitted' value='4' />
  <enum name='WebNavigationTypeFormSubmitted' value='1' />
  <enum name='WebNavigationTypeLinkClicked' value='0' />
  <enum name='WebNavigationTypeOther' value='5' />
  <enum name='WebNavigationTypeReload' value='3' />
  <enum name='WebViewInsertActionDropped' value='2' />
  <enum name='WebViewInsertActionPasted' value='1' />
  <enum name='WebViewInsertActionTyped' value='0' />
  <enum name='adjustCursorEvent' value='33' />
  <enum name='getFocusEvent' value='31' />
  <enum name='loseFocusEvent' value='32' />
  <function name='HIWebViewCreate'>
    <retval type='l' />
    <arg already_retained='true' type='^^{OpaqueControlRef}' type_modifier='o' />
  </function>
  <function name='HIWebViewCreateWithClass'>
    <retval type='l' />
    <arg type='#' />
    <arg already_retained='true' type='^^{OpaqueControlRef}' type_modifier='o' />
  </function>
  <function name='HIWebViewGetWebView'>
    <retval type='@' />
    <arg already_retained='true' type='^{OpaqueControlRef=}' type_modifier='o' />
  </function>
  <function name='NPN_CreateObject'>
    <retval type='^{NPObject=^{NPClass}I}' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPClass=I^?^?^?^?^?^?^?^?^?^?}' />
  </function>
  <function name='NPN_DestroyStream'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
    <arg type='s' />
  </function>
  <function name='NPN_Enumerate'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^^^v' type64='^^^v' />
    <arg type='^I' type64='^I' />
  </function>
  <function name='NPN_Evaluate'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^{_NPString=*I}' type64='^{_NPString=*I}' />
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
  </function>
  <function name='NPN_ForceRedraw'>
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
  </function>
  <function name='NPN_GetIntIdentifier'>
    <retval type='^v' />
    <arg type='i' />
  </function>
  <function name='NPN_GetJavaEnv'>
    <retval type='^v' type64='^v' />
  </function>
  <function name='NPN_GetJavaPeer'>
    <retval type='^v' type64='^v' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
  </function>
  <function name='NPN_GetProperty'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^v' />
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
  </function>
  <function name='NPN_GetStringIdentifier'>
    <retval type='^v' />
    <arg type='r*' type64='r*' />
  </function>
  <function name='NPN_GetStringIdentifiers'>
    <arg type='r^*' type64='r^*' />
    <arg type='i' />
    <arg type='^^v' type64='^^v' />
  </function>
  <function name='NPN_GetURL'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg numeric='false' type='r*' type64='r*' />
    <arg numeric='false' type='r*' type64='r*' />
  </function>
  <function name='NPN_GetURLNotify'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg numeric='false' type='r*' type64='r*' />
    <arg numeric='false' type='r*' type64='r*' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPN_GetValue'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='i' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPN_HasMethod'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^v' />
  </function>
  <function name='NPN_HasProperty'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^v' />
  </function>
  <function name='NPN_IdentifierIsString'>
    <retval type='B' />
    <arg type='^v' />
  </function>
  <function name='NPN_IntFromIdentifier'>
    <retval type='i' />
    <arg type='^v' />
  </function>
  <function name='NPN_InvalidateRect'>
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPRect=SSSS}' type64='^{_NPRect=SSSS}' />
  </function>
  <function name='NPN_InvalidateRegion'>
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^v' />
  </function>
  <function name='NPN_Invoke'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^v' />
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
    <arg type='I' />
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
  </function>
  <function name='NPN_InvokeDefault'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
    <arg type='I' />
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
  </function>
  <function name='NPN_MemAlloc'>
    <retval type='^v' type64='^v' />
    <arg type='I' />
  </function>
  <function name='NPN_MemFlush'>
    <retval type='I' />
    <arg type='I' />
  </function>
  <function name='NPN_MemFree'>
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPN_NewStream'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='*' type64='*' />
    <arg numeric='false' type='r*' type64='r*' />
    <arg type='^^{_NPStream}' type64='^^{_NPStream}' />
  </function>
  <function name='NPN_PopPopupsEnabledState'>
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
  </function>
  <function name='NPN_PostURL'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg numeric='false' type='r*' type64='r*' />
    <arg numeric='false' type='r*' type64='r*' />
    <arg type='I' />
    <arg numeric='false' type='r*' type64='r*' />
    <arg type='C' />
  </function>
  <function name='NPN_PostURLNotify'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg numeric='false' type='r*' type64='r*' />
    <arg numeric='false' type='r*' type64='r*' />
    <arg type='I' />
    <arg numeric='false' type='r*' type64='r*' />
    <arg type='C' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPN_PushPopupsEnabledState'>
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='C' />
  </function>
  <function name='NPN_ReleaseObject'>
    <arg type='^{NPObject=^{NPClass}I}' />
  </function>
  <function name='NPN_ReleaseVariantValue'>
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
  </function>
  <function name='NPN_ReloadPlugins'>
    <arg type='C' />
  </function>
  <function name='NPN_RemoveProperty'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^v' />
  </function>
  <function name='NPN_RequestRead'>
    <retval type='s' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
    <arg type='^{_NPByteRange=iI^{_NPByteRange}}' type64='^{_NPByteRange=iI^{_NPByteRange}}' />
  </function>
  <function name='NPN_RetainObject'>
    <retval type='^{NPObject=^{NPClass}I}' />
    <arg type='^{NPObject=^{NPClass}I}' />
  </function>
  <function name='NPN_SetException'>
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='r*' type64='r*' />
  </function>
  <function name='NPN_SetProperty'>
    <retval type='B' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{NPObject=^{NPClass}I}' />
    <arg type='^v' />
    <arg type='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' type64='^{_NPVariant=i(?=Bid{_NPString=*I}^{NPObject})}' />
  </function>
  <function name='NPN_SetValue'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='i' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPN_Status'>
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg numeric='false' type='r*' type64='r*' />
  </function>
  <function name='NPN_UTF8FromIdentifier'>
    <retval type='r*' type64='r*' />
    <arg type='^v' />
  </function>
  <function name='NPN_UserAgent'>
    <retval numeric='false' type='r*' type64='r*' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
  </function>
  <function name='NPN_Version'>
    <arg type='^i' type64='^i' />
    <arg type='^i' type64='^i' />
    <arg type='^i' type64='^i' />
    <arg type='^i' type64='^i' />
  </function>
  <function name='NPN_Write'>
    <retval type='i' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
    <arg type='i' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPP_Destroy'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^^{_NPSavedData}' type64='^^{_NPSavedData}' />
  </function>
  <function name='NPP_DestroyStream'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
    <arg type='s' />
  </function>
  <function name='NPP_GetJavaClass'>
    <retval type='^v' type64='^v' />
  </function>
  <function name='NPP_GetMIMEDescription'>
    <retval numeric='false' type='r*' type64='r*' />
  </function>
  <function name='NPP_GetValue'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='i' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPP_HandleEvent'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPP_Initialize'>
    <retval type='s' />
  </function>
  <function name='NPP_New'>
    <retval type='s' />
    <arg type='*' type64='*' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='S' />
    <arg type='s' />
    <arg type='^*' type64='^*' />
    <arg type='^*' type64='^*' />
    <arg type='^{_NPSavedData=i^v}' type64='^{_NPSavedData=i^v}' />
  </function>
  <function name='NPP_NewStream'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='*' type64='*' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
    <arg type='C' />
    <arg type='^S' type64='^S' />
  </function>
  <function name='NPP_Print'>
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPPrint=S(?={_NPFullPrint=CC^v}{_NPEmbedPrint={_NPWindow=^viiII{_NPRect=SSSS}i}^v})}' type64='^{_NPPrint=S(?={_NPFullPrint=CC^v}{_NPEmbedPrint={_NPWindow=^viiII{_NPRect=SSSS}i}^v})}' />
  </function>
  <function name='NPP_SetValue'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='i' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPP_SetWindow'>
    <retval type='s' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPWindow=^viiII{_NPRect=SSSS}i}' type64='^{_NPWindow=^viiII{_NPRect=SSSS}i}' />
  </function>
  <function name='NPP_Shutdown' />
  <function name='NPP_StreamAsFile'>
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
    <arg numeric='false' type='r*' type64='r*' />
  </function>
  <function name='NPP_URLNotify'>
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg numeric='false' type='r*' type64='r*' />
    <arg type='s' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPP_Write'>
    <retval type='i' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
    <arg type='i' />
    <arg type='i' />
    <arg type='^v' type64='^v' />
  </function>
  <function name='NPP_WriteReady'>
    <retval type='i' />
    <arg type='^{_NPP=^v^v}' type64='^{_NPP=^v^v}' />
    <arg type='^{_NPStream=^v^v*II^v}' type64='^{_NPStream=^v^v*II^v}' />
  </function>
  <function name='WebConvertNSImageToCGImageRef'>
    <retval type='^{CGImage=}' type64='^{CGImage=}' />
    <arg type='@' />
  </function>
  <function name='WebInitForCarbon' />
  <informal_protocol name='WebDownloadDelegate'>
    <method selector='downloadWindowForAuthenticationSheet:' type='@@:@' />
  </informal_protocol>
  <informal_protocol name='WebFrameLoadDelegate'>
    <method selector='webView:didCancelClientRedirectForFrame:' type='v@:@@' />
    <method selector='webView:didChangeLocationWithinPageForFrame:' type='v@:@@' />
    <method selector='webView:didClearWindowObject:forFrame:' type='v@:@@@' />
    <method selector='webView:didCommitLoadForFrame:' type='v@:@@' />
    <method selector='webView:didFailLoadWithError:forFrame:' type='v@:@@@' />
    <method selector='webView:didFailProvisionalLoadWithError:forFrame:' type='v@:@@@' />
    <method selector='webView:didFinishLoadForFrame:' type='v@:@@' />
    <method selector='webView:didReceiveIcon:forFrame:' type='v@:@@@' />
    <method selector='webView:didReceiveServerRedirectForProvisionalLoadForFrame:' type='v@:@@' />
    <method selector='webView:didReceiveTitle:forFrame:' type='v@:@@@' />
    <method selector='webView:didStartProvisionalLoadForFrame:' type='v@:@@' />
    <method selector='webView:willCloseFrame:' type='v@:@@' />
    <method selector='webView:willPerformClientRedirectToURL:delay:fireDate:forFrame:' type='v@:@@d@@' />
    <method selector='webView:windowScriptObjectAvailable:' type='v@:@@' />
  </informal_protocol>
  <informal_protocol name='WebJavaPlugIn'>
    <method selector='webPlugInCallJava:isStatic:returnType:method:arguments:callingURL:exceptionDescription:' type='(jvalue=CcSsiqfd^{_jobject})@:^{_jobject=}Bi^{_jmethodID=}^(jvalue=CcSsiqfd^{_jobject})@^@' />
    <method selector='webPlugInGetApplet' type='^{_jobject=}@:' />
  </informal_protocol>
  <informal_protocol name='WebPlugIn'>
    <method selector='objectForWebScript' type='@@:' />
    <method selector='webPlugInDestroy' type='v@:' />
    <method selector='webPlugInInitialize' type='v@:' />
    <method selector='webPlugInSetIsSelected:' type='v@:B' />
    <method selector='webPlugInStart' type='v@:' />
    <method selector='webPlugInStop' type='v@:' />
  </informal_protocol>
  <informal_protocol name='WebPlugInContainer'>
    <method selector='webFrame' type='@@:' />
    <method selector='webPlugInContainerLoadRequest:inFrame:' type='v@:@@' />
    <method selector='webPlugInContainerSelectionColor' type='@@:' />
    <method selector='webPlugInContainerShowStatus:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='WebPolicyDelegate'>
    <method selector='webView:decidePolicyForMIMEType:request:frame:decisionListener:' type='v@:@@@@@' />
    <method selector='webView:decidePolicyForNavigationAction:request:frame:decisionListener:' type='v@:@@@@@' />
    <method selector='webView:decidePolicyForNewWindowAction:request:newFrameName:decisionListener:' type='v@:@@@@@' />
    <method selector='webView:unableToImplementPolicyWithError:frame:' type='v@:@@@' />
  </informal_protocol>
  <informal_protocol name='WebResourceLoadDelegate'>
    <method selector='webView:identifierForInitialRequest:fromDataSource:' type='@@:@@@' />
    <method selector='webView:plugInFailedWithError:dataSource:' type='v@:@@@' />
    <method selector='webView:resource:didCancelAuthenticationChallenge:fromDataSource:' type='v@:@@@@' />
    <method selector='webView:resource:didFailLoadingWithError:fromDataSource:' type='v@:@@@@' />
    <method selector='webView:resource:didFinishLoadingFromDataSource:' type='v@:@@@' />
    <method selector='webView:resource:didReceiveAuthenticationChallenge:fromDataSource:' type='v@:@@@@' />
    <method selector='webView:resource:didReceiveContentLength:fromDataSource:' type='v@:@@i@' type64='v@:@@q@' />
    <method selector='webView:resource:didReceiveResponse:fromDataSource:' type='v@:@@@@' />
    <method selector='webView:resource:willSendRequest:redirectResponse:fromDataSource:' type='@@:@@@@@' />
  </informal_protocol>
  <informal_protocol name='WebScripting'>
    <method selector='finalizeForWebScript' type='v@:' />
    <method selector='invokeDefaultMethodWithArguments:' type='@@:@' />
    <method selector='invokeUndefinedMethodFromWebScript:withArguments:' type='@@:@@' />
    <method class_method='true' selector='isKeyExcludedFromWebScript:' type='B@:n^t' />
    <method class_method='true' selector='isSelectorExcludedFromWebScript:' type='B@::' />
    <method class_method='true' selector='webScriptNameForKey:' type='@@:*' />
    <method class_method='true' selector='webScriptNameForSelector:' type='@@::' />
  </informal_protocol>
  <informal_protocol name='WebUIDelegate'>
    <method selector='webView:contextMenuItemsForElement:defaultMenuItems:' type='@@:@@@' />
    <method selector='webView:createWebViewModalDialogWithRequest:' type='@@:@@' />
    <method selector='webView:createWebViewWithRequest:' type='@@:@@' />
    <method selector='webView:dragDestinationActionMaskForDraggingInfo:' type='I@:@@' type64='Q@:@@' />
    <method selector='webView:dragSourceActionMaskForPoint:' type='I@:@{_NSPoint=ff}' type64='Q@:@{CGPoint=dd}' />
    <method selector='webView:drawFooterInRect:' type='v@:@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='v@:@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='webView:drawHeaderInRect:' type='v@:@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='v@:@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='webView:makeFirstResponder:' type='v@:@@' />
    <method selector='webView:mouseDidMoveOverElement:modifierFlags:' type='v@:@@I' type64='v@:@@Q' />
    <method selector='webView:printFrameView:' type='v@:@@' />
    <method selector='webView:runBeforeUnloadConfirmPanelWithMessage:initiatedByFrame:' type='B@:@@@' />
    <method selector='webView:runJavaScriptAlertPanelWithMessage:' type='v@:@@' />
    <method selector='webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:' type='v@:@@@' />
    <method selector='webView:runJavaScriptConfirmPanelWithMessage:' type='B@:@@' />
    <method selector='webView:runJavaScriptConfirmPanelWithMessage:initiatedByFrame:' type='B@:@@@' />
    <method selector='webView:runJavaScriptTextInputPanelWithPrompt:defaultText:' type='@@:@@@' />
    <method selector='webView:runJavaScriptTextInputPanelWithPrompt:defaultText:initiatedByFrame:' type='@@:@@@@' />
    <method selector='webView:runOpenPanelForFileButtonWithResultListener:' type='v@:@@' />
    <method selector='webView:setContentRect:' type='v@:@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='v@:@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='webView:setFrame:' type='v@:@{_NSRect={_NSPoint=ff}{_NSSize=ff}}' type64='v@:@{CGRect={CGPoint=dd}{CGSize=dd}}' />
    <method selector='webView:setResizable:' type='v@:@B' />
    <method selector='webView:setStatusBarVisible:' type='v@:@B' />
    <method selector='webView:setStatusText:' type='v@:@@' />
    <method selector='webView:setToolbarsVisible:' type='v@:@B' />
    <method selector='webView:shouldPerformAction:fromSender:' type='B@:@:@' />
    <method selector='webView:validateUserInterfaceItem:defaultValidation:' type='B@:@@B' />
    <method selector='webView:willPerformDragDestinationAction:forDraggingInfo:' type='v@:@i@' />
    <method selector='webView:willPerformDragSourceAction:fromPoint:withPasteboard:' type='v@:@i{_NSPoint=ff}@' type64='v@:@i{CGPoint=dd}@' />
    <method selector='webViewAreToolbarsVisible:' type='B@:@' />
    <method selector='webViewClose:' type='v@:@' />
    <method selector='webViewContentRect:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:@' type64='{CGRect={CGPoint=dd}{CGSize=dd}}@:@' />
    <method selector='webViewFirstResponder:' type='@@:@' />
    <method selector='webViewFocus:' type='v@:@' />
    <method selector='webViewFooterHeight:' type='f@:@' />
    <method selector='webViewFrame:' type='{_NSRect={_NSPoint=ff}{_NSSize=ff}}@:@' type64='{CGRect={CGPoint=dd}{CGSize=dd}}@:@' />
    <method selector='webViewHeaderHeight:' type='f@:@' />
    <method selector='webViewIsResizable:' type='B@:@' />
    <method selector='webViewIsStatusBarVisible:' type='B@:@' />
    <method selector='webViewRunModal:' type='v@:@' />
    <method selector='webViewShow:' type='v@:@' />
    <method selector='webViewStatusText:' type='@@:@' />
    <method selector='webViewUnfocus:' type='v@:@' />
  </informal_protocol>
  <informal_protocol name='WebViewEditingDelegate'>
    <method selector='undoManagerForWebView:' type='@@:@' />
    <method selector='webView:doCommandBySelector:' type='B@:@:' />
    <method selector='webView:shouldApplyStyle:toElementsInDOMRange:' type='B@:@@@' />
    <method selector='webView:shouldBeginEditingInDOMRange:' type='B@:@@' />
    <method selector='webView:shouldChangeSelectedDOMRange:toDOMRange:affinity:stillSelecting:' type='B@:@@@IB' type64='B@:@@@QB' />
    <method selector='webView:shouldChangeTypingStyle:toStyle:' type='B@:@@@' />
    <method selector='webView:shouldDeleteDOMRange:' type='B@:@@' />
    <method selector='webView:shouldEndEditingInDOMRange:' type='B@:@@' />
    <method selector='webView:shouldInsertNode:replacingDOMRange:givenAction:' type='B@:@@@i' />
    <method selector='webView:shouldInsertText:replacingDOMRange:givenAction:' type='B@:@@@i' />
    <method selector='webViewDidBeginEditing:' type='v@:@' />
    <method selector='webViewDidChange:' type='v@:@' />
    <method selector='webViewDidChangeSelection:' type='v@:@' />
    <method selector='webViewDidChangeTypingStyle:' type='v@:@' />
    <method selector='webViewDidEndEditing:' type='v@:@' />
  </informal_protocol>
  <class name='DOMCSSStyleDeclaration'>
    <method selector='isPropertyImplicit:'>
      <retval type='B' />
    </method>
  </class>
  <class name='DOMDocument'>
    <method selector='createNodeIterator:whatToShow:filter:expandEntityReferences:'>
      <arg index='3' type='B' />
    </method>
    <method selector='createTreeWalker:whatToShow:filter:expandEntityReferences:'>
      <arg index='3' type='B' />
    </method>
    <method selector='createNodeIterator::::'>
      <arg index='3' type='B' />
    </method>
    <method selector='createTreeWalker::::'>
      <arg index='3' type='B' />
    </method>
    <method selector='getMatchedCSSRules:pseudoElement:authorOnly:'>
      <arg index='2' type='B' />
    </method>
    <method selector='importNode::'>
      <arg index='1' type='B' />
    </method>
  </class>
  <class name='DOMElement'>
    <method selector='hasAttribute:'>
      <retval type='B' />
    </method>
    <method selector='hasAttributeNS::'>
      <retval type='B' />
    </method>
    <method selector='hasAttributeNS:localName:'>
      <retval type='B' />
    </method>
    <method selector='scrollIntoView:'>
      <arg index='0' type='B' />
    </method>
    <method selector='scrollIntoViewIfNeeded:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMEvent'>
    <method selector='initEvent:canBubbleArg:cancelableArg:'>
      <arg index='1' type='B' />
      <arg index='2' type='B' />
    </method>
    <method selector='initEvent:::'>
      <arg index='1' type='B' />
      <arg index='2' type='B' />
    </method>
    <method selector='bubbles'>
	    <retval type='B' />
    </method>
    <method selector='cancelable'>
	    <retval type='B' />
    </method>
  </class>
  <class name='DOMHTMLElement'>
	  <method selector='isContentEditable'>
		  <retval type='B' />
	  </method>
  </class>
  <class name='DOMHTMLAreaElement'>
    <method selector='noHref'>
      <retval type='B' />
    </method>
    <method selector='setNoHref:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLButtonElement'>
    <method selector='disabled'>
      <retval type='B' />
    </method>
    <method selector='setDisabled:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLDListElement'>
    <method selector='compact'>
      <retval type='B' />
    </method>
    <method selector='setCompact:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLDirectoryElement'>
    <method selector='compact'>
      <retval type='B' />
    </method>
    <method selector='setCompact:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLFrameElement'>
    <method selector='noResize'>
      <retval type='B' />
    </method>
    <method selector='setNoResize:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLHRElement'>
    <method selector='noShade'>
      <retval type='B' />
    </method>
    <method selector='setNoShade:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLImageElement'>
    <method selector='isMap'>
      <retval type='B' />
    </method>
    <method selector='setIsMap:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLInputElement'>
    <method selector='checked'>
      <retval type='B' />
    </method>
    <method selector='defaultChecked'>
      <retval type='B' />
    </method>
    <method selector='disabled'>
      <retval type='B' />
    </method>
    <method selector='readOnly'>
      <retval type='B' />
    </method>
    <method selector='setChecked:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setDefaultChecked:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setDisabled:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setReadOnly:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLLinkElement'>
    <method selector='disabled'>
      <retval type='B' />
    </method>
    <method selector='setDisabled:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLMenuElement'>
    <method selector='compact'>
      <retval type='B' />
    </method>
    <method selector='setCompact:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLOListElement'>
    <method selector='compact'>
      <retval type='B' />
    </method>
    <method selector='setCompact:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLObjectElement'>
    <method selector='declare'>
      <retval type='B' />
    </method>
    <method selector='setDeclare:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLOptGroupElement'>
    <method selector='disabled'>
      <retval type='B' />
    </method>
    <method selector='setDisabled:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLOptionElement'>
    <method selector='defaultSelected'>
      <retval type='B' />
    </method>
    <method selector='disabled'>
      <retval type='B' />
    </method>
    <method selector='selected'>
      <retval type='B' />
    </method>
    <method selector='setDefaultSelected:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setDisabled:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setSelected:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLScriptElement'>
    <method selector='defer'>
      <retval type='B' />
    </method>
    <method selector='setDefer:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLSelectElement'>
    <method selector='disabled'>
      <retval type='B' />
    </method>
    <method selector='multiple'>
      <retval type='B' />
    </method>
    <method selector='setDisabled:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setMultiple:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLStyleElement'>
    <method selector='disabled'>
      <retval type='B' />
    </method>
    <method selector='setDisabled:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLTableCellElement'>
    <method selector='noWrap'>
      <retval type='B' />
    </method>
    <method selector='setNoWrap:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLTextAreaElement'>
    <method selector='disabled'>
      <retval type='B' />
    </method>
    <method selector='readOnly'>
      <retval type='B' />
    </method>
    <method selector='setDisabled:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setReadOnly:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMHTMLUListElement'>
    <method selector='compact'>
      <retval type='B' />
    </method>
    <method selector='setCompact:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMImplementation'>
    <method selector='hasFeature::'>
      <retval type='B' />
    </method>
    <method selector='hasFeature:version:'>
      <retval type='B' />
    </method>
  </class>
  <class name='DOMKeyboardEvent'>
    <method selector='getModifierState:'>
      <retval type='B' />
    </method>
    <method selector='ctrlKey'>
      <retval type='B' />
    </method>
    <method selector='shiftKey'>
      <retval type='B' />
    </method>
    <method selector='altKey'>
      <retval type='B' />
    </method>
    <method selector='metaKey'>
      <retval type='B' />
    </method>
  </class>
  <class name='DOMMouseEvent'>
    <method selector='initMouseEvent:canBubble:cancelable:view:detail:screenX:screenY:clientX:clientY:ctrlKey:altKey:shiftKey:metaKey:button:relatedTarget:'>
      <arg index='1' type='B' />
      <arg index='2' type='B' />
      <arg index='9' type='B' />
      <arg index='10' type='B' />
      <arg index='11' type='B' />
      <arg index='12' type='B' />
    </method>
    <method selector='ctrlKey'>
      <retval type='B' />
    </method>
    <method selector='shiftKey'>
      <retval type='B' />
    </method>
    <method selector='altKey'>
      <retval type='B' />
    </method>
    <method selector='metaKey'>
      <retval type='B' />
    </method>
  </class>
  <class name='DOMMutationEvent'>
    <method selector='initMutationEvent:canBubble:cancelable:relatedNode:prevValue:newValue:attrName:attrChange:'>
      <arg index='1' type='B' />
      <arg index='2' type='B' />
    </method>
    <method selector='initMutationEvent::::::::'>
      <arg index='1' type='B' />
      <arg index='2' type='B' />
    </method>
  </class>
  <class name='DOMNode'>
    <method selector='cloneNode:'>
      <arg index='0' type='B' />
    </method>
    <method selector='hasAttributes'>
      <retval type='B' />
    </method>
    <method selector='hasChildNodes'>
      <retval type='B' />
    </method>
    <method selector='isEqualNode:'>
      <retval type='B' />
    </method>
    <method selector='isSameNode:'>
      <retval type='B' />
    </method>
    <method selector='isSupported::'>
      <retval type='B' />
    </method>
    <method selector='isSupported:version:'>
      <retval type='B' />
    </method>
  </class>
  <class name='DOMOverflowEvent'>
    <method selector='initOverflowEvent:horizontalOverflow:verticalOverflow:'>
      <arg index='1' type='B' />
      <arg index='2' type='B' />
    </method>
    <method selector='horizontalOverflow'>
	    <retval type='B' />
    </method>
    <method selector='verticalOverflow'>
	    <retval type='B' />
    </method>
  </class>
  <class name='DOMRange'>
    <method selector='collapse:'>
      <arg index='0' type='B' />
    </method>
    <method selector='collapsed'>
      <retval type='B' />
    </method>
  </class>
  <class name='DOMStyleSheet'>
    <method selector='disabled'>
      <retval type='B' />
    </method>
    <method selector='setDisabled:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='DOMUIEvent'>
    <method selector='initUIEvent:canBubble:cancelable:view:detail:'>
      <arg index='1' type='B' />
      <arg index='2' type='B' />
    </method>
    <method selector='initUIEvent:::::'>
      <arg index='1' type='B' />
      <arg index='2' type='B' />
    </method>
  </class>
  <class name='NSObject'>
     <method selector='acceptNode:'>
       <retval type='s' />
     </method>
    <method selector='addEventListener:::'>
      <arg index='2' type='B' />
    </method>
    <method selector='addEventListener:listener:useCapture:'>
      <arg index='2' type='B' />
    </method>
    <method selector='canProvideDocumentSource'>
      <retval type='B' />
    </method>
    <method selector='dispatchEvent:'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='isKeyExcludedFromWebScript:'>
      <retval type='B' />
      <arg index='0' type='n^t' c_array_delimited_by_null='true' />
    </method>
    <method class_method='true' selector='isSelectorExcludedFromWebScript:'>
      <retval type='B' />
      <arg index='0' type=':' />
    </method>
    <method selector='removeEventListener:listener:useCapture:'>
      <arg index='2' type='B' />
    </method>
    <method selector='removeEventListener:::'>
      <arg index='2' type='B' />
    </method>
    <method selector='searchFor:direction:caseSensitive:wrap:'>
      <retval type='B' />
      <arg index='1' type='B' />
      <arg index='2' type='B' />
      <arg index='3' type='B' />
    </method>
    <method selector='setNeedsLayout:'>
      <arg index='0' type='B' />
    </method>
    <method selector='supportsTextEncoding'>
      <retval type='B' />
    </method>
    <method selector='webPlugInCallJava:isStatic:returnType:method:arguments:callingURL:exceptionDescription:'>
      <arg index='0' type='^{_jobject=}' />
      <arg index='1' type='B' />
      <arg index='3' type='^{_jmethodID=}' />
      <arg index='4' type='^(jvalue=CcSsiqfd^{_jobject})' />
      <arg index='6' type_modifier='o' />
    </method>
    <method selector='webPlugInGetApplet'>
      <retval type='^{_jobject=}' />
    </method>
    <method selector='webPlugInSetIsSelected:'>
      <arg index='0' type='B' />
    </method>
    <method class_method='true' selector='webScriptNameForKey:'>
      <arg index='0' type='n^t' c_array_delimited_by_null='true' />
    </method>
    <method class_method='true' selector='webScriptNameForSelector:'>
      <arg index='0' type=':' />
    </method>
    <method selector='webView:doCommandBySelector:'>
      <retval type='B' />
      <arg index='1' type=':' />
    </method>
    <method selector='webView:runBeforeUnloadConfirmPanelWithMessage:initiatedByFrame:'>
      <retval type='B' />
    </method>
    <method selector='webView:runJavaScriptConfirmPanelWithMessage:'>
      <retval type='B' />
    </method>
    <method selector='webView:runJavaScriptConfirmPanelWithMessage:initiatedByFrame:'>
      <retval type='B' />
    </method>
    <method selector='webView:setResizable:'>
      <arg index='1' type='B' />
    </method>
    <method selector='webView:setStatusBarVisible:'>
      <arg index='1' type='B' />
    </method>
    <method selector='webView:setToolbarsVisible:'>
      <arg index='1' type='B' />
    </method>
    <method selector='webView:shouldApplyStyle:toElementsInDOMRange:'>
      <retval type='B' />
    </method>
    <method selector='webView:shouldBeginEditingInDOMRange:'>
      <retval type='B' />
    </method>
    <method selector='webView:shouldChangeSelectedDOMRange:toDOMRange:affinity:stillSelecting:'>
      <retval type='B' />
      <arg index='4' type='B' />
    </method>
    <method selector='webView:shouldChangeTypingStyle:toStyle:'>
      <retval type='B' />
    </method>
    <method selector='webView:shouldDeleteDOMRange:'>
      <retval type='B' />
    </method>
    <method selector='webView:shouldEndEditingInDOMRange:'>
      <retval type='B' />
    </method>
    <method selector='webView:shouldInsertNode:replacingDOMRange:givenAction:'>
      <retval type='B' />
    </method>
    <method selector='webView:shouldInsertText:replacingDOMRange:givenAction:'>
      <retval type='B' />
    </method>
    <method selector='webView:shouldPerformAction:fromSender:'>
      <retval type='B' />
      <arg index='1' type=':' />
    </method>
    <method selector='webView:validateUserInterfaceItem:defaultValidation:'>
      <retval type='B' />
      <arg index='2' type='B' />
    </method>
    <method selector='webViewAreToolbarsVisible:'>
      <retval type='B' />
    </method>
    <method selector='webViewIsResizable:'>
      <retval type='B' />
    </method>
    <method selector='webViewIsStatusBarVisible:'>
      <retval type='B' />
    </method>
  </class>
  <class name='WebBackForwardList'>
    <method selector='containsItem:'>
      <retval type='B' />
    </method>
  </class>
  <class name='WebDataSource'>
    <method selector='isLoading'>
      <retval type='B' />
    </method>
  </class>
  <class name='WebFrame'>
    <method selector='globalContext'>
      <retval type='^{OpaqueJSContext=}' />
    </method>
  </class>
  <class name='WebFrameView'>
    <method selector='allowsScrolling'>
      <retval type='B' />
    </method>
    <method selector='canPrintHeadersAndFooters'>
      <retval type='B' />
    </method>
    <method selector='documentViewShouldHandlePrint'>
      <retval type='B' />
    </method>
    <method selector='setAllowsScrolling:'>
      <arg index='0' type='B' />
    </method>
  </class>
  <class name='WebHistory'>
    <method selector='loadFromURL:error:'>
      <retval type='B' />
      <arg index='1' type_modifier='o' />
    </method>
    <method selector='saveToURL:error:'>
      <retval type='B' />
      <arg index='1' type_modifier='o' />
    </method>
  </class>
  <class name='WebPreferences'>
    <method selector='allowsAnimatedImageLooping'>
      <retval type='B' />
    </method>
    <method selector='allowsAnimatedImages'>
      <retval type='B' />
    </method>
    <method selector='arePlugInsEnabled'>
      <retval type='B' />
    </method>
    <method selector='autosaves'>
      <retval type='B' />
    </method>
    <method selector='isJavaEnabled'>
      <retval type='B' />
    </method>
    <method selector='isJavaScriptEnabled'>
      <retval type='B' />
    </method>
    <method selector='javaScriptCanOpenWindowsAutomatically'>
      <retval type='B' />
    </method>
    <method selector='loadsImagesAutomatically'>
      <retval type='B' />
    </method>
    <method selector='privateBrowsingEnabled'>
      <retval type='B' />
    </method>
    <method selector='setAllowsAnimatedImageLooping:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setAllowsAnimatedImages:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setAutosaves:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setJavaEnabled:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setJavaScriptCanOpenWindowsAutomatically:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setJavaScriptEnabled:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setLoadsImagesAutomatically:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setPlugInsEnabled:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setPrivateBrowsingEnabled:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setShouldPrintBackgrounds:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setTabsToLinks:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setUserStyleSheetEnabled:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setUsesPageCache:'>
      <arg index='0' type='B' />
    </method>
    <method selector='shouldPrintBackgrounds'>
      <retval type='B' />
    </method>
    <method selector='tabsToLinks'>
      <retval type='B' />
    </method>
    <method selector='userStyleSheetEnabled'>
      <retval type='B' />
    </method>
    <method selector='usesPageCache'>
      <retval type='B' />
    </method>
  </class>
  <class name='WebScriptObject'>
    <method selector='JSObject'>
      <retval type='^{OpaqueJSValue=}' />
    </method>
    <method class_method='true' selector='throwException:'>
      <retval type='B' />
    </method>
  </class>
  <class name='WebView'>
    <method selector='canGoBack'>
      <retval type='B' />
    </method>
    <method selector='canGoForward'>
      <retval type='B' />
    </method>
    <method selector='canMakeTextLarger'>
      <retval type='B' />
    </method>
    <method selector='canMakeTextSmaller'>
      <retval type='B' />
    </method>
    <method selector='canMakeTextStandardSize'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='canShowMIMEType:'>
      <retval type='B' />
    </method>
    <method class_method='true' selector='canShowMIMETypeAsHTML:'>
      <retval type='B' />
    </method>
    <method selector='drawsBackground'>
      <retval type='B' />
    </method>
    <method selector='goBack'>
      <retval type='B' />
    </method>
    <method selector='goForward'>
      <retval type='B' />
    </method>
    <method selector='goToBackForwardItem:'>
      <retval type='B' />
    </method>
    <method selector='isContinuousSpellCheckingEnabled'>
      <retval type='B' />
    </method>
    <method selector='isEditable'>
      <retval type='B' />
    </method>
    <method selector='isLoading'>
      <retval type='B' />
    </method>
    <method selector='maintainsInactiveSelection'>
      <retval type='B' />
    </method>
    <method selector='searchFor:direction:caseSensitive:wrap:'>
      <retval type='B' />
      <arg index='1' type='B' />
      <arg index='2' type='B' />
      <arg index='3' type='B' />
    </method>
    <method selector='setContinuousSpellCheckingEnabled:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setDrawsBackground:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setEditable:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setMaintainsBackForwardList:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setShouldCloseWithWindow:'>
      <arg index='0' type='B' />
    </method>
    <method selector='setSmartInsertDeleteEnabled:'>
      <arg index='0' type='B' />
    </method>
    <method selector='shouldCloseWithWindow'>
      <retval type='B' />
    </method>
    <method selector='smartInsertDeleteEnabled'>
      <retval type='B' />
    </method>
    <method selector='supportsTextEncoding'>
      <retval type='B' />
    </method>
  </class>
  <class name='DOMAttr' >
	  <method selector='specified'>
		  <retval type='B' />
	  </method>
  </class>
  <class name='DOMNodeIterator' >
	  <method selector='expandEntityReferences'>
		  <retval type='B' />
	  </method>
  </class>
  <class name='DOMTreeWalker' >
	  <method selector='expandEntityReferences'>
		  <retval type='B' />
	  </method>
  </class>
  <class name='DOMWheelEvent'>
    <method selector='ctrlKey'>
      <retval type='B' />
    </method>
    <method selector='shiftKey'>
      <retval type='B' />
    </method>
    <method selector='altKey'>
      <retval type='B' />
    </method>
    <method selector='metaKey'>
      <retval type='B' />
    </method>
    <method selector='isHorizontal'>
      <retval type='B' />
    </method>
    </class>
  <class name='DOMXPathResult'>
	  <method selector='booleanValue'>
      <retval type='B' />
    </method>
    <method selector='invalidIteratorState'>
      <retval type='B' />
    </method>
    </class>

</signatures>

