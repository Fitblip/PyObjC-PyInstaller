<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
  <depends_on path='/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation' />
  <cftype name='CFHTTPAuthenticationRef' type='^{_CFHTTPAuthentication=}' type64='^{_CFHTTPAuthentication=}' gettypeid_func='CFHTTPAuthenticationGetTypeID' />
  <cftype name='CFHTTPMessageRef' type='^{__CFHTTPMessage=}' type64='^{__CFHTTPMessage=}' gettypeid_func='CFHTTPMessageGetTypeID' />
  <cftype name='CFHostRef' type='^{__CFHost=}' type64='^{__CFHost=}' gettypeid_func='CFHostGetTypeID'/>
  <cftype name='CFNetDiagnosticRef' type='^{__CFNetDiagnostic=}' type64='^{__CFNetDiagnostic=}' gettypeid_func='CFNetDiagnosticGetTypeID'/>
  <cftype name='CFNetServiceBrowserRef' type='^{__CFNetServiceBrowser=}' type64='^{__CFNetServiceBrowser=}' gettypeid_func='CFNetServiceBrowserGetTypeID'/>
  <cftype name='CFNetServiceMonitorRef' type='^{__CFNetServiceMonitor=}' type64='^{__CFNetServiceMonitor=}' gettypeid_func='CFNetServiceMonitorGetTypeID'/>
  <cftype name='CFNetServiceRef' type='^{__CFNetService=}' type64='^{__CFNetService=}' gettypeid_func='CFNetServiceGetTypeID'/>
  <constant name='kCFStreamErrorDomainMach' type='i' />
  <constant name='kCFStreamErrorDomainFTP' type='i' />
  <constant name='kCFStreamErrorDomainSOCKS' type='i' />
  <constant name='kCFStreamErrorDomainSSL' type='i' />
  <constant name='kCFStreamErrorDomainHTTP' type='i' />
  <constant name='kCFStreamErrorDomainNetDB' type='i' />
  <constant name='kCFStreamErrorDomainSystemConfiguration' type='i' />
  <constant name='kCFStreamErrorDomainNetServices' type='i' />
  <constant name='kCFProxyTypeKey' type='^{__CFString=}' />
  <constant name='kCFProxyHostNameKey' type='^{__CFString=}' />
  <constant name='kCFProxyPortNumberKey' type='^{__CFString=}' />
  <constant name='kCFProxyAutoConfigurationURLKey' type='^{__CFString=}' />
  <constant name='kCFProxyUsernameKey' type='^{__CFString=}' />
  <constant name='kCFProxyPasswordKey' type='^{__CFString=}' />
  <constant name='kCFProxyTypeNone' type='^{__CFString=}' />
  <constant name='kCFProxyTypeHTTP' type='^{__CFString=}' />
  <constant name='kCFProxyTypeHTTPS' type='^{__CFString=}' />
  <constant name='kCFProxyTypeSOCKS' type='^{__CFString=}' />
  <constant name='kCFProxyTypeFTP' type='^{__CFString=}' />
  <constant name='kCFProxyTypeAutoConfigurationURL' type='^{__CFString=}' />
  <constant name='kCFNetworkProxiesHTTPEnable' type='^{__CFString=}' />
  <constant name='kCFNetworkProxiesHTTPPort' type='^{__CFString=}' />
  <constant name='kCFNetworkProxiesHTTPProxy' type='^{__CFString=}' />
  <constant name='kCFNetworkProxiesProxyAutoConfigEnable' type='^{__CFString=}' />
  <constant name='kCFNetworkProxiesProxyAutoConfigURLString' type='^{__CFString=}' />
  <constant name='kCFErrorDomainCFNetwork' type='^{__CFString=}' />
  <constant name='kCFErrorDomainWinSock' type='^{__CFString=}' />
  <constant name='kCFGetAddrInfoFailureKey' type='^{__CFString=}' />
  <constant name='kCFSOCKSStatusCodeKey' type='^{__CFString=}' />
  <constant name='kCFSOCKSVersionKey' type='^{__CFString=}' />
  <constant name='kCFSOCKSNegotiationMethodKey' type='^{__CFString=}' />
  <constant name='kCFDNSServiceFailureKey' type='^{__CFString=}' />
  <constant name='kCFFTPStatusCodeKey' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyHTTPResponseHeader' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyHTTPFinalURL' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyHTTPFinalRequest' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyHTTPProxy' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyHTTPProxyHost' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyHTTPProxyPort' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyHTTPSProxyHost' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyHTTPSProxyPort' type='^{__CFString=}' />
  <constant name='kCFHTTPAuthenticationUsername' type='^{__CFString=}' />
  <constant name='kCFHTTPAuthenticationPassword' type='^{__CFString=}' />
  <constant name='kCFHTTPAuthenticationAccountDomain' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyHTTPShouldAutoredirect' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyHTTPAttemptPersistentConnection' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyHTTPRequestBytesWrittenCount' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyFTPUserName' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyFTPPassword' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyFTPUsePassiveMode' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyFTPResourceSize' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyFTPFetchResourceInfo' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyFTPFileTransferOffset' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyFTPAttemptPersistentConnection' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyFTPProxy' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyFTPProxyHost' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyFTPProxyPort' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyFTPProxyUser' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyFTPProxyPassword' type='^{__CFString=}' />
  <constant name='kCFHTTPVersion1_0' type='^{__CFString=}' />
  <constant name='kCFHTTPVersion1_1' type='^{__CFString=}' />
  <constant name='kCFHTTPAuthenticationSchemeBasic' type='^{__CFString=}' />
  <constant name='kCFHTTPAuthenticationSchemeDigest' type='^{__CFString=}' />
  <constant name='kCFHTTPAuthenticationSchemeNTLM' type='^{__CFString=}' />
  <constant name='kCFHTTPAuthenticationSchemeNegotiate' type='^{__CFString=}' />
  <constant name='kCFFTPResourceMode' type='^{__CFString=}' />
  <constant name='kCFFTPResourceName' type='^{__CFString=}' />
  <constant name='kCFFTPResourceOwner' type='^{__CFString=}' />
  <constant name='kCFFTPResourceGroup' type='^{__CFString=}' />
  <constant name='kCFFTPResourceLink' type='^{__CFString=}' />
  <constant name='kCFFTPResourceSize' type='^{__CFString=}' />
  <constant name='kCFFTPResourceType' type='^{__CFString=}' />
  <constant name='kCFFTPResourceModDate' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySOCKSPassword' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySOCKSProxy' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySOCKSProxyHost' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySOCKSProxyPort' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySOCKSUser' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySOCKSVersion' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyShouldCloseNativeSocket' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySocketSecurityLevel' type='^{__CFString=}' />
  <constant name='kCFStreamSocketSOCKSVersion4' type='^{__CFString=}' />
  <constant name='kCFStreamSocketSOCKSVersion5' type='^{__CFString=}' />
  <constant name='kCFStreamSocketSecurityLevelNegotiatedSSL' type='^{__CFString=}' />
  <constant name='kCFStreamSocketSecurityLevelNone' type='^{__CFString=}' />
  <constant name='kCFStreamSocketSecurityLevelSSLv2' type='^{__CFString=}' />
  <constant name='kCFStreamSocketSecurityLevelSSLv3' type='^{__CFString=}' />
  <constant name='kCFStreamSocketSecurityLevelTLSv1' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySOCKSProxyHost' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySOCKSProxyPort' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySOCKSVersion' type='^{__CFString=}' />
  <constant name='kCFStreamSocketSOCKSVersion4' type='^{__CFString=}' />
  <constant name='kCFStreamSocketSOCKSVersion5' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySOCKSUser' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySOCKSPassword' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySocketSecurityLevel' type='^{__CFString=}' />
  <constant name='kCFStreamSocketSecurityLevelNone' type='^{__CFString=}' />
  <constant name='kCFStreamSocketSecurityLevelSSLv2' type='^{__CFString=}' />
  <constant name='kCFStreamSocketSecurityLevelSSLv3' type='^{__CFString=}' />
  <constant name='kCFStreamSocketSecurityLevelTLSv1' type='^{__CFString=}' />
  <constant name='kCFStreamSocketSecurityLevelNegotiatedSSL' type='^{__CFString=}' />
  <constant name='kCFStreamPropertyShouldCloseNativeSocket' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySocketRemoteHost' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySocketRemoteNetService' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySSLPeerCertificates' type='^{__CFString=}' />
  <constant name='kCFStreamPropertySSLSettings' type='^{__CFString=}' />
  <constant name='kCFStreamSSLLevel' type='^{__CFString=}' />
  <constant name='kCFStreamSSLAllowsExpiredCertificates' type='^{__CFString=}' />
  <constant name='kCFStreamSSLAllowsExpiredRoots' type='^{__CFString=}' />
  <constant name='kCFStreamSSLAllowsAnyRoot' type='^{__CFString=}' />
  <constant name='kCFStreamSSLValidatesCertificateChain' type='^{__CFString=}' />
  <constant name='kCFStreamSSLPeerName' type='^{__CFString=}' />
  <constant name='kCFStreamSSLCertificates' type='^{__CFString=}' />
  <constant name='kCFStreamSSLIsServer' type='^{__CFString=}' />
  <constant name='kCFStreamErrorDomainWinSock' type='i' />
  <constant name='kCFStreamPropertyProxyLocalBypass' type='^{__CFString=}' />
  <enum name='kCFErrorHTTPAuthenticationTypeUnsupported' value='300' />
  <enum name='kCFErrorHTTPBadCredentials' value='301' />
  <enum name='kCFErrorHTTPBadProxyCredentials' value='307' />
  <enum name='kCFErrorHTTPBadURL' value='305' />
  <enum name='kCFErrorHTTPConnectionLost' value='302' />
  <enum name='kCFErrorHTTPParseFailure' value='303' />
  <enum name='kCFErrorHTTPProxyConnectionFailure' value='306' />
  <enum name='kCFErrorHTTPRedirectionLoopDetected' value='304' />
  <enum name='kCFErrorPACFileError' value='308' />
  <enum name='kCFFTPErrorUnexpectedStatusCode' value='200' />
  <enum name='kCFHostAddresses' value='0' />
  <enum name='kCFHostErrorHostNotFound' value='1' />
  <enum name='kCFHostErrorUnknown' value='2' />
  <enum name='kCFHostNames' value='1' />
  <enum name='kCFHostReachability' value='2' />
  <enum name='kCFNetDiagnosticConnectionDown' value='-66557' />
  <enum name='kCFNetDiagnosticConnectionIndeterminate' value='-66558' />
  <enum name='kCFNetDiagnosticConnectionUp' value='-66559' />
  <enum name='kCFNetDiagnosticErr' value='-66560' />
  <enum name='kCFNetDiagnosticNoErr' value='0' />
  <enum name='kCFNetServiceErrorBadArgument' value='-72004' />
  <enum name='kCFNetServiceErrorCancel' value='-72005' />
  <enum name='kCFNetServiceErrorCollision' value='-72001' />
  <enum name='kCFNetServiceErrorDNSServiceFailure' value='-73000' />
  <enum name='kCFNetServiceErrorInProgress' value='-72003' />
  <enum name='kCFNetServiceErrorInvalid' value='-72006' />
  <enum name='kCFNetServiceErrorNotFound' value='-72002' />
  <enum name='kCFNetServiceErrorTimeout' value='-72007' />
  <enum name='kCFNetServiceErrorUnknown' value='-72000' />
  <enum name='kCFNetServiceFlagIsDefault' value='4' />
  <enum name='kCFNetServiceFlagIsDomain' value='2' />
  <enum name='kCFNetServiceFlagIsRegistrationDomain' value='4' />
  <enum name='kCFNetServiceFlagMoreComing' value='1' />
  <enum name='kCFNetServiceFlagNoAutoRename' value='1' />
  <enum name='kCFNetServiceFlagRemove' value='8' />
  <enum name='kCFNetServiceMonitorTXT' value='1' />
  <enum name='kCFNetServicesErrorBadArgument' value='-72004' />
  <enum name='kCFNetServicesErrorCancel' value='-72005' />
  <enum name='kCFNetServicesErrorCollision' value='-72001' />
  <enum name='kCFNetServicesErrorInProgress' value='-72003' />
  <enum name='kCFNetServicesErrorInvalid' value='-72006' />
  <enum name='kCFNetServicesErrorNotFound' value='-72002' />
  <enum name='kCFNetServicesErrorTimeout' value='-72007' />
  <enum name='kCFNetServicesErrorUnknown' value='-72000' />
  <enum name='kCFSOCKS4ErrorIdConflict' value='112' />
  <enum name='kCFSOCKS4ErrorIdentdFailed' value='111' />
  <enum name='kCFSOCKS4ErrorRequestFailed' value='110' />
  <enum name='kCFSOCKS4ErrorUnknownStatusCode' value='113' />
  <enum name='kCFSOCKS5ErrorBadCredentials' value='122' />
  <enum name='kCFSOCKS5ErrorBadResponseAddr' value='121' />
  <enum name='kCFSOCKS5ErrorBadState' value='120' />
  <enum name='kCFSOCKS5ErrorNoAcceptableMethod' value='124' />
  <enum name='kCFSOCKS5ErrorUnsupportedNegotiationMethod' value='123' />
  <enum name='kCFSOCKSErrorUnknownClientVersion' value='100' />
  <enum name='kCFSOCKSErrorUnsupportedServerVersion' value='101' />
  <enum name='kCFStreamErrorHTTPAuthenticationBadPassword' value='-1002' />
  <enum name='kCFStreamErrorHTTPAuthenticationBadUserName' value='-1001' />
  <enum name='kCFStreamErrorHTTPAuthenticationTypeUnsupported' value='-1000' />
  <enum name='kCFStreamErrorHTTPBadURL' value='-3' />
  <enum name='kCFStreamErrorHTTPParseFailure' value='-1' />
  <enum name='kCFStreamErrorHTTPRedirectionLoop' value='-2' />
  <enum name='kCFStreamErrorSOCKS4IdConflict' value='93' />
  <enum name='kCFStreamErrorSOCKS4IdentdFailed' value='92' />
  <enum name='kCFStreamErrorSOCKS4RequestFailed' value='91' />
  <enum name='kCFStreamErrorSOCKS4SubDomainResponse' value='2' />
  <enum name='kCFStreamErrorSOCKS5BadResponseAddr' value='1' />
  <enum name='kCFStreamErrorSOCKS5BadState' value='2' />
  <enum name='kCFStreamErrorSOCKS5SubDomainMethod' value='4' />
  <enum name='kCFStreamErrorSOCKS5SubDomainResponse' value='5' />
  <enum name='kCFStreamErrorSOCKS5SubDomainUserPass' value='3' />
  <enum name='kCFStreamErrorSOCKSSubDomainNone' value='0' />
  <enum name='kCFStreamErrorSOCKSSubDomainVersionCode' value='1' />
  <enum name='kCFStreamErrorSOCKSUnknownClientVersion' value='3' />
  <enum name='kCFStreamSocketSecurityNone' value='0' />
  <enum name='kCFStreamSocketSecuritySSLv2' value='1' />
  <enum name='kCFStreamSocketSecuritySSLv23' value='3' />
  <enum name='kCFStreamSocketSecuritySSLv3' value='2' />
  <enum name='kCFStreamSocketSecurityTLSv1' value='4' />
  <enum name='kSOCKS5NoAcceptableMethod' value='255' />
  <function name='CFFTPCreateParsedResourceListing'>
    <retval type='l' type64='q' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^v' c_array_length_in_arg='2' type_modifier='n' />
    <arg type='l' type64='l' />
    <arg type='^^{__CFDictionary}' type_modifier='o' />
  </function>
  <function name='CFHTTPAuthenticationAppliesToRequest'>
    <retval type='B' />
    <arg type='^{_CFHTTPAuthentication=}' />
    <arg type='^{__CFHTTPMessage=}' />
  </function>
  <function name='CFHTTPAuthenticationCopyDomains'>
    <retval type='^{__CFArray=}' already_cfretained='true' />
    <arg type='^{_CFHTTPAuthentication=}' />
  </function>
  <function name='CFHTTPAuthenticationCopyMethod'>
    <retval type='^{__CFString=}' already_cfretained='true' />
    <arg type='^{_CFHTTPAuthentication=}' />
  </function>
  <function name='CFHTTPAuthenticationCopyRealm'>
    <retval type='^{__CFString=}' already_cfretained='true' />
    <arg type='^{_CFHTTPAuthentication=}' />
  </function>
  <function name='CFHTTPAuthenticationCreateFromResponse'>
    <retval type='^{_CFHTTPAuthentication=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFHTTPMessage=}' />
  </function>
  <function name='CFHTTPAuthenticationGetTypeID'>
    <retval type='L' type64='Q' />
  </function>
  <function name='CFHTTPAuthenticationIsValid'>
    <retval type='B' />
    <arg type='^{_CFHTTPAuthentication=}' />
    <arg type='^{_CFStreamError=ii}' type64='^{_CFStreamError=ii}' type_modifier='o' />
  </function>
  <function name='CFHTTPAuthenticationRequiresAccountDomain'>
    <retval type='B' />
    <arg type='^{_CFHTTPAuthentication=}' />
  </function>
  <function name='CFHTTPAuthenticationRequiresOrderedRequests'>
    <retval type='B' />
    <arg type='^{_CFHTTPAuthentication=}' />
  </function>
  <function name='CFHTTPAuthenticationRequiresUserNameAndPassword'>
    <retval type='B' />
    <arg type='^{_CFHTTPAuthentication=}' />
  </function>
  <function name='CFHTTPMessageAddAuthentication'>
    <retval type='B' />
    <arg type='^{__CFHTTPMessage=}' />
    <arg type='^{__CFHTTPMessage=}' />
    <arg type='^{__CFString=}' />
    <arg type='^{__CFString=}' />
    <arg type='^{__CFString=}' />
    <arg type='B' />
  </function>
  <function name='CFHTTPMessageAppendBytes'>
    <retval type='B' />
    <arg type='^{__CFHTTPMessage=}' />
    <arg type='^v' c_array_length_in_arg='2' type_modifier='n' />
    <arg type='l' type64='l' />
  </function>
  <function name='CFHTTPMessageApplyCredentialDictionary'>
    <retval type='B' />
    <arg type='^{__CFHTTPMessage=}' />
    <arg type='^{_CFHTTPAuthentication=}' />
    <arg type='^{__CFDictionary=}' />
    <arg type='^{_CFStreamError=ii}' type64='^{_CFStreamError=ii}' type_modifier='o' />
  </function>
  <function name='CFHTTPMessageApplyCredentials'>
    <retval type='B' />
    <arg type='^{__CFHTTPMessage=}' />
    <arg type='^{_CFHTTPAuthentication=}' />
    <arg type='^{__CFString=}' />
    <arg type='^{__CFString=}' />
    <arg type='^{_CFStreamError=ii}' type64='^{_CFStreamError=ii}' type_modifier='o' />
  </function>
  <function name='CFHTTPMessageCopyAllHeaderFields'>
    <retval type='^{__CFDictionary=}' already_cfretained='true' />
    <arg type='^{__CFHTTPMessage=}' />
  </function>
  <function name='CFHTTPMessageCopyBody'>
    <retval type='^{__CFData=}' already_cfretained='true' />
    <arg type='^{__CFHTTPMessage=}' />
  </function>
  <function name='CFHTTPMessageCopyHeaderFieldValue'>
    <retval type='^{__CFString=}' already_cfretained='true' />
    <arg type='^{__CFHTTPMessage=}' />
    <arg type='^{__CFString=}' />
  </function>
  <function name='CFHTTPMessageCopyRequestMethod'>
    <retval type='^{__CFString=}' already_cfretained='true' />
    <arg type='^{__CFHTTPMessage=}' />
  </function>
  <function name='CFHTTPMessageCopyRequestURL'>
    <retval type='^{__CFURL=}' already_cfretained='true' />
    <arg type='^{__CFHTTPMessage=}' />
  </function>
  <function name='CFHTTPMessageCopyResponseStatusLine'>
    <retval type='^{__CFString=}' already_cfretained='true' />
    <arg type='^{__CFHTTPMessage=}' />
  </function>
  <function name='CFHTTPMessageCopySerializedMessage'>
    <retval type='^{__CFData=}' already_cfretained='true' />
    <arg type='^{__CFHTTPMessage=}' />
  </function>
  <function name='CFHTTPMessageCopyVersion'>
    <retval type='^{__CFString=}' already_cfretained='true' />
    <arg type='^{__CFHTTPMessage=}' />
  </function>
  <function name='CFHTTPMessageCreateCopy'>
    <retval type='^{__CFHTTPMessage=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFHTTPMessage=}' />
  </function>
  <function name='CFHTTPMessageCreateEmpty'>
    <retval type='^{__CFHTTPMessage=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='B' />
  </function>
  <function name='CFHTTPMessageCreateRequest'>
    <retval type='^{__CFHTTPMessage=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFString=}' />
    <arg type='^{__CFURL=}' />
    <arg type='^{__CFString=}' />
  </function>
  <function name='CFHTTPMessageCreateResponse'>
    <retval type='^{__CFHTTPMessage=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='l' type64='l' />
    <arg type='^{__CFString=}' />
    <arg type='^{__CFString=}' />
  </function>
  <function name='CFHTTPMessageGetResponseStatusCode'>
    <retval type='l' type64='q' />
    <arg type='^{__CFHTTPMessage=}' />
  </function>
  <function name='CFHTTPMessageGetTypeID'>
    <retval type='L' type64='Q' />
  </function>
  <function name='CFHTTPMessageIsHeaderComplete'>
    <retval type='B' />
    <arg type='^{__CFHTTPMessage=}' />
  </function>
  <function name='CFHTTPMessageIsRequest'>
    <retval type='B' />
    <arg type='^{__CFHTTPMessage=}' />
  </function>
  <function name='CFHTTPMessageSetBody'>
    <arg type='^{__CFHTTPMessage=}' />
    <arg type='^{__CFData=}' />
  </function>
  <function name='CFHTTPMessageSetHeaderFieldValue'>
    <arg type='^{__CFHTTPMessage=}' />
    <arg type='^{__CFString=}' />
    <arg type='^{__CFString=}' />
  </function>
  <function name='CFHTTPReadStreamSetProxy'>
    <arg type='^{__CFReadStream=}' />
    <arg type='^{__CFString=}' />
    <arg type='l' type64='l' />
  </function>
  <function name='CFHTTPReadStreamSetRedirectsAutomatically'>
    <arg type='^{__CFReadStream=}' />
    <arg type='B' />
  </function>
  <function name='CFHostCancelInfoResolution'>
    <arg type='^{__CFHost=}' />
    <arg type='i' />
  </function>
  <function name='CFHostCreateCopy'>
    <retval type='^{__CFHost=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFHost=}' />
  </function>
  <function name='CFHostCreateWithAddress'>
    <retval type='^{__CFHost=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFData=}' />
  </function>
  <function name='CFHostCreateWithName'>
    <retval type='^{__CFHost=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFString=}' />
  </function>
  <function name='CFHostGetAddressing'>
    <retval type='^{__CFArray=}' />
    <arg type='^{__CFHost=}' />
    <arg type='o^B' />
  </function>
  <function name='CFHostGetNames'>
    <retval type='^{__CFArray=}' />
    <arg type='^{__CFHost=}' />
    <arg type='o^B' />
  </function>
  <function name='CFHostGetReachability'>
    <retval type='^{__CFData=}' />
    <arg type='^{__CFHost=}' />
    <arg type='o^B' />
  </function>
  <function name='CFHostGetTypeID'>
    <retval type='L' type64='Q' />
  </function>
  <function name='CFHostScheduleWithRunLoop'>
    <arg type='^{__CFHost=}' />
    <arg type='^{__CFRunLoop=}' />
    <arg type='^{__CFString=}' />
  </function>
  <function name='CFHostSetClient'>
    <retval type='B' />
    <arg type='^{__CFHost=}' />
    <arg type='^?' />
    <arg type='^{CFHostClientContext=i^v^?^?^?}' type64='^{CFHostClientContext=i^v^?^?^?}' />
  </function>
  <function name='CFHostStartInfoResolution'>
    <retval type='B' />
    <arg type='^{__CFHost=}' />
    <arg type='i' />
    <arg type='^{_CFStreamError=ii}' type64='^{_CFStreamError=ii}' type_modifier='o' />
  </function>
  <function name='CFHostUnscheduleFromRunLoop'>
    <arg type='^{__CFHost=}' />
    <arg type='^{__CFRunLoop=}' />
    <arg type='^{__CFString=}' />
  </function>
  <function name='CFNetDiagnosticCopyNetworkStatusPassively'>
    <retval type='l' />
    <arg type='^{__CFNetDiagnostic=}' />
    <arg type='^^{__CFString}' type_modifier='o' />
  </function>
  <function name='CFNetDiagnosticCreateWithStreams'>
    <retval type='^{__CFNetDiagnostic=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFReadStream=}' />
    <arg type='^{__CFWriteStream=}' />
  </function>
  <function name='CFNetDiagnosticCreateWithURL'>
    <retval type='^{__CFNetDiagnostic=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFURL=}' />
  </function>
  <function name='CFNetDiagnosticDiagnoseProblemInteractively'>
    <retval type='l' />
    <arg type='^{__CFNetDiagnostic=}' />
  </function>
  <function name='CFNetDiagnosticSetName'>
    <arg type='^{__CFNetDiagnostic=}' />
    <arg type='^{__CFString=}' />
  </function>
  <function name='CFNetServiceBrowserCreate'>
    <retval type='^{__CFNetServiceBrowser=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^?' />
    <arg type='^{CFNetServiceClientContext=i^v^?^?^?}' type64='^{CFNetServiceClientContext=i^v^?^?^?}' />
  </function>
  <function name='CFNetServiceBrowserGetTypeID'>
    <retval type='L' type64='Q' />
  </function>
  <function name='CFNetServiceBrowserInvalidate'>
    <arg type='^{__CFNetServiceBrowser=}' />
  </function>
  <function name='CFNetServiceBrowserScheduleWithRunLoop'>
    <arg type='^{__CFNetServiceBrowser=}' />
    <arg type='^{__CFRunLoop=}' />
    <arg type='^{__CFString=}' />
  </function>
  <function name='CFNetServiceBrowserSearchForDomains'>
    <retval type='B' />
    <arg type='^{__CFNetServiceBrowser=}' />
    <arg type='B' />
    <arg type='^{_CFStreamError=ii}' type64='^{_CFStreamError=ii}' type_modifier='o' />
  </function>
  <function name='CFNetServiceBrowserSearchForServices'>
    <retval type='B' />
    <arg type='^{__CFNetServiceBrowser=}' />
    <arg type='^{__CFString=}' />
    <arg type='^{__CFString=}' />
    <arg type='^{_CFStreamError=ii}' type64='^{_CFStreamError=ii}' type_modifier='o' />
  </function>
  <function name='CFNetServiceBrowserStopSearch'>
    <arg type='^{__CFNetServiceBrowser=}' />
    <arg type='^{_CFStreamError=ii}' type64='^{_CFStreamError=ii}' type_modifier='o' />
  </function>
  <function name='CFNetServiceBrowserUnscheduleFromRunLoop'>
    <arg type='^{__CFNetServiceBrowser=}' />
    <arg type='^{__CFRunLoop=}' />
    <arg type='^{__CFString=}' />
  </function>
  <function name='CFNetServiceCancel'>
    <arg type='^{__CFNetService=}' />
  </function>
  <function name='CFNetServiceCreate'>
    <retval type='^{__CFNetService=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFString=}' />
    <arg type='^{__CFString=}' />
    <arg type='^{__CFString=}' />
    <arg type='l' type64='l' />
  </function>
  <function name='CFNetServiceCreateCopy'>
    <retval type='^{__CFNetService=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFNetService=}' />
  </function>
  <function name='CFNetServiceCreateDictionaryWithTXTData'>
    <retval type='^{__CFDictionary=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFData=}' />
  </function>
  <function name='CFNetServiceCreateTXTDataWithDictionary'>
    <retval type='^{__CFData=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFDictionary=}' />
  </function>
  <function name='CFNetServiceGetAddressing'>
    <retval type='^{__CFArray=}' />
    <arg type='^{__CFNetService=}' />
  </function>
  <function name='CFNetServiceGetDomain'>
    <retval type='^{__CFString=}' />
    <arg type='^{__CFNetService=}' />
  </function>
  <function name='CFNetServiceGetName'>
    <retval type='^{__CFString=}' />
    <arg type='^{__CFNetService=}' />
  </function>
  <function name='CFNetServiceGetPortNumber'>
    <retval type='l' type64='i' />
    <arg type='^{__CFNetService=}' />
  </function>
  <function name='CFNetServiceGetProtocolSpecificInformation'>
    <retval type='^{__CFString=}' />
    <arg type='^{__CFNetService=}' />
  </function>
  <function name='CFNetServiceGetTXTData'>
    <retval type='^{__CFData=}' />
    <arg type='^{__CFNetService=}' />
  </function>
  <function name='CFNetServiceGetTargetHost'>
    <retval type='^{__CFString=}' />
    <arg type='^{__CFNetService=}' />
  </function>
  <function name='CFNetServiceGetType'>
    <retval type='^{__CFString=}' />
    <arg type='^{__CFNetService=}' />
  </function>
  <function name='CFNetServiceGetTypeID'>
    <retval type='L' type64='Q' />
  </function>
  <function name='CFNetServiceMonitorCreate'>
    <retval type='^{__CFNetServiceMonitor=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFNetService=}' />
    <arg type='^?' />
    <arg type='^{CFNetServiceClientContext=i^v^?^?^?}' type64='^{CFNetServiceClientContext=i^v^?^?^?}' />
  </function>
  <function name='CFNetServiceMonitorGetTypeID'>
    <retval type='L' type64='Q' />
  </function>
  <function name='CFNetServiceMonitorInvalidate'>
    <arg type='^{__CFNetServiceMonitor=}' />
  </function>
  <function name='CFNetServiceMonitorScheduleWithRunLoop'>
    <arg type='^{__CFNetServiceMonitor=}' />
    <arg type='^{__CFRunLoop=}' />
    <arg type='^{__CFString=}' />
  </function>
  <function name='CFNetServiceMonitorStart'>
    <retval type='B' />
    <arg type='^{__CFNetServiceMonitor=}' />
    <arg type='i' />
    <arg type='^{_CFStreamError=ii}' type64='^{_CFStreamError=ii}' type_modifier='o' />
  </function>
  <function name='CFNetServiceMonitorStop'>
    <arg type='^{__CFNetServiceMonitor=}' />
    <arg type='^{_CFStreamError=ii}' type64='^{_CFStreamError=ii}' type_modifier='o' />
  </function>
  <function name='CFNetServiceMonitorUnscheduleFromRunLoop'>
    <arg type='^{__CFNetServiceMonitor=}' />
    <arg type='^{__CFRunLoop=}' />
    <arg type='^{__CFString=}' />
  </function>
  <function name='CFNetServiceRegister'>
    <retval type='B' />
    <arg type='^{__CFNetService=}' />
    <arg type='^{_CFStreamError=ii}' type64='^{_CFStreamError=ii}' type_modifier='o' />
  </function>
  <function name='CFNetServiceRegisterWithOptions'>
    <retval type='B' />
    <arg type='^{__CFNetService=}' />
    <arg type='L' type64='L' />
    <arg type='^{_CFStreamError=ii}' type64='^{_CFStreamError=ii}' type_modifier='o' />
  </function>
  <function name='CFNetServiceResolve'>
    <retval type='B' />
    <arg type='^{__CFNetService=}' />
    <arg type='^{_CFStreamError=ii}' type64='^{_CFStreamError=ii}' type_modifier='o' />
  </function>
  <function name='CFNetServiceResolveWithTimeout'>
    <retval type='B' />
    <arg type='^{__CFNetService=}' />
    <arg type='d' />
    <arg type='^{_CFStreamError=ii}' type64='^{_CFStreamError=ii}' type_modifier='o' />
  </function>
  <function name='CFNetServiceScheduleWithRunLoop'>
    <arg type='^{__CFNetService=}' />
    <arg type='^{__CFRunLoop=}' />
    <arg type='^{__CFString=}' />
  </function>
  <function name='CFNetServiceSetClient'>
    <retval type='B' />
    <arg type='^{__CFNetService=}' />
    <arg type='^?' />
    <arg type='^{CFNetServiceClientContext=i^v^?^?^?}' type64='^{CFNetServiceClientContext=i^v^?^?^?}' />
  </function>
  <function name='CFNetServiceSetProtocolSpecificInformation'>
    <arg type='^{__CFNetService=}' />
    <arg type='^{__CFString=}' />
  </function>
  <function name='CFNetServiceSetTXTData'>
    <retval type='B' />
    <arg type='^{__CFNetService=}' />
    <arg type='^{__CFData=}' />
  </function>
  <function name='CFNetServiceUnscheduleFromRunLoop'>
    <arg type='^{__CFNetService=}' />
    <arg type='^{__CFRunLoop=}' />
    <arg type='^{__CFString=}' />
  </function>
  <function name='CFNetworkCopyProxiesForAutoConfigurationScript'>
    <retval type='^{__CFArray=}' already_cfretained='true' />
    <arg type='^{__CFString=}' />
    <arg type='^{__CFURL=}' />
    <arg type='^^{__CFError}' type_modifier='o' />
  </function>
  <function name='CFNetworkCopyProxiesForURL'>
    <retval type='^{__CFArray=}' already_cfretained='true' />
    <arg type='^{__CFURL=}' />
    <arg type='^{__CFDictionary=}' />
  </function>
  <function name='CFNetworkCopySystemProxySettings'>
    <retval type='^{__CFDictionary=}' already_cfretained='true' />
  </function>
  <function name='CFReadStreamCreateForHTTPRequest'>
    <retval type='^{__CFReadStream=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFHTTPMessage=}' />
  </function>
  <function name='CFReadStreamCreateForStreamedHTTPRequest'>
    <retval type='^{__CFReadStream=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFHTTPMessage=}' />
    <arg type='^{__CFReadStream=}' />
  </function>
  <function name='CFReadStreamCreateWithFTPURL'>
    <retval type='^{__CFReadStream=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFURL=}' />
  </function>
  <function name='CFSocketStreamPairSetSecurityProtocol'>
    <retval type='B' />
    <arg type='^{__CFReadStream=}' />
    <arg type='^{__CFWriteStream=}' />
    <arg type='i' />
  </function>
  <function name='CFStreamCreatePairWithSocketToCFHost'>
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFHost=}' />
    <arg type='l' type64='l' />
    <arg type='^^{__CFReadStream}' already_cfretained='true' type_modifier='o' />
    <arg type='^^{__CFWriteStream}' already_cfretained='true' type_modifier='o' />
  </function>
  <function name='CFStreamCreatePairWithSocketToNetService'>
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFNetService=}' />
    <arg type='^^{__CFReadStream}' already_cfretained='true' type_modifier='o' />
    <arg type='^^{__CFWriteStream}' already_cfretained='true' type_modifier='o' />
  </function>
  <function name='CFWriteStreamCreateWithFTPURL'>
    <retval type='^{__CFWriteStream=}' already_cfretained='true' />
    <arg type='^{__CFAllocator=}' />
    <arg type='^{__CFURL=}' />
  </function>
  <function inline='true' name='CFSocketStreamSOCKSGetError'>
    <retval type='l' type64='i' />
    <arg type='^{_CFStreamError=ii}' type64='^{_CFStreamError=ii}' type_modifier='o' />
  </function>
  <function inline='true' name='CFSocketStreamSOCKSGetErrorSubdomain'>
    <retval type='l' type64='i' />
    <arg type='^{_CFStreamError=ii}' type64='^{_CFStreamError=ii}' type_modifier='o' />
  </function>
</signatures>
